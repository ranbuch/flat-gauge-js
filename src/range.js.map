{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/circle.ts","src/common.ts","src/edges.ts","src/interfaces.ts","src/range.ts"],"names":[],"mappings":"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","file":"range.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Circle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: CircleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.injectCss();\r\n\r\n        this.init();\r\n    }\r\n\r\n    injectCss(): void {\r\n        let className = '_all-gauge-js-circle-style';\r\n        if (document.querySelector('.' + className)) return;\r\n\r\n        let style = `@keyframes allGaugeRotatingCircle {\r\n            from {\r\n                transform: rotate(0deg);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }`;\r\n\r\n        let sheet = document.createElement('style');\r\n        sheet.innerHTML = style;\r\n        sheet.className = className;\r\n        document.body.appendChild(sheet);\r\n    }\r\n\r\n    public update(options: CircleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        if (typeof this.options.indent === 'undefined')\r\n            this.options.indent = 50;\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setSvg(this.options);\r\n        this.setElements(this.options);\r\n    }\r\n\r\n    setSvg(options: CircleOptions): void {\r\n        if (options.toDegree - options.fromDegree == 100)\r\n            options.toDegree -= 0.0001;\r\n        let startAngle = (options.fromDegree - this.options.indent) * 3.6, endAngle = (options.toDegree - this.options.indent) * 3.6;\r\n        let d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n\r\n        let svg = this.element.querySelector('svg');\r\n        let dim = options.radius * 2;\r\n        svg.style.transitionDuration = options.animationDuration;\r\n        svg.style.width = dim + 'px';\r\n        svg.style.height = dim + 'px';\r\n        svg.style.animation = `allGaugeRotatingCircle ${options.rotationSpeed}ms linear infinite`;\r\n        svg.setAttributeNS(null, 'width', dim + 'px');\r\n        svg.setAttributeNS(null, 'height', dim + 'px');\r\n        let path = svg.querySelector('[data-arc]');\r\n        path.setAttributeNS(null, 'stroke', options.colors.active);\r\n        path.setAttributeNS(null, 'stroke-width', options.strokeWidth);\r\n        if (d.indexOf('NaN') == -1)\r\n            path.setAttributeNS(null, 'd', d);\r\n        path.style.strokeWidth = options.strokeWidth + 'px';\r\n        path.style.transitionDuration = options.animationDuration;\r\n\r\n        let concealer = svg.querySelector('[data-concealer]');\r\n        if (options.hideBottom) {\r\n            startAngle = (33.334) * 3.6, endAngle = (66.667) * 3.6;\r\n            d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n            concealer.setAttributeNS(null, 'stroke-width', options.strokeWidth + 2);\r\n            concealer.setAttributeNS(null, 'd', d);\r\n            concealer.style.strokeWidth = (options.strokeWidth + 2) + 'px';\r\n            concealer.style.display = '';\r\n            let bgColor = options.backgroundColor;\r\n            if (!bgColor)\r\n                bgColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!bgColor)\r\n                bgColor = '#ffffff';\r\n            concealer.setAttributeNS(null, 'stroke', bgColor);\r\n        }\r\n        else\r\n            concealer.style.display = 'none';\r\n    }\r\n\r\n    setElements(options: CircleOptions): void {\r\n        // let circle = this.element.querySelector('div[data-circle]');\r\n        let circle = this.element.children[0];\r\n        let dim = this.options.radius * 2 + 'px';\r\n        circle.style.width = dim;\r\n        circle.style.height = dim;\r\n        circle.style.transitionDuration = options.animationDuration;\r\n\r\n        let c1 = circle.querySelector('[data-c1]');\r\n        c1.style.width = dim;\r\n        c1.style.height = dim;\r\n        c1.style.backgroundColor = this.options.colors.inactive;\r\n        c1.style.transitionDuration = options.animationDuration;\r\n        \r\n        let c3 = circle.querySelector('[data-c3]');\r\n        dim = ((options.radius * 2) - (options.strokeWidth * 2)) + 'px';\r\n        c3.style.width = dim;\r\n        c3.style.height = dim;\r\n        c3.style.top = options.strokeWidth + 'px';\r\n        c3.style.left = options.strokeWidth + 'px';\r\n        c3.style.backgroundColor = options.backgroundColor;\r\n        c3.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative; margin: auto; display: block;`,\r\n                'data-circle': 'true'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c1': '',\r\n                                'style': `position: absolute;top: 0; left: 0; z-index: 1; border-radius: 50%;`\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'svg',\r\n                            attrs: {\r\n                                'style': `position: absolute; top: 0;left: 0; z-index: 2; border-radius: unset;`\r\n                            },\r\n                            children: [\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-arc': ''\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-concealer': ''\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c3': '',\r\n                                'style': `position: absolute; z-index: 3; border-radius: 50%;`\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): any {\r\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    describeArc(x: number, y: number, radius: number, startAngle: number, endAngle: number): any {\r\n        var start = this.polarToCartesian(x, y, radius, endAngle);\r\n        var end = this.polarToCartesian(x, y, radius, startAngle);\r\n        var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n        var d = [\r\n            \"M\", start.x, start.y,\r\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n        ].join(\" \");\r\n        return d;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","import { JsonToHtmlElement, RGBA, InnerText, ColorPalette, MinMaxVal, FromTo, Time, SideState } from './interfaces';\r\n\r\nexport class Common {\r\n    static NameSpaceElements: Array<string> = ['svg', 'path', 'g'];\r\n    static xmlns: string = \"http://www.w3.org/2000/svg\";\r\n    // static needleWidthHeightRatio: number = 9.107127839547825;\r\n    static needleWidthHeightRatio: number = 8.69322239126;\r\n    extend(src: any, dest: any, copy?: boolean): any {\r\n        for (let i in src) {\r\n            if (typeof src[i] === 'object') {\r\n                if (dest && dest[i])\r\n                    src[i] = this.extend(src[i], dest[i]);\r\n            }\r\n            else if (typeof dest === 'object' && typeof dest[i] !== 'undefined') {\r\n                src[i] = dest[i];\r\n            }\r\n        }\r\n        if (copy)\r\n            return JSON.parse(JSON.stringify(src));\r\n        return src;\r\n    }\r\n\r\n    jsonToHtml(obj: JsonToHtmlElement): any {\r\n        let elm = null, isNsElem = Common.NameSpaceElements.filter(x => x == obj.type).length > 0;\r\n        if (isNsElem)\r\n            elm = document.createElementNS(Common.xmlns, obj.type);\r\n        else\r\n            elm = document.createElement(obj.type);\r\n        for (var i in obj.attrs) {\r\n            if (isNsElem)\r\n                elm.setAttributeNS(null, i, obj.attrs[i]);\r\n            else\r\n                elm.setAttribute(i, obj.attrs[i]);\r\n        }\r\n        for (let i in obj.children) {\r\n            let newElem = null;\r\n            if (obj.children[i].type == '#text')\r\n                newElem = document.createTextNode(obj.children[i].text);\r\n            else\r\n                newElem = this.jsonToHtml(obj.children[i]);\r\n            if ((newElem && newElem.tagName && newElem.tagName.toLowerCase() !== 'undefined') || newElem.nodeType == 3)\r\n                elm.appendChild(newElem);\r\n        }\r\n        return elm;\r\n    }\r\n\r\n    isHex(str: string): boolean {\r\n        return str.indexOf('#') > -1;\r\n    }\r\n\r\n    isRgba(str: string) {\r\n        return str.split(',').length > 3;\r\n    }\r\n\r\n    toRgbObj(rgba: string): RGBA {\r\n        let arr = rgba.split(',').map((item) => {\r\n            return parseInt(item, 10);\r\n        });\r\n        return {\r\n            Red: arr[0],\r\n            Green: arr[1],\r\n            Blue: arr[2],\r\n            Alpha: arr[3]\r\n        };\r\n    }\r\n\r\n    RgbObjToString(rgba: RGBA): string {\r\n        let ans = '(' + rgba.Red + ',' + rgba.Green + ',' + rgba.Blue;\r\n        if (rgba.Alpha)\r\n            ans += ',' + rgba.Alpha\r\n        ans += ')';\r\n        return ans;\r\n    }\r\n\r\n    hexToRgb(hex: string): RGBA {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m: string, r: string, g: string, b: string) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            Red: parseInt(result[1], 16),\r\n            Green: parseInt(result[2], 16),\r\n            Blue: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    setInnerTextDefaults(innerText?: InnerText): InnerText {\r\n        if (!innerText)\r\n            innerText = {\r\n                text: ''\r\n            };\r\n        if (!innerText.text)\r\n            innerText.text = '';\r\n        if (!innerText.fontSize)\r\n            innerText.fontSize = 18;\r\n        if (!innerText.lineHeight)\r\n            innerText.lineHeight = innerText.fontSize;\r\n        if (!innerText.fontFamily)\r\n            innerText.fontFamily = 'Arial,Utkal,sans-serif';\r\n        if (!innerText.fontWeight)\r\n            innerText.fontWeight = 'normal';\r\n        if (!innerText.letterSpacing)\r\n            innerText.letterSpacing = '0';\r\n        return innerText;\r\n    }\r\n\r\n    getComputedStyleByParentRec(elem: any, cssProp: string): string {\r\n        if (!elem) return null;\r\n        let css = getComputedStyle(elem) as any;\r\n        let val = css[cssProp];\r\n        if (val && val != 'rgba(0, 0, 0, 0)') return val;\r\n        return this.getComputedStyleByParentRec(elem.parentElement, cssProp);\r\n    }\r\n\r\n    // odd strokeWidth is not supported\r\n    fixStrokeWidth(sw: number): number {\r\n        if (sw % 2 == 1)\r\n            console.warn('all-gauge: stroke-width \"' + sw + '\" is not supported (odd), changed to \"' + (++sw)) + '\"';\r\n        return sw;\r\n    }\r\n\r\n    // odd radius is not supported\r\n    fixRadius(r: number): number {\r\n        if (r % 2 == 1)\r\n            console.warn('all-gauge: radius \"' + r + '\" is not supported (odd), changed to \"' + (++r)) + '\"';\r\n        return r;\r\n    }\r\n\r\n    getDefaultColors(): ColorPalette {\r\n        return {\r\n            active: '#4CCEAD',\r\n            default: '#505050',\r\n            inactive: '#ededed'\r\n        };\r\n    }\r\n\r\n    getNeedleInnerStyle(radius: number): any {\r\n        return {\r\n            'height': (radius + 20) + 'px',\r\n            'width': (radius / Common.needleWidthHeightRatio) + 'px'\r\n        };\r\n    }\r\n\r\n    getNeedleStyle(radius: number, arcNeedlePercentage: number, scale: number, indent: number = 50) {\r\n        if (typeof scale !== 'number')\r\n            scale = 1.125;\r\n        let deg = (arcNeedlePercentage - indent) * 3.6;\r\n        return {\r\n            'left': 'calc(50% - ' + ((radius / Common.needleWidthHeightRatio)) / 2 + 'px',\r\n            'transform': 'rotate(' + deg + 'deg) scale(' + scale + ')'\r\n        };\r\n    }\r\n\r\n    isInRange(minMaxVal: MinMaxVal, sides: SideState) {\r\n        switch (sides) {\r\n            case SideState.Both: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n            case SideState.None: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Left: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Right: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    normalizeByPercentage(value: number, percentage: number, mid?: number, max?: number): number {\r\n        if (typeof mid === 'undefined')\r\n            mid = 50;\r\n        if (typeof max === 'undefined')\r\n            max = mid * 2;\r\n        let rel = null;\r\n\r\n        if (value > mid) {\r\n            percentage /= 2;\r\n            rel = Math.abs(mid - value);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value * (1 - percentage);\r\n        }\r\n        else {\r\n            if (value == 0.0)\r\n                value = 0.001;\r\n            rel = Math.abs(value - mid);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value + (mid * (percentage));\r\n        }\r\n    }\r\n\r\n    getRemainder(range: FromTo, hour: number) {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) {\r\n            return current - range.from;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isHourInRange(range: FromTo, hour: number): boolean {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) return true;\r\n        return false;\r\n    }\r\n\r\n    getPercentageByTime(dateTime: Date): number {\r\n        let secondsInADay = 86400; //24 * 60 * 60;\r\n        let hours = dateTime.getHours() * 3600; //60 * 60;\r\n        let minutes = dateTime.getMinutes() * 60;\r\n        let seconds = dateTime.getSeconds();\r\n        let totalSeconds = hours + minutes + seconds;\r\n        let percentSeconds = 100 * totalSeconds / secondsInADay;\r\n        return percentSeconds;\r\n        // let max = 86400000; // 1000 * 60 * 60 * 24 is the number of milliseconds on a 24 hours day.\r\n        // let hours = dateTime.getHours();\r\n        // let minutes = dateTime.getMinutes();\r\n        // let seconds = dateTime.getSeconds();\r\n        // let total = (hours * 1000 * 60 * 60) + (minutes * 1000 * 60) + (seconds * 1000);\r\n        // let percentage = total / max;\r\n        // return percentage * 100;\r\n    }\r\n\r\n    getMinutesFromHour(hour: string) {\r\n        let arr = hour.split(':');\r\n        return parseInt(arr[0].trim()) * 60 + parseInt(arr[1].trim());\r\n    }\r\n\r\n    getMinutesFromStart(hour: string, start = 0) {\r\n        let arr = hour.split(':');\r\n        return Math.max((parseInt(arr[0].trim()) * 60 + (parseInt(arr[1].trim()))) - start, 0);\r\n    }\r\n\r\n    getHoursAndMinutesLT(date: Date): string {\r\n        let hours = date.getHours();\r\n        hours = (hours + 24 - 2) % 24;\r\n        let mid = 'am';\r\n        if (hours == 0) { //At 00 hours we need to show 12 am\r\n            hours = 12;\r\n        }\r\n        else if (hours > 12) {\r\n            hours = hours % 12;\r\n            mid = 'pm';\r\n        }\r\n        return hours + ':' + date.getMinutes() + ' ' + mid;\r\n    }\r\n\r\n    getSecondsFromTime(timer: Time): number {\r\n        let hours = 0;\r\n        hours += timer.hours * 3600;\r\n        hours += timer.minutes * 60;\r\n        hours += timer.seconds;\r\n        return hours;\r\n    }\r\n\r\n    setTimeToZero(timer: Time): void {\r\n        timer.hours = 0;\r\n        timer.minutes = 0;\r\n        timer.seconds = 0;\r\n    }\r\n\r\n    decreaseTime(timer: Time): boolean {\r\n        if (timer.seconds > 0) {\r\n            if (--timer.seconds < 0) {\r\n                timer.seconds = 59;\r\n                if (--timer.minutes < 0) {\r\n                    timer.minutes = 59;\r\n                    if (--timer.hours < 0) {\r\n                        this.setTimeToZero(timer);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (timer.minutes > 0) {\r\n            timer.seconds = 59;\r\n            if (--timer.minutes < 0) {\r\n                timer.minutes = 59;\r\n                if (--timer.hours < 0) {\r\n                    this.setTimeToZero(timer);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (timer.hours > 0) {\r\n            timer.minutes = 59;\r\n            if (--timer.hours < 0) {\r\n                this.setTimeToZero(timer);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.isTimeZero(timer)) {\r\n            this.setTimeToZero(timer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTimeZero(timer: Time): boolean {\r\n        if (timer.hours <= 0 && timer.minutes <= 0 && timer.seconds <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    padWithZiro(text: string) {\r\n        if (String(text).length < 2)\r\n            text = '0' + text;\r\n        return text;\r\n    }\r\n\r\n    getSideStateByString(state: string): SideState {\r\n        if (!state) return SideState.None;\r\n        switch (state.toLowerCase()) {\r\n            case 'left':\r\n                return SideState.Left;\r\n            case 'right':\r\n                return SideState.Right;\r\n            case 'both':\r\n                return SideState.Both;\r\n            case 'none':\r\n                return SideState.None;\r\n            default:\r\n                return SideState.None\r\n        }\r\n    }\r\n}","import { EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Edges {\r\n    private leftElement: any;\r\n    private rightElement: any;\r\n    private common: Common;\r\n\r\n    static AddToEdge: number = 4;\r\n    static AddToEdgeHeight: number = 4;\r\n\r\n    constructor(private options?: EdgesOptions) {\r\n        this.common = new Common();\r\n\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        this.options = this.common.extend(defaultOptions, options);\r\n        \r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): EdgesOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500;\r\n        return {\r\n            color: colors.active,\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            radius: defRadius,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            hollowEdges: SideState.None,\r\n            backgroundColor: '#ffffff',\r\n            indent: 50\r\n        } as EdgesOptions;\r\n    }\r\n\r\n    init() {\r\n        this.leftElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-left-edge': ''\r\n                }\r\n            });\r\n\r\n        this.rightElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-right-edge': ''\r\n                }\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: EdgesOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions() {\r\n        this.setSpans(this.options);\r\n    }\r\n\r\n    setSpans(options: EdgesOptions) {\r\n        let height = (options.strokeWidth + Edges.AddToEdge + Edges.AddToEdgeHeight) + 'px';\r\n        let top = 'calc(50% - ' + ((options.strokeWidth / 2) + (Edges.AddToEdge / 2) + (Edges.AddToEdgeHeight / 2)) + 'px)';\r\n        let leftStyle = 'calc(50% - ' + (Edges.AddToEdge / 2) + 'px)';\r\n\r\n        // let bgColor = this.common.getComputedStyleByParentRec(this.leftElement, 'backgroundColor');\r\n        // if (!bgColor)\r\n        let bgColor = this.options.backgroundColor;\r\n\r\n        let left = this.leftElement;\r\n        left.style.height = height;\r\n        left.style.top = top;\r\n        left.style.left = leftStyle;\r\n        left.style.backgroundColor = options.color;\r\n        left.style.transitionDuration = options.animationDuration + 'ms';\r\n        // left.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Left || options.hollowEdges == SideState.Both) {\r\n            left.style.border = 'solid 1px ' + options.color;\r\n            left.style.backgroundColor = bgColor;\r\n            // left.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // left.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let right = this.rightElement;\r\n        right.style.height = height;\r\n        right.style.top = top;\r\n        right.style.left = leftStyle;\r\n        right.style.backgroundColor = options.color;\r\n        right.style.transitionDuration = options.animationDuration + 'ms';\r\n        // right.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Right || options.hollowEdges == SideState.Both) {\r\n            right.style.border = 'solid 1px ' + options.color;\r\n            right.style.backgroundColor = bgColor;\r\n            // right.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // right.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let scalar = options.radius - (options.strokeWidth / 2), xVectorLeft, yVectorLeft, xVectorRight, yVectorRight;\r\n        let degLeft = (options.minMaxVal.min - this.options.indent) * 3.6;\r\n        let degRight = (options.minMaxVal.max - this.options.indent) * 3.6;\r\n        xVectorLeft = Math.sin(degLeft * (Math.PI / 180)) * scalar;\r\n        yVectorLeft = -Math.cos(degLeft * (Math.PI / 180)) * scalar;\r\n        left.style.transform = `translate3d(${xVectorLeft}px, ${yVectorLeft}px, 0) rotate(${degLeft}deg)`;\r\n        xVectorRight = Math.sin(degRight * (Math.PI / 180)) * scalar;\r\n        yVectorRight = -Math.cos(degRight * (Math.PI / 180)) * scalar;\r\n        right.style.transform = `translate3d(${xVectorRight}px, ${yVectorRight}px, 0) rotate(${degRight}deg)`;\r\n    }\r\n\r\n    public getLeftElement(): any {\r\n        return this.leftElement;\r\n    }\r\n\r\n    public getRightElement(): any {\r\n        return this.rightElement;\r\n    }\r\n}","export interface ColorPalette {\r\n    default: string;\r\n    active: string;\r\n    inactive: string;\r\n}\r\n\r\nexport interface CircleOptions {\r\n    colors?: ColorPalette;\r\n    fromDegree?: number;\r\n    toDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    animationDuration?: number;\r\n    backgroundColor?: string;\r\n    hideBottom: boolean;\r\n    indent?: number;\r\n}\r\n\r\nexport interface SpinnerOptions {\r\n    colors?: ColorPalette;\r\n    activeDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    title?: InnerText;\r\n    animationDuration?: number;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport interface InnerText {\r\n    text: string;\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    lineHeight?: number;\r\n    fontWeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport interface JsonToHtmlElement {\r\n    type: string;\r\n    text?: string;\r\n    attrs?: any;\r\n    children?: Array<JsonToHtmlElement>;\r\n}\r\n\r\nexport interface RGBA {\r\n    Red: number;\r\n    Green: number;\r\n    Blue: number;\r\n    Alpha?: number;\r\n}\r\n\r\nexport interface MinMaxVal {\r\n    min: number;\r\n    max: number;\r\n    value?: number;\r\n}\r\n\r\nexport interface NeedleOptions {\r\n    color: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    scale: number;\r\n    animationDuration?: number;\r\n    disabled?: boolean;\r\n    indent?: number;\r\n}\r\n\r\nexport interface TuneOptions {\r\n    needleOptions?: NeedleOptions;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    // title?: InnerText;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n}\r\n\r\n// export interface MinMaxEdge {\r\n//     minMaxVal: MinMaxVal;\r\n//     leftEdges?: SinngleSideState;\r\n//     rightEdges?: SinngleSideState;\r\n//     bgColor: string;\r\n// }\r\n\r\nexport interface MultituneOptions {\r\n    needleOptions: NeedleOptions;\r\n    segments: Array<MinMaxVal>;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface RangeOptions {\r\n    colors?: ColorPalette;\r\n    minMaxVal: MinMaxVal;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    hideBottom: boolean;\r\n    title?: InnerText;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport enum SideState {\r\n    None,\r\n    Left,\r\n    Right,\r\n    Both,\r\n}\r\n\r\n// export enum SinngleSideState {\r\n//     None,\r\n//     Hollow,\r\n//     Full,\r\n// }\r\n\r\nexport interface EdgesOptions {\r\n    color: string;\r\n    backgroundColor?: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    strokeWidth: number;\r\n    animationDuration?: number;\r\n    hollowEdges?: SideState;\r\n    indent?: number;\r\n}\r\n\r\nexport interface IconOptions {\r\n    degree: number;\r\n    radius: number;\r\n\tradiusOffset?: number;\r\n    animationDuration?: number;\r\n    src: string;\r\n    dimensions: {\r\n        width: number;\r\n        height: number;\r\n    },\r\n    top?: number;\r\n    left?: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface NumberData {\r\n        number: string;\r\n        isActive: boolean;\r\n        remainder: number;\r\n    }\r\n\r\nexport interface AmPmOptions {\r\n    fromTo: FromToString;\r\n    needleOptions?: NeedleOptions;\r\n    colors?: ColorPalette;\r\n    radius: number;\r\n    minMaxValAm?: MinMaxVal;\r\n    minMaxValPm?: MinMaxVal;\r\n    animationDuration?: number;\r\n    strokeWidth?: number;\r\n    hollowEdgesAm?: SideState;\r\n    hollowEdgesPm?: SideState;\r\n    showEdgesAm?: boolean;\r\n    showEdgesPm?: boolean;\r\n}\r\n\r\nexport interface FromTo {\r\n        from: number;\r\n        to: number;\r\n    }\r\n\r\nexport interface FromToString {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nexport interface Time {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n}\r\n\r\nexport interface TimerOptions {\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    time: Time;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    title?: InnerText;\r\n    percentage?: number;\r\n}","import { RangeOptions, CircleOptions, JsonToHtmlElement, EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Edges } from './edges';\r\n\r\nexport class Range {\r\n    private element: any;\r\n    private options: RangeOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    constructor(element: any, options?: RangeOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.minMaxVal.max = this.common.normalizeByPercentage(this.options.minMaxVal.max, portionToHide);\r\n            this.options.minMaxVal.min = this.common.normalizeByPercentage(this.options.minMaxVal.min, portionToHide);\r\n            this.options.minMaxVal.value = this.common.normalizeByPercentage(this.options.minMaxVal.value, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-range': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        this.updateOptions(false);\r\n\r\n        \r\n\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        \r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: RangeOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setTitle(this.options);\r\n        this.setCircle();\r\n        this.setEdges();\r\n    }\r\n\r\n    setTitle(options: RangeOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        if (!h4) return;\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        h4.style.top = 'calc(50% - ' + (options.title.lineHeight / 2) + 'px)';\r\n    }\r\n\r\n    setWrap(options: RangeOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): RangeOptions {\r\n        return {\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            colors: this.common.getDefaultColors(),\r\n            strokeWidth: 6,\r\n            animationDuration: 500,\r\n            radius: 88,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            hideBottom: true,\r\n            highlight: false\r\n        } as RangeOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        \r\n        this.circleOptions.fromDegree = this.options.minMaxVal.min;\r\n        this.circleOptions.toDegree = this.options.minMaxVal.max;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        \r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY2lyY2xlLnRzIiwic3JjL2NvbW1vbi50cyIsInNyYy9lZGdlcy50cyIsInNyYy9pbnRlcmZhY2VzLnRzIiwic3JjL3JhbmdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDQ0EsdUJBQWtDO0FBRWxDO0FBR0ksb0JBQW9CLEFBQXNCO0FBQXRCLGFBQU8sVUFBUCxBQUFPLEFBQWU7QUFDdEMsQUFBSSxhQUFDLEFBQU0sU0FBRyxJQUFJLFNBQU0sQUFBRSxBQUFDO0FBRTNCLEFBQUksYUFBQyxBQUFTLEFBQUUsQUFBQztBQUVqQixBQUFJLGFBQUMsQUFBSSxBQUFFLEFBQUMsQUFDaEI7QUFBQztBQUVELHFCQUFTLFlBQVQ7QUFDSSxZQUFJLEFBQVMsWUFBRyxBQUE0QixBQUFDO0FBQzdDLEFBQUUsQUFBQyxZQUFDLEFBQVEsU0FBQyxBQUFhLGNBQUMsQUFBRyxNQUFHLEFBQVMsQUFBQyxBQUFDLFlBQUMsQUFBTSxBQUFDO0FBRXBELFlBQUksQUFBSyxRQUFHLEFBT1YsQUFBQztBQUVILFlBQUksQUFBSyxRQUFHLEFBQVEsU0FBQyxBQUFhLGNBQUMsQUFBTyxBQUFDLEFBQUM7QUFDNUMsQUFBSyxjQUFDLEFBQVMsWUFBRyxBQUFLLEFBQUM7QUFDeEIsQUFBSyxjQUFDLEFBQVMsWUFBRyxBQUFTLEFBQUM7QUFDNUIsQUFBUSxpQkFBQyxBQUFJLEtBQUMsQUFBVyxZQUFDLEFBQUssQUFBQyxBQUFDLEFBQ3JDO0FBQUM7QUFFTSxxQkFBTSxTQUFiLFVBQWMsQUFBc0I7QUFDaEMsQUFBSSxhQUFDLEFBQU8sVUFBRyxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQU0sT0FBQyxBQUFJLEtBQUMsQUFBTyxTQUFFLEFBQU8sQUFBQyxBQUFDO0FBQ3pELEFBQUUsQUFBQyxZQUFDLE9BQU8sQUFBSSxLQUFDLEFBQU8sUUFBQyxBQUFNLFdBQUssQUFBVyxBQUFDLGFBQzNDLEFB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LEFBQUM7QUFDNUIsQUFBSyxzQkFBQyxBQUFLLE1BQUMsQUFBTyxVQUFHLEFBQU0sQUFBQyxBQUNqQztBQUFDLEFBQ0QsQUFBSSxtQkFBQyxBQUFDO0FBQ0YsQUFBSSxxQkFBQyxBQUFLLE1BQUMsQUFBTyxVQUFHLEFBQWMsQUFBQztBQUNwQyxBQUFLLHNCQUFDLEFBQUssTUFBQyxBQUFPLFVBQUcsQUFBYyxBQUFDLEFBQ3pDO0FBQUMsQUFDTDtBQUFDLEFBQ0w7QUFBQztBQUNMLFdBQUEsQUFBQztBQXhLRCxBQXdLQztBQXhLWSxnQkFBSyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgeyBDaXJjbGVPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuaW1wb3J0IHsgQ29tbW9uIH0gZnJvbSAnLi9jb21tb24nO1xyXG5cclxuZXhwb3J0IGNsYXNzIENpcmNsZSB7XHJcbiAgICBwcml2YXRlIGVsZW1lbnQ6IGFueTtcclxuICAgIHByaXZhdGUgY29tbW9uOiBDb21tb247XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnM6IENpcmNsZU9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLmNvbW1vbiA9IG5ldyBDb21tb24oKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbmplY3RDc3MoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5qZWN0Q3NzKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBjbGFzc05hbWUgPSAnX2FsbC1nYXVnZS1qcy1jaXJjbGUtc3R5bGUnO1xyXG4gICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIGNsYXNzTmFtZSkpIHJldHVybjtcclxuXHJcbiAgICAgICAgbGV0IHN0eWxlID0gYEBrZXlmcmFtZXMgYWxsR2F1Z2VSb3RhdGluZ0NpcmNsZSB7XHJcbiAgICAgICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdG8ge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1gO1xyXG5cclxuICAgICAgICBsZXQgc2hlZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICAgIHNoZWV0LmlubmVySFRNTCA9IHN0eWxlO1xyXG4gICAgICAgIHNoZWV0LmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNoZWV0KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IENpcmNsZU9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5pbmRlbnQgPT09ICd1bmRlZmluZWQnKVxyXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuaW5kZW50ID0gNTA7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlT3B0aW9ucygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNldFN2Zyh0aGlzLm9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0RWxlbWVudHModGhpcy5vcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRTdmcob3B0aW9uczogQ2lyY2xlT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIGlmIChvcHRpb25zLnRvRGVncmVlIC0gb3B0aW9ucy5mcm9tRGVncmVlID09IDEwMClcclxuICAgICAgICAgICAgb3B0aW9ucy50b0RlZ3JlZSAtPSAwLjAwMDE7XHJcbiAgICAgICAgbGV0IHN0YXJ0QW5nbGUgPSAob3B0aW9ucy5mcm9tRGVncmVlIC0gdGhpcy5vcHRpb25zLmluZGVudCkgKiAzLjYsIGVuZEFuZ2xlID0gKG9wdGlvbnMudG9EZWdyZWUgLSB0aGlzLm9wdGlvbnMuaW5kZW50KSAqIDMuNjtcclxuICAgICAgICBsZXQgZCA9IHRoaXMuZGVzY3JpYmVBcmMob3B0aW9ucy5yYWRpdXMsIG9wdGlvbnMucmFkaXVzLCBvcHRpb25zLnJhZGl1cyAtIChvcHRpb25zLnN0cm9rZVdpZHRoIC8gMiksIHN0YXJ0QW5nbGUsIGVuZEFuZ2xlKTtcclxuXHJcbiAgICAgICAgbGV0IHN2ZyA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdzdmcnKTtcclxuICAgICAgICBsZXQgZGltID0gb3B0aW9ucy5yYWRpdXMgKiAyO1xyXG4gICAgICAgIHN2Zy5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uO1xyXG4gICAgICAgIHN2Zy5zdHlsZS53aWR0aCA9IGRpbSArICdweCc7XHJcbiAgICAgICAgc3ZnLnN0eWxlLmhlaWdodCA9IGRpbSArICdweCc7XHJcbiAgICAgICAgc3ZnLnN0eWxlLmFuaW1hdGlvbiA9IGBhbGxHYXVnZVJvdGF0aW5nQ2lyY2xlICR7b3B0aW9ucy5yb3RhdGlvblNwZWVkfW1zIGxpbmVhciBpbmZpbml0ZWA7XHJcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZU5TKG51bGwsICd3aWR0aCcsIGRpbSArICdweCcpO1xyXG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnaGVpZ2h0JywgZGltICsgJ3B4Jyk7XHJcbiAgICAgICAgbGV0IHBhdGggPSBzdmcucXVlcnlTZWxlY3RvcignW2RhdGEtYXJjXScpO1xyXG4gICAgICAgIHBhdGguc2V0QXR0cmlidXRlTlMobnVsbCwgJ3N0cm9rZScsIG9wdGlvbnMuY29sb3JzLmFjdGl2ZSk7XHJcbiAgICAgICAgcGF0aC5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnc3Ryb2tlLXdpZHRoJywgb3B0aW9ucy5zdHJva2VXaWR0aCk7XHJcbiAgICAgICAgaWYgKGQuaW5kZXhPZignTmFOJykgPT0gLTEpXHJcbiAgICAgICAgICAgIHBhdGguc2V0QXR0cmlidXRlTlMobnVsbCwgJ2QnLCBkKTtcclxuICAgICAgICBwYXRoLnN0eWxlLnN0cm9rZVdpZHRoID0gb3B0aW9ucy5zdHJva2VXaWR0aCArICdweCc7XHJcbiAgICAgICAgcGF0aC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uO1xyXG5cclxuICAgICAgICBsZXQgY29uY2VhbGVyID0gc3ZnLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNvbmNlYWxlcl0nKTtcclxuICAgICAgICBpZiAob3B0aW9ucy5oaWRlQm90dG9tKSB7XHJcbiAgICAgICAgICAgIHN0YXJ0QW5nbGUgPSAoMzMuMzM0KSAqIDMuNiwgZW5kQW5nbGUgPSAoNjYuNjY3KSAqIDMuNjtcclxuICAgICAgICAgICAgZCA9IHRoaXMuZGVzY3JpYmVBcmMob3B0aW9ucy5yYWRpdXMsIG9wdGlvbnMucmFkaXVzLCBvcHRpb25zLnJhZGl1cyAtIChvcHRpb25zLnN0cm9rZVdpZHRoIC8gMiksIHN0YXJ0QW5nbGUsIGVuZEFuZ2xlKTtcclxuICAgICAgICAgICAgY29uY2VhbGVyLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2Utd2lkdGgnLCBvcHRpb25zLnN0cm9rZVdpZHRoICsgMik7XHJcbiAgICAgICAgICAgIGNvbmNlYWxlci5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnZCcsIGQpO1xyXG4gICAgICAgICAgICBjb25jZWFsZXIuc3R5bGUuc3Ryb2tlV2lkdGggPSAob3B0aW9ucy5zdHJva2VXaWR0aCArIDIpICsgJ3B4JztcclxuICAgICAgICAgICAgY29uY2VhbGVyLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICAgICAgICAgICAgbGV0IGJnQ29sb3IgPSBvcHRpb25zLmJhY2tncm91bmRDb2xvcjtcclxuICAgICAgICAgICAgaWYgKCFiZ0NvbG9yKVxyXG4gICAgICAgICAgICAgICAgYmdDb2xvciA9IHRoaXMuY29tbW9uLmdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyh0aGlzLmVsZW1lbnQsICdiYWNrZ3JvdW5kQ29sb3InKTtcclxuICAgICAgICAgICAgaWYgKCFiZ0NvbG9yKVxyXG4gICAgICAgICAgICAgICAgYmdDb2xvciA9ICcjZmZmZmZmJztcclxuICAgICAgICAgICAgY29uY2VhbGVyLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2UnLCBiZ0NvbG9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICBjb25jZWFsZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIH1cclxuXHJcbiAgICBzZXRFbGVtZW50cyhvcHRpb25zOiBDaXJjbGVPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgLy8gbGV0IGNpcmNsZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdkaXZbZGF0YS1jaXJjbGVdJyk7XHJcbiAgICAgICAgbGV0IGNpcmNsZSA9IHRoaXMuZWxlbWVudC5jaGlsZHJlblswXTtcclxuICAgICAgICBsZXQgZGltID0gdGhpcy5vcHRpb25zLnJhZGl1cyAqIDIgKyAncHgnO1xyXG4gICAgICAgIGNpcmNsZS5zdHlsZS53aWR0aCA9IGRpbTtcclxuICAgICAgICBjaXJjbGUuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIGNpcmNsZS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uO1xyXG5cclxuICAgICAgICBsZXQgYzEgPSBjaXJjbGUucXVlcnlTZWxlY3RvcignW2RhdGEtYzFdJyk7XHJcbiAgICAgICAgYzEuc3R5bGUud2lkdGggPSBkaW07XHJcbiAgICAgICAgYzEuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIGMxLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvcnMuaW5hY3RpdmU7XHJcbiAgICAgICAgYzEuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgYzMgPSBjaXJjbGUucXVlcnlTZWxlY3RvcignW2RhdGEtYzNdJyk7XHJcbiAgICAgICAgZGltID0gKChvcHRpb25zLnJhZGl1cyAqIDIpIC0gKG9wdGlvbnMuc3Ryb2tlV2lkdGggKiAyKSkgKyAncHgnO1xyXG4gICAgICAgIGMzLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIGMzLnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICBjMy5zdHlsZS50b3AgPSBvcHRpb25zLnN0cm9rZVdpZHRoICsgJ3B4JztcclxuICAgICAgICBjMy5zdHlsZS5sZWZ0ID0gb3B0aW9ucy5zdHJva2VXaWR0aCArICdweCc7XHJcbiAgICAgICAgYzMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gb3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3I7XHJcbiAgICAgICAgYzMuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuY29tbW9uLmpzb25Ub0h0bWwoe1xyXG4gICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICdzdHlsZSc6IGBwb3NpdGlvbjogcmVsYXRpdmU7IG1hcmdpbjogYXV0bzsgZGlzcGxheTogYmxvY2s7YCxcclxuICAgICAgICAgICAgICAgICdkYXRhLWNpcmNsZSc6ICd0cnVlJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdkaXYnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYzEnOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgcG9zaXRpb246IGFic29sdXRlO3RvcDogMDsgbGVmdDogMDsgei1pbmRleDogMTsgYm9yZGVyLXJhZGl1czogNTAlO2BcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N2ZycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzdHlsZSc6IGBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDtsZWZ0OiAwOyB6LWluZGV4OiAyOyBib3JkZXItcmFkaXVzOiB1bnNldDtgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwYXRoJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmaWxsJzogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYXJjJzogJydcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGF0aCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZmlsbCc6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLWNvbmNlYWxlcic6ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYzMnOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgcG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAzOyBib3JkZXItcmFkaXVzOiA1MCU7YFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHBvbGFyVG9DYXJ0ZXNpYW4oY2VudGVyWDogbnVtYmVyLCBjZW50ZXJZOiBudW1iZXIsIHJhZGl1czogbnVtYmVyLCBhbmdsZUluRGVncmVlczogbnVtYmVyKTogYW55IHtcclxuICAgICAgICB2YXIgYW5nbGVJblJhZGlhbnMgPSAoYW5nbGVJbkRlZ3JlZXMgLSA5MCkgKiBNYXRoLlBJIC8gMTgwLjA7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgeDogY2VudGVyWCArIChyYWRpdXMgKiBNYXRoLmNvcyhhbmdsZUluUmFkaWFucykpLFxyXG4gICAgICAgICAgICB5OiBjZW50ZXJZICsgKHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlSW5SYWRpYW5zKSlcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGRlc2NyaWJlQXJjKHg6IG51bWJlciwgeTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgc3RhcnRBbmdsZTogbnVtYmVyLCBlbmRBbmdsZTogbnVtYmVyKTogYW55IHtcclxuICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLnBvbGFyVG9DYXJ0ZXNpYW4oeCwgeSwgcmFkaXVzLCBlbmRBbmdsZSk7XHJcbiAgICAgICAgdmFyIGVuZCA9IHRoaXMucG9sYXJUb0NhcnRlc2lhbih4LCB5LCByYWRpdXMsIHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgIHZhciBsYXJnZUFyY0ZsYWcgPSBlbmRBbmdsZSAtIHN0YXJ0QW5nbGUgPD0gMTgwID8gXCIwXCIgOiBcIjFcIjtcclxuICAgICAgICB2YXIgZCA9IFtcclxuICAgICAgICAgICAgXCJNXCIsIHN0YXJ0LngsIHN0YXJ0LnksXHJcbiAgICAgICAgICAgIFwiQVwiLCByYWRpdXMsIHJhZGl1cywgMCwgbGFyZ2VBcmNGbGFnLCAwLCBlbmQueCwgZW5kLnlcclxuICAgICAgICBdLmpvaW4oXCIgXCIpO1xyXG4gICAgICAgIHJldHVybiBkO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRFbGVtZW50KCk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudDtcclxuICAgIH1cclxufSIsImltcG9ydCB7IEpzb25Ub0h0bWxFbGVtZW50LCBSR0JBLCBJbm5lclRleHQsIENvbG9yUGFsZXR0ZSwgTWluTWF4VmFsLCBGcm9tVG8sIFRpbWUsIFNpZGVTdGF0ZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29tbW9uIHtcclxuICAgIHN0YXRpYyBOYW1lU3BhY2VFbGVtZW50czogQXJyYXk8c3RyaW5nPiA9IFsnc3ZnJywgJ3BhdGgnLCAnZyddO1xyXG4gICAgc3RhdGljIHhtbG5zOiBzdHJpbmcgPSBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XHJcbiAgICAvLyBzdGF0aWMgbmVlZGxlV2lkdGhIZWlnaHRSYXRpbzogbnVtYmVyID0gOS4xMDcxMjc4Mzk1NDc4MjU7XHJcbiAgICBzdGF0aWMgbmVlZGxlV2lkdGhIZWlnaHRSYXRpbzogbnVtYmVyID0gOC42OTMyMjIzOTEyNjtcclxuICAgIGV4dGVuZChzcmM6IGFueSwgZGVzdDogYW55LCBjb3B5PzogYm9vbGVhbik6IGFueSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiBzcmMpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzcmNbaV0gPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGVzdCAmJiBkZXN0W2ldKVxyXG4gICAgICAgICAgICAgICAgICAgIHNyY1tpXSA9IHRoaXMuZXh0ZW5kKHNyY1tpXSwgZGVzdFtpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRlc3QgPT09ICdvYmplY3QnICYmIHR5cGVvZiBkZXN0W2ldICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAgICAgc3JjW2ldID0gZGVzdFtpXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY29weSlcclxuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3JjKSk7XHJcbiAgICAgICAgcmV0dXJuIHNyYztcclxuICAgIH1cclxuXHJcbiAgICBqc29uVG9IdG1sKG9iajogSnNvblRvSHRtbEVsZW1lbnQpOiBhbnkge1xyXG4gICAgICAgIGxldCBlbG0gPSBudWxsLCBpc05zRWxlbSA9IENvbW1vbi5OYW1lU3BhY2VFbGVtZW50cy5maWx0ZXIoeCA9PiB4ID09IG9iai50eXBlKS5sZW5ndGggPiAwO1xyXG4gICAgICAgIGlmIChpc05zRWxlbSlcclxuICAgICAgICAgICAgZWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKENvbW1vbi54bWxucywgb2JqLnR5cGUpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgZWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChvYmoudHlwZSk7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiBvYmouYXR0cnMpIHtcclxuICAgICAgICAgICAgaWYgKGlzTnNFbGVtKVxyXG4gICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZU5TKG51bGwsIGksIG9iai5hdHRyc1tpXSk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIGVsbS5zZXRBdHRyaWJ1dGUoaSwgb2JqLmF0dHJzW2ldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiBvYmouY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgbGV0IG5ld0VsZW0gPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAob2JqLmNoaWxkcmVuW2ldLnR5cGUgPT0gJyN0ZXh0JylcclxuICAgICAgICAgICAgICAgIG5ld0VsZW0gPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShvYmouY2hpbGRyZW5baV0udGV4dCk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIG5ld0VsZW0gPSB0aGlzLmpzb25Ub0h0bWwob2JqLmNoaWxkcmVuW2ldKTtcclxuICAgICAgICAgICAgaWYgKChuZXdFbGVtICYmIG5ld0VsZW0udGFnTmFtZSAmJiBuZXdFbGVtLnRhZ05hbWUudG9Mb3dlckNhc2UoKSAhPT0gJ3VuZGVmaW5lZCcpIHx8IG5ld0VsZW0ubm9kZVR5cGUgPT0gMylcclxuICAgICAgICAgICAgICAgIGVsbS5hcHBlbmRDaGlsZChuZXdFbGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGVsbTtcclxuICAgIH1cclxuXHJcbiAgICBpc0hleChzdHI6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBzdHIuaW5kZXhPZignIycpID4gLTE7XHJcbiAgICB9XHJcblxyXG4gICAgaXNSZ2JhKHN0cjogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0ci5zcGxpdCgnLCcpLmxlbmd0aCA+IDM7XHJcbiAgICB9XHJcblxyXG4gICAgdG9SZ2JPYmoocmdiYTogc3RyaW5nKTogUkdCQSB7XHJcbiAgICAgICAgbGV0IGFyciA9IHJnYmEuc3BsaXQoJywnKS5tYXAoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGl0ZW0sIDEwKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBSZWQ6IGFyclswXSxcclxuICAgICAgICAgICAgR3JlZW46IGFyclsxXSxcclxuICAgICAgICAgICAgQmx1ZTogYXJyWzJdLFxyXG4gICAgICAgICAgICBBbHBoYTogYXJyWzNdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBSZ2JPYmpUb1N0cmluZyhyZ2JhOiBSR0JBKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgYW5zID0gJygnICsgcmdiYS5SZWQgKyAnLCcgKyByZ2JhLkdyZWVuICsgJywnICsgcmdiYS5CbHVlO1xyXG4gICAgICAgIGlmIChyZ2JhLkFscGhhKVxyXG4gICAgICAgICAgICBhbnMgKz0gJywnICsgcmdiYS5BbHBoYVxyXG4gICAgICAgIGFucyArPSAnKSc7XHJcbiAgICAgICAgcmV0dXJuIGFucztcclxuICAgIH1cclxuXHJcbiAgICBoZXhUb1JnYihoZXg6IHN0cmluZyk6IFJHQkEge1xyXG4gICAgICAgIC8vIEV4cGFuZCBzaG9ydGhhbmQgZm9ybSAoZS5nLiBcIjAzRlwiKSB0byBmdWxsIGZvcm0gKGUuZy4gXCIwMDMzRkZcIilcclxuICAgICAgICB2YXIgc2hvcnRoYW5kUmVnZXggPSAvXiM/KFthLWZcXGRdKShbYS1mXFxkXSkoW2EtZlxcZF0pJC9pO1xyXG4gICAgICAgIGhleCA9IGhleC5yZXBsYWNlKHNob3J0aGFuZFJlZ2V4LCBmdW5jdGlvbiAobTogc3RyaW5nLCByOiBzdHJpbmcsIGc6IHN0cmluZywgYjogc3RyaW5nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByICsgciArIGcgKyBnICsgYiArIGI7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciByZXN1bHQgPSAvXiM/KFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pJC9pLmV4ZWMoaGV4KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0ID8ge1xyXG4gICAgICAgICAgICBSZWQ6IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpLFxyXG4gICAgICAgICAgICBHcmVlbjogcGFyc2VJbnQocmVzdWx0WzJdLCAxNiksXHJcbiAgICAgICAgICAgIEJsdWU6IHBhcnNlSW50KHJlc3VsdFszXSwgMTYpXHJcbiAgICAgICAgfSA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0SW5uZXJUZXh0RGVmYXVsdHMoaW5uZXJUZXh0PzogSW5uZXJUZXh0KTogSW5uZXJUZXh0IHtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dClcclxuICAgICAgICAgICAgaW5uZXJUZXh0ID0ge1xyXG4gICAgICAgICAgICAgICAgdGV4dDogJydcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC50ZXh0KVxyXG4gICAgICAgICAgICBpbm5lclRleHQudGV4dCA9ICcnO1xyXG4gICAgICAgIGlmICghaW5uZXJUZXh0LmZvbnRTaXplKVxyXG4gICAgICAgICAgICBpbm5lclRleHQuZm9udFNpemUgPSAxODtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5saW5lSGVpZ2h0KVxyXG4gICAgICAgICAgICBpbm5lclRleHQubGluZUhlaWdodCA9IGlubmVyVGV4dC5mb250U2l6ZTtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5mb250RmFtaWx5KVxyXG4gICAgICAgICAgICBpbm5lclRleHQuZm9udEZhbWlseSA9ICdBcmlhbCxVdGthbCxzYW5zLXNlcmlmJztcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5mb250V2VpZ2h0KVxyXG4gICAgICAgICAgICBpbm5lclRleHQuZm9udFdlaWdodCA9ICdub3JtYWwnO1xyXG4gICAgICAgIGlmICghaW5uZXJUZXh0LmxldHRlclNwYWNpbmcpXHJcbiAgICAgICAgICAgIGlubmVyVGV4dC5sZXR0ZXJTcGFjaW5nID0gJzAnO1xyXG4gICAgICAgIHJldHVybiBpbm5lclRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29tcHV0ZWRTdHlsZUJ5UGFyZW50UmVjKGVsZW06IGFueSwgY3NzUHJvcDogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIWVsZW0pIHJldHVybiBudWxsO1xyXG4gICAgICAgIGxldCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW0pIGFzIGFueTtcclxuICAgICAgICBsZXQgdmFsID0gY3NzW2Nzc1Byb3BdO1xyXG4gICAgICAgIGlmICh2YWwgJiYgdmFsICE9ICdyZ2JhKDAsIDAsIDAsIDApJykgcmV0dXJuIHZhbDtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWMoZWxlbS5wYXJlbnRFbGVtZW50LCBjc3NQcm9wKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvZGQgc3Ryb2tlV2lkdGggaXMgbm90IHN1cHBvcnRlZFxyXG4gICAgZml4U3Ryb2tlV2lkdGgoc3c6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgaWYgKHN3ICUgMiA9PSAxKVxyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ2FsbC1nYXVnZTogc3Ryb2tlLXdpZHRoIFwiJyArIHN3ICsgJ1wiIGlzIG5vdCBzdXBwb3J0ZWQgKG9kZCksIGNoYW5nZWQgdG8gXCInICsgKCsrc3cpKSArICdcIic7XHJcbiAgICAgICAgcmV0dXJuIHN3O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIG9kZCByYWRpdXMgaXMgbm90IHN1cHBvcnRlZFxyXG4gICAgZml4UmFkaXVzKHI6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgaWYgKHIgJSAyID09IDEpXHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignYWxsLWdhdWdlOiByYWRpdXMgXCInICsgciArICdcIiBpcyBub3Qgc3VwcG9ydGVkIChvZGQpLCBjaGFuZ2VkIHRvIFwiJyArICgrK3IpKSArICdcIic7XHJcbiAgICAgICAgcmV0dXJuIHI7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGVmYXVsdENvbG9ycygpOiBDb2xvclBhbGV0dGUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGFjdGl2ZTogJyM0Q0NFQUQnLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiAnIzUwNTA1MCcsXHJcbiAgICAgICAgICAgIGluYWN0aXZlOiAnI2VkZWRlZCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGdldE5lZWRsZUlubmVyU3R5bGUocmFkaXVzOiBudW1iZXIpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICdoZWlnaHQnOiAocmFkaXVzICsgMjApICsgJ3B4JyxcclxuICAgICAgICAgICAgJ3dpZHRoJzogKHJhZGl1cyAvIENvbW1vbi5uZWVkbGVXaWR0aEhlaWdodFJhdGlvKSArICdweCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGdldE5lZWRsZVN0eWxlKHJhZGl1czogbnVtYmVyLCBhcmNOZWVkbGVQZXJjZW50YWdlOiBudW1iZXIsIHNjYWxlOiBudW1iZXIsIGluZGVudDogbnVtYmVyID0gNTApIHtcclxuICAgICAgICBpZiAodHlwZW9mIHNjYWxlICE9PSAnbnVtYmVyJylcclxuICAgICAgICAgICAgc2NhbGUgPSAxLjEyNTtcclxuICAgICAgICBsZXQgZGVnID0gKGFyY05lZWRsZVBlcmNlbnRhZ2UgLSBpbmRlbnQpICogMy42O1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICdsZWZ0JzogJ2NhbGMoNTAlIC0gJyArICgocmFkaXVzIC8gQ29tbW9uLm5lZWRsZVdpZHRoSGVpZ2h0UmF0aW8pKSAvIDIgKyAncHgnLFxyXG4gICAgICAgICAgICAndHJhbnNmb3JtJzogJ3JvdGF0ZSgnICsgZGVnICsgJ2RlZykgc2NhbGUoJyArIHNjYWxlICsgJyknXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBpc0luUmFuZ2UobWluTWF4VmFsOiBNaW5NYXhWYWwsIHNpZGVzOiBTaWRlU3RhdGUpIHtcclxuICAgICAgICBzd2l0Y2ggKHNpZGVzKSB7XHJcbiAgICAgICAgICAgIGNhc2UgU2lkZVN0YXRlLkJvdGg6IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAobWluTWF4VmFsLm1pbiA8IG1pbk1heFZhbC52YWx1ZSAmJiBtaW5NYXhWYWwubWF4ID4gbWluTWF4VmFsLnZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFNpZGVTdGF0ZS5Ob25lOiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKG1pbk1heFZhbC5taW4gPD0gbWluTWF4VmFsLnZhbHVlICYmIG1pbk1heFZhbC5tYXggPj0gbWluTWF4VmFsLnZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFNpZGVTdGF0ZS5MZWZ0OiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKG1pbk1heFZhbC5taW4gPCBtaW5NYXhWYWwudmFsdWUgJiYgbWluTWF4VmFsLm1heCA+PSBtaW5NYXhWYWwudmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgU2lkZVN0YXRlLlJpZ2h0OiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKG1pbk1heFZhbC5taW4gPD0gbWluTWF4VmFsLnZhbHVlICYmIG1pbk1heFZhbC5tYXggPiBtaW5NYXhWYWwudmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh2YWx1ZTogbnVtYmVyLCBwZXJjZW50YWdlOiBudW1iZXIsIG1pZD86IG51bWJlciwgbWF4PzogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICBpZiAodHlwZW9mIG1pZCA9PT0gJ3VuZGVmaW5lZCcpXHJcbiAgICAgICAgICAgIG1pZCA9IDUwO1xyXG4gICAgICAgIGlmICh0eXBlb2YgbWF4ID09PSAndW5kZWZpbmVkJylcclxuICAgICAgICAgICAgbWF4ID0gbWlkICogMjtcclxuICAgICAgICBsZXQgcmVsID0gbnVsbDtcclxuXHJcbiAgICAgICAgaWYgKHZhbHVlID4gbWlkKSB7XHJcbiAgICAgICAgICAgIHBlcmNlbnRhZ2UgLz0gMjtcclxuICAgICAgICAgICAgcmVsID0gTWF0aC5hYnMobWlkIC0gdmFsdWUpO1xyXG4gICAgICAgICAgICByZWwgPSByZWwgLyBtaWQ7XHJcbiAgICAgICAgICAgIHBlcmNlbnRhZ2UgKj0gcmVsO1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgKiAoMSAtIHBlcmNlbnRhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHZhbHVlID09IDAuMClcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gMC4wMDE7XHJcbiAgICAgICAgICAgIHJlbCA9IE1hdGguYWJzKHZhbHVlIC0gbWlkKTtcclxuICAgICAgICAgICAgcmVsID0gcmVsIC8gbWlkO1xyXG4gICAgICAgICAgICBwZXJjZW50YWdlICo9IHJlbDtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlICsgKG1pZCAqIChwZXJjZW50YWdlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldFJlbWFpbmRlcihyYW5nZTogRnJvbVRvLCBob3VyOiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgY3VycmVudCA9IDEwMCAvIDEyICogaG91cjtcclxuICAgICAgICBpZiAoY3VycmVudCA+PSByYW5nZS5mcm9tICYmIGN1cnJlbnQgPD0gcmFuZ2UudG8pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQgLSByYW5nZS5mcm9tO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuXHJcbiAgICBpc0hvdXJJblJhbmdlKHJhbmdlOiBGcm9tVG8sIGhvdXI6IG51bWJlcik6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBjdXJyZW50ID0gMTAwIC8gMTIgKiBob3VyO1xyXG4gICAgICAgIGlmIChjdXJyZW50ID49IHJhbmdlLmZyb20gJiYgY3VycmVudCA8PSByYW5nZS50bykgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFBlcmNlbnRhZ2VCeVRpbWUoZGF0ZVRpbWU6IERhdGUpOiBudW1iZXIge1xyXG4gICAgICAgIGxldCBzZWNvbmRzSW5BRGF5ID0gODY0MDA7IC8vMjQgKiA2MCAqIDYwO1xyXG4gICAgICAgIGxldCBob3VycyA9IGRhdGVUaW1lLmdldEhvdXJzKCkgKiAzNjAwOyAvLzYwICogNjA7XHJcbiAgICAgICAgbGV0IG1pbnV0ZXMgPSBkYXRlVGltZS5nZXRNaW51dGVzKCkgKiA2MDtcclxuICAgICAgICBsZXQgc2Vjb25kcyA9IGRhdGVUaW1lLmdldFNlY29uZHMoKTtcclxuICAgICAgICBsZXQgdG90YWxTZWNvbmRzID0gaG91cnMgKyBtaW51dGVzICsgc2Vjb25kcztcclxuICAgICAgICBsZXQgcGVyY2VudFNlY29uZHMgPSAxMDAgKiB0b3RhbFNlY29uZHMgLyBzZWNvbmRzSW5BRGF5O1xyXG4gICAgICAgIHJldHVybiBwZXJjZW50U2Vjb25kcztcclxuICAgICAgICAvLyBsZXQgbWF4ID0gODY0MDAwMDA7IC8vIDEwMDAgKiA2MCAqIDYwICogMjQgaXMgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgb24gYSAyNCBob3VycyBkYXkuXHJcbiAgICAgICAgLy8gbGV0IGhvdXJzID0gZGF0ZVRpbWUuZ2V0SG91cnMoKTtcclxuICAgICAgICAvLyBsZXQgbWludXRlcyA9IGRhdGVUaW1lLmdldE1pbnV0ZXMoKTtcclxuICAgICAgICAvLyBsZXQgc2Vjb25kcyA9IGRhdGVUaW1lLmdldFNlY29uZHMoKTtcclxuICAgICAgICAvLyBsZXQgdG90YWwgPSAoaG91cnMgKiAxMDAwICogNjAgKiA2MCkgKyAobWludXRlcyAqIDEwMDAgKiA2MCkgKyAoc2Vjb25kcyAqIDEwMDApO1xyXG4gICAgICAgIC8vIGxldCBwZXJjZW50YWdlID0gdG90YWwgLyBtYXg7XHJcbiAgICAgICAgLy8gcmV0dXJuIHBlcmNlbnRhZ2UgKiAxMDA7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TWludXRlc0Zyb21Ib3VyKGhvdXI6IHN0cmluZykge1xyXG4gICAgICAgIGxldCBhcnIgPSBob3VyLnNwbGl0KCc6Jyk7XHJcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KGFyclswXS50cmltKCkpICogNjAgKyBwYXJzZUludChhcnJbMV0udHJpbSgpKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRNaW51dGVzRnJvbVN0YXJ0KGhvdXI6IHN0cmluZywgc3RhcnQgPSAwKSB7XHJcbiAgICAgICAgbGV0IGFyciA9IGhvdXIuc3BsaXQoJzonKTtcclxuICAgICAgICByZXR1cm4gTWF0aC5tYXgoKHBhcnNlSW50KGFyclswXS50cmltKCkpICogNjAgKyAocGFyc2VJbnQoYXJyWzFdLnRyaW0oKSkpKSAtIHN0YXJ0LCAwKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRIb3Vyc0FuZE1pbnV0ZXNMVChkYXRlOiBEYXRlKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XHJcbiAgICAgICAgaG91cnMgPSAoaG91cnMgKyAyNCAtIDIpICUgMjQ7XHJcbiAgICAgICAgbGV0IG1pZCA9ICdhbSc7XHJcbiAgICAgICAgaWYgKGhvdXJzID09IDApIHsgLy9BdCAwMCBob3VycyB3ZSBuZWVkIHRvIHNob3cgMTIgYW1cclxuICAgICAgICAgICAgaG91cnMgPSAxMjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoaG91cnMgPiAxMikge1xyXG4gICAgICAgICAgICBob3VycyA9IGhvdXJzICUgMTI7XHJcbiAgICAgICAgICAgIG1pZCA9ICdwbSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBob3VycyArICc6JyArIGRhdGUuZ2V0TWludXRlcygpICsgJyAnICsgbWlkO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFNlY29uZHNGcm9tVGltZSh0aW1lcjogVGltZSk6IG51bWJlciB7XHJcbiAgICAgICAgbGV0IGhvdXJzID0gMDtcclxuICAgICAgICBob3VycyArPSB0aW1lci5ob3VycyAqIDM2MDA7XHJcbiAgICAgICAgaG91cnMgKz0gdGltZXIubWludXRlcyAqIDYwO1xyXG4gICAgICAgIGhvdXJzICs9IHRpbWVyLnNlY29uZHM7XHJcbiAgICAgICAgcmV0dXJuIGhvdXJzO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRpbWVUb1plcm8odGltZXI6IFRpbWUpOiB2b2lkIHtcclxuICAgICAgICB0aW1lci5ob3VycyA9IDA7XHJcbiAgICAgICAgdGltZXIubWludXRlcyA9IDA7XHJcbiAgICAgICAgdGltZXIuc2Vjb25kcyA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgZGVjcmVhc2VUaW1lKHRpbWVyOiBUaW1lKTogYm9vbGVhbiB7XHJcbiAgICAgICAgaWYgKHRpbWVyLnNlY29uZHMgPiAwKSB7XHJcbiAgICAgICAgICAgIGlmICgtLXRpbWVyLnNlY29uZHMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lci5zZWNvbmRzID0gNTk7XHJcbiAgICAgICAgICAgICAgICBpZiAoLS10aW1lci5taW51dGVzIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRpbWVyLm1pbnV0ZXMgPSA1OTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoLS10aW1lci5ob3VycyA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRUaW1lVG9aZXJvKHRpbWVyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRpbWVyLm1pbnV0ZXMgPiAwKSB7XHJcbiAgICAgICAgICAgIHRpbWVyLnNlY29uZHMgPSA1OTtcclxuICAgICAgICAgICAgaWYgKC0tdGltZXIubWludXRlcyA8IDApIHtcclxuICAgICAgICAgICAgICAgIHRpbWVyLm1pbnV0ZXMgPSA1OTtcclxuICAgICAgICAgICAgICAgIGlmICgtLXRpbWVyLmhvdXJzIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0VGltZVRvWmVybyh0aW1lcik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGltZXIuaG91cnMgPiAwKSB7XHJcbiAgICAgICAgICAgIHRpbWVyLm1pbnV0ZXMgPSA1OTtcclxuICAgICAgICAgICAgaWYgKC0tdGltZXIuaG91cnMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFRpbWVUb1plcm8odGltZXIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5pc1RpbWVaZXJvKHRpbWVyKSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFRpbWVUb1plcm8odGltZXIpO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGlzVGltZVplcm8odGltZXI6IFRpbWUpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAodGltZXIuaG91cnMgPD0gMCAmJiB0aW1lci5taW51dGVzIDw9IDAgJiYgdGltZXIuc2Vjb25kcyA8PSAwKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcGFkV2l0aFppcm8odGV4dDogc3RyaW5nKSB7XHJcbiAgICAgICAgaWYgKFN0cmluZyh0ZXh0KS5sZW5ndGggPCAyKVxyXG4gICAgICAgICAgICB0ZXh0ID0gJzAnICsgdGV4dDtcclxuICAgICAgICByZXR1cm4gdGV4dDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTaWRlU3RhdGVCeVN0cmluZyhzdGF0ZTogc3RyaW5nKTogU2lkZVN0YXRlIHtcclxuICAgICAgICBpZiAoIXN0YXRlKSByZXR1cm4gU2lkZVN0YXRlLk5vbmU7XHJcbiAgICAgICAgc3dpdGNoIChzdGF0ZS50b0xvd2VyQ2FzZSgpKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ2xlZnQnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5MZWZ0O1xyXG4gICAgICAgICAgICBjYXNlICdyaWdodCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU2lkZVN0YXRlLlJpZ2h0O1xyXG4gICAgICAgICAgICBjYXNlICdib3RoJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBTaWRlU3RhdGUuQm90aDtcclxuICAgICAgICAgICAgY2FzZSAnbm9uZSc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU2lkZVN0YXRlLk5vbmU7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU2lkZVN0YXRlLk5vbmVcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBFZGdlc09wdGlvbnMsIFNpZGVTdGF0ZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBFZGdlcyB7XHJcbiAgICBwcml2YXRlIGxlZnRFbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIHJpZ2h0RWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuXHJcbiAgICBzdGF0aWMgQWRkVG9FZGdlOiBudW1iZXIgPSA0O1xyXG4gICAgc3RhdGljIEFkZFRvRWRnZUhlaWdodDogbnVtYmVyID0gNDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnM/OiBFZGdlc09wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLmNvbW1vbiA9IG5ldyBDb21tb24oKTtcclxuXHJcbiAgICAgICAgbGV0IGRlZmF1bHRPcHRpb25zID0gdGhpcy5nZXREZWZhdWx0T3B0aW9ucygpO1xyXG5cclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldERlZmF1bHRPcHRpb25zKCk6IEVkZ2VzT3B0aW9ucyB7XHJcbiAgICAgICAgbGV0IGNvbG9ycyA9IHRoaXMuY29tbW9uLmdldERlZmF1bHRDb2xvcnMoKTtcclxuICAgICAgICBsZXQgZGVmUmFkaXVzID0gODgsIGFuaW1hdGlvbkR1cmF0aW9uID0gNTAwO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBjb2xvcnMuYWN0aXZlLFxyXG4gICAgICAgICAgICBtaW5NYXhWYWw6IHtcclxuICAgICAgICAgICAgICAgIG1pbjogMzAsXHJcbiAgICAgICAgICAgICAgICBtYXg6IDcwLFxyXG4gICAgICAgICAgICAgICAgdmFsdWU6IDU1XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHJhZGl1czogZGVmUmFkaXVzLFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogNixcclxuICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxyXG4gICAgICAgICAgICBob2xsb3dFZGdlczogU2lkZVN0YXRlLk5vbmUsXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmZmZmYnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IDUwXHJcbiAgICAgICAgfSBhcyBFZGdlc09wdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICB0aGlzLmxlZnRFbGVtZW50ID0gdGhpcy5jb21tb24uanNvblRvSHRtbChcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3NwYW4nLFxyXG4gICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgZGlzcGxheTogaW5saW5lLWJsb2NrO3dpZHRoOiAke0VkZ2VzLkFkZFRvRWRnZX1weDtwb3NpdGlvbjogYWJzb2x1dGU7ei1pbmRleDogNTtib3gtc2l6aW5nOiBpbml0aWFsO2JveC1zaXppbmc6IGJvcmRlci1ib3g7dHJhbnNpdGlvbi1wcm9wZXJ0eTogYmFja2dyb3VuZC1jb2xvcjtgLFxyXG4gICAgICAgICAgICAgICAgICAgICdkYXRhLWxlZnQtZWRnZSc6ICcnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnJpZ2h0RWxlbWVudCA9IHRoaXMuY29tbW9uLmpzb25Ub0h0bWwoXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYGRpc3BsYXk6IGlubGluZS1ibG9jazt3aWR0aDogJHtFZGdlcy5BZGRUb0VkZ2V9cHg7cG9zaXRpb246IGFic29sdXRlO3otaW5kZXg6IDU7Ym94LXNpemluZzogaW5pdGlhbDtib3gtc2l6aW5nOiBib3JkZXItYm94O3RyYW5zaXRpb24tcHJvcGVydHk6IGJhY2tncm91bmQtY29sb3I7YCxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YS1yaWdodC1lZGdlJzogJydcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUob3B0aW9uczogRWRnZXNPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlT3B0aW9ucygpIHtcclxuICAgICAgICB0aGlzLnNldFNwYW5zKHRoaXMub3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0U3BhbnMob3B0aW9uczogRWRnZXNPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IGhlaWdodCA9IChvcHRpb25zLnN0cm9rZVdpZHRoICsgRWRnZXMuQWRkVG9FZGdlICsgRWRnZXMuQWRkVG9FZGdlSGVpZ2h0KSArICdweCc7XHJcbiAgICAgICAgbGV0IHRvcCA9ICdjYWxjKDUwJSAtICcgKyAoKG9wdGlvbnMuc3Ryb2tlV2lkdGggLyAyKSArIChFZGdlcy5BZGRUb0VkZ2UgLyAyKSArIChFZGdlcy5BZGRUb0VkZ2VIZWlnaHQgLyAyKSkgKyAncHgpJztcclxuICAgICAgICBsZXQgbGVmdFN0eWxlID0gJ2NhbGMoNTAlIC0gJyArIChFZGdlcy5BZGRUb0VkZ2UgLyAyKSArICdweCknO1xyXG5cclxuICAgICAgICAvLyBsZXQgYmdDb2xvciA9IHRoaXMuY29tbW9uLmdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyh0aGlzLmxlZnRFbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgLy8gaWYgKCFiZ0NvbG9yKVxyXG4gICAgICAgIGxldCBiZ0NvbG9yID0gdGhpcy5vcHRpb25zLmJhY2tncm91bmRDb2xvcjtcclxuXHJcbiAgICAgICAgbGV0IGxlZnQgPSB0aGlzLmxlZnRFbGVtZW50O1xyXG4gICAgICAgIGxlZnQuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgICAgIGxlZnQuc3R5bGUudG9wID0gdG9wO1xyXG4gICAgICAgIGxlZnQuc3R5bGUubGVmdCA9IGxlZnRTdHlsZTtcclxuICAgICAgICBsZWZ0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IG9wdGlvbnMuY29sb3I7XHJcbiAgICAgICAgbGVmdC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uICsgJ21zJztcclxuICAgICAgICAvLyBsZWZ0LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9ICcwbXMnO1xyXG4gICAgICAgIGlmIChvcHRpb25zLmhvbGxvd0VkZ2VzID09IFNpZGVTdGF0ZS5MZWZ0IHx8IG9wdGlvbnMuaG9sbG93RWRnZXMgPT0gU2lkZVN0YXRlLkJvdGgpIHtcclxuICAgICAgICAgICAgbGVmdC5zdHlsZS5ib3JkZXIgPSAnc29saWQgMXB4ICcgKyBvcHRpb25zLmNvbG9yO1xyXG4gICAgICAgICAgICBsZWZ0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJnQ29sb3I7XHJcbiAgICAgICAgICAgIC8vIGxlZnQuc3R5bGUuaGVpZ2h0ID0gKG9wdGlvbnMuc3Ryb2tlV2lkdGggKyAoRWRnZXMuQWRkVG9FZGdlICogMiAtIDIpKSArICdweCc7XHJcbiAgICAgICAgICAgIC8vIGxlZnQuc3R5bGUudG9wID0gJ2NhbGMoNTAlIC0gJyArICgob3B0aW9ucy5zdHJva2VXaWR0aCAvIDIpICsgRWRnZXMuQWRkVG9FZGdlICsgMSkgKyAncHgpJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCByaWdodCA9IHRoaXMucmlnaHRFbGVtZW50O1xyXG4gICAgICAgIHJpZ2h0LnN0eWxlLmhlaWdodCA9IGhlaWdodDtcclxuICAgICAgICByaWdodC5zdHlsZS50b3AgPSB0b3A7XHJcbiAgICAgICAgcmlnaHQuc3R5bGUubGVmdCA9IGxlZnRTdHlsZTtcclxuICAgICAgICByaWdodC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBvcHRpb25zLmNvbG9yO1xyXG4gICAgICAgIHJpZ2h0LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG9wdGlvbnMuYW5pbWF0aW9uRHVyYXRpb24gKyAnbXMnO1xyXG4gICAgICAgIC8vIHJpZ2h0LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9ICcwbXMnO1xyXG4gICAgICAgIGlmIChvcHRpb25zLmhvbGxvd0VkZ2VzID09IFNpZGVTdGF0ZS5SaWdodCB8fCBvcHRpb25zLmhvbGxvd0VkZ2VzID09IFNpZGVTdGF0ZS5Cb3RoKSB7XHJcbiAgICAgICAgICAgIHJpZ2h0LnN0eWxlLmJvcmRlciA9ICdzb2xpZCAxcHggJyArIG9wdGlvbnMuY29sb3I7XHJcbiAgICAgICAgICAgIHJpZ2h0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJnQ29sb3I7XHJcbiAgICAgICAgICAgIC8vIHJpZ2h0LnN0eWxlLmhlaWdodCA9IChvcHRpb25zLnN0cm9rZVdpZHRoICsgKEVkZ2VzLkFkZFRvRWRnZSAqIDIgLSAyKSkgKyAncHgnO1xyXG4gICAgICAgICAgICAvLyByaWdodC5zdHlsZS50b3AgPSAnY2FsYyg1MCUgLSAnICsgKChvcHRpb25zLnN0cm9rZVdpZHRoIC8gMikgKyBFZGdlcy5BZGRUb0VkZ2UgKyAxKSArICdweCknO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHNjYWxhciA9IG9wdGlvbnMucmFkaXVzIC0gKG9wdGlvbnMuc3Ryb2tlV2lkdGggLyAyKSwgeFZlY3RvckxlZnQsIHlWZWN0b3JMZWZ0LCB4VmVjdG9yUmlnaHQsIHlWZWN0b3JSaWdodDtcclxuICAgICAgICBsZXQgZGVnTGVmdCA9IChvcHRpb25zLm1pbk1heFZhbC5taW4gLSB0aGlzLm9wdGlvbnMuaW5kZW50KSAqIDMuNjtcclxuICAgICAgICBsZXQgZGVnUmlnaHQgPSAob3B0aW9ucy5taW5NYXhWYWwubWF4IC0gdGhpcy5vcHRpb25zLmluZGVudCkgKiAzLjY7XHJcbiAgICAgICAgeFZlY3RvckxlZnQgPSBNYXRoLnNpbihkZWdMZWZ0ICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuICAgICAgICB5VmVjdG9yTGVmdCA9IC1NYXRoLmNvcyhkZWdMZWZ0ICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuICAgICAgICBsZWZ0LnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgke3hWZWN0b3JMZWZ0fXB4LCAke3lWZWN0b3JMZWZ0fXB4LCAwKSByb3RhdGUoJHtkZWdMZWZ0fWRlZylgO1xyXG4gICAgICAgIHhWZWN0b3JSaWdodCA9IE1hdGguc2luKGRlZ1JpZ2h0ICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuICAgICAgICB5VmVjdG9yUmlnaHQgPSAtTWF0aC5jb3MoZGVnUmlnaHQgKiAoTWF0aC5QSSAvIDE4MCkpICogc2NhbGFyO1xyXG4gICAgICAgIHJpZ2h0LnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgke3hWZWN0b3JSaWdodH1weCwgJHt5VmVjdG9yUmlnaHR9cHgsIDApIHJvdGF0ZSgke2RlZ1JpZ2h0fWRlZylgO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRMZWZ0RWxlbWVudCgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxlZnRFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRSaWdodEVsZW1lbnQoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yaWdodEVsZW1lbnQ7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgaW50ZXJmYWNlIENvbG9yUGFsZXR0ZSB7XHJcbiAgICBkZWZhdWx0OiBzdHJpbmc7XHJcbiAgICBhY3RpdmU6IHN0cmluZztcclxuICAgIGluYWN0aXZlOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2lyY2xlT3B0aW9ucyB7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICBmcm9tRGVncmVlPzogbnVtYmVyO1xyXG4gICAgdG9EZWdyZWU/OiBudW1iZXI7XHJcbiAgICByYWRpdXM/OiBudW1iZXI7XHJcbiAgICBzdHJva2VXaWR0aD86IG51bWJlcjtcclxuICAgIHJvdGF0aW9uU3BlZWQ/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcclxuICAgIGhpZGVCb3R0b206IGJvb2xlYW47XHJcbiAgICBpbmRlbnQ/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3Bpbm5lck9wdGlvbnMge1xyXG4gICAgY29sb3JzPzogQ29sb3JQYWxldHRlO1xyXG4gICAgYWN0aXZlRGVncmVlPzogbnVtYmVyO1xyXG4gICAgcmFkaXVzPzogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICByb3RhdGlvblNwZWVkPzogbnVtYmVyO1xyXG4gICAgdGl0bGU/OiBJbm5lclRleHQ7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGhpZ2hsaWdodD86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5uZXJUZXh0IHtcclxuICAgIHRleHQ6IHN0cmluZztcclxuICAgIGZvbnRTaXplPzogbnVtYmVyO1xyXG4gICAgZm9udEZhbWlseT86IHN0cmluZztcclxuICAgIGxpbmVIZWlnaHQ/OiBudW1iZXI7XHJcbiAgICBmb250V2VpZ2h0Pzogc3RyaW5nO1xyXG4gICAgbGV0dGVyU3BhY2luZz86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBKc29uVG9IdG1sRWxlbWVudCB7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICB0ZXh0Pzogc3RyaW5nO1xyXG4gICAgYXR0cnM/OiBhbnk7XHJcbiAgICBjaGlsZHJlbj86IEFycmF5PEpzb25Ub0h0bWxFbGVtZW50PjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSR0JBIHtcclxuICAgIFJlZDogbnVtYmVyO1xyXG4gICAgR3JlZW46IG51bWJlcjtcclxuICAgIEJsdWU6IG51bWJlcjtcclxuICAgIEFscGhhPzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1pbk1heFZhbCB7XHJcbiAgICBtaW46IG51bWJlcjtcclxuICAgIG1heDogbnVtYmVyO1xyXG4gICAgdmFsdWU/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmVlZGxlT3B0aW9ucyB7XHJcbiAgICBjb2xvcjogc3RyaW5nO1xyXG4gICAgbWluTWF4VmFsOiBNaW5NYXhWYWw7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHNjYWxlOiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcclxuICAgIGluZGVudD86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUdW5lT3B0aW9ucyB7XHJcbiAgICBuZWVkbGVPcHRpb25zPzogTmVlZGxlT3B0aW9ucztcclxuICAgIGljb25PcHRpb25zPzogSWNvbk9wdGlvbnM7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICBzdHJva2VXaWR0aD86IG51bWJlcjtcclxuICAgIC8vIHRpdGxlPzogSW5uZXJUZXh0O1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHNob3dFZGdlczogYm9vbGVhbjtcclxuICAgIGhvbGxvd0VkZ2VzPzogU2lkZVN0YXRlO1xyXG4gICAgc2hvd0ljb246IGJvb2xlYW47XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nO1xyXG4gICAgaG9sbG93RWRnZXNCZ0NvbG9yPzogc3RyaW5nO1xyXG59XHJcblxyXG4vLyBleHBvcnQgaW50ZXJmYWNlIE1pbk1heEVkZ2Uge1xyXG4vLyAgICAgbWluTWF4VmFsOiBNaW5NYXhWYWw7XHJcbi8vICAgICBsZWZ0RWRnZXM/OiBTaW5uZ2xlU2lkZVN0YXRlO1xyXG4vLyAgICAgcmlnaHRFZGdlcz86IFNpbm5nbGVTaWRlU3RhdGU7XHJcbi8vICAgICBiZ0NvbG9yOiBzdHJpbmc7XHJcbi8vIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTXVsdGl0dW5lT3B0aW9ucyB7XHJcbiAgICBuZWVkbGVPcHRpb25zOiBOZWVkbGVPcHRpb25zO1xyXG4gICAgc2VnbWVudHM6IEFycmF5PE1pbk1heFZhbD47XHJcbiAgICBpY29uT3B0aW9ucz86IEljb25PcHRpb25zO1xyXG4gICAgY29sb3JzPzogQ29sb3JQYWxldHRlO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc2hvd0VkZ2VzOiBib29sZWFuO1xyXG4gICAgc2hvd0ljb246IGJvb2xlYW47XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nO1xyXG4gICAgaG9sbG93RWRnZXNCZ0NvbG9yPzogc3RyaW5nO1xyXG4gICAgaG9sbG93RWRnZXM/OiBTaWRlU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmFuZ2VPcHRpb25zIHtcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIG1pbk1heFZhbDogTWluTWF4VmFsO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc2hvd0VkZ2VzOiBib29sZWFuO1xyXG4gICAgaG9sbG93RWRnZXM/OiBTaWRlU3RhdGU7XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgdGl0bGU/OiBJbm5lclRleHQ7XHJcbiAgICBoaWdobGlnaHQ/OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgZW51bSBTaWRlU3RhdGUge1xyXG4gICAgTm9uZSxcclxuICAgIExlZnQsXHJcbiAgICBSaWdodCxcclxuICAgIEJvdGgsXHJcbn1cclxuXHJcbi8vIGV4cG9ydCBlbnVtIFNpbm5nbGVTaWRlU3RhdGUge1xyXG4vLyAgICAgTm9uZSxcclxuLy8gICAgIEhvbGxvdyxcclxuLy8gICAgIEZ1bGwsXHJcbi8vIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWRnZXNPcHRpb25zIHtcclxuICAgIGNvbG9yOiBzdHJpbmc7XHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmc7XHJcbiAgICBtaW5NYXhWYWw6IE1pbk1heFZhbDtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg6IG51bWJlcjtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgaG9sbG93RWRnZXM/OiBTaWRlU3RhdGU7XHJcbiAgICBpbmRlbnQ/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSWNvbk9wdGlvbnMge1xyXG4gICAgZGVncmVlOiBudW1iZXI7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuXHRyYWRpdXNPZmZzZXQ/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHNyYzogc3RyaW5nO1xyXG4gICAgZGltZW5zaW9uczoge1xyXG4gICAgICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICAgICAgaGVpZ2h0OiBudW1iZXI7XHJcbiAgICB9LFxyXG4gICAgdG9wPzogbnVtYmVyO1xyXG4gICAgbGVmdD86IG51bWJlcjtcclxuICAgIG9wYWNpdHk6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBOdW1iZXJEYXRhIHtcclxuICAgICAgICBudW1iZXI6IHN0cmluZztcclxuICAgICAgICBpc0FjdGl2ZTogYm9vbGVhbjtcclxuICAgICAgICByZW1haW5kZXI6IG51bWJlcjtcclxuICAgIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQW1QbU9wdGlvbnMge1xyXG4gICAgZnJvbVRvOiBGcm9tVG9TdHJpbmc7XHJcbiAgICBuZWVkbGVPcHRpb25zPzogTmVlZGxlT3B0aW9ucztcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgbWluTWF4VmFsQW0/OiBNaW5NYXhWYWw7XHJcbiAgICBtaW5NYXhWYWxQbT86IE1pbk1heFZhbDtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICBob2xsb3dFZGdlc0FtPzogU2lkZVN0YXRlO1xyXG4gICAgaG9sbG93RWRnZXNQbT86IFNpZGVTdGF0ZTtcclxuICAgIHNob3dFZGdlc0FtPzogYm9vbGVhbjtcclxuICAgIHNob3dFZGdlc1BtPzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGcm9tVG8ge1xyXG4gICAgICAgIGZyb206IG51bWJlcjtcclxuICAgICAgICB0bzogbnVtYmVyO1xyXG4gICAgfVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGcm9tVG9TdHJpbmcge1xyXG4gICAgZnJvbTogc3RyaW5nO1xyXG4gICAgdG86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUaW1lIHtcclxuICAgIGhvdXJzOiBudW1iZXIsXHJcbiAgICBtaW51dGVzOiBudW1iZXIsXHJcbiAgICBzZWNvbmRzOiBudW1iZXIsXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGltZXJPcHRpb25zIHtcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xyXG4gICAgdGltZTogVGltZTtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgcmFkaXVzOiBudW1iZXI7XHJcbiAgICBzaG93RWRnZXM6IGJvb2xlYW47XHJcbiAgICB0aXRsZT86IElubmVyVGV4dDtcclxuICAgIHBlcmNlbnRhZ2U/OiBudW1iZXI7XHJcbn0iLCJpbXBvcnQgeyBSYW5nZU9wdGlvbnMsIENpcmNsZU9wdGlvbnMsIEpzb25Ub0h0bWxFbGVtZW50LCBFZGdlc09wdGlvbnMsIFNpZGVTdGF0ZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuaW1wb3J0IHsgQ2lyY2xlIH0gZnJvbSAnLi9jaXJjbGUnO1xyXG5pbXBvcnQgeyBFZGdlcyB9IGZyb20gJy4vZWRnZXMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJhbmdlIHtcclxuICAgIHByaXZhdGUgZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBvcHRpb25zOiBSYW5nZU9wdGlvbnM7XHJcbiAgICBwcml2YXRlIGNvbW1vbjogQ29tbW9uO1xyXG4gICAgcHJpdmF0ZSBjaXJjbGVPcHRpb25zOiBDaXJjbGVPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjaXJjbGU6IENpcmNsZTtcclxuICAgIHByaXZhdGUgZWRnZXNPcHRpb25zOiBFZGdlc09wdGlvbnM7XHJcbiAgICBwcml2YXRlIGVkZ2VzOiBFZGdlcztcclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IGFueSwgb3B0aW9ucz86IFJhbmdlT3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcbiAgICAgICAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xyXG4gICAgICAgIGxldCBkZWZhdWx0T3B0aW9ucyA9IHRoaXMuZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgLy8gb3ZlcnJpZGUgZGVmYXVsdHMgd2l0aCB1c2VyIG9wdGlvbnNcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICB0aGlzLmZpeE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgZml4T3B0aW9ucygpIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMudGl0bGUgPSB0aGlzLmNvbW1vbi5zZXRJbm5lclRleHREZWZhdWx0cyh0aGlzLm9wdGlvbnMudGl0bGUpO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCA9IHRoaXMuY29tbW9uLmZpeFN0cm9rZVdpZHRoKHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCk7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnJhZGl1cyA9IHRoaXMuY29tbW9uLmZpeFJhZGl1cyh0aGlzLm9wdGlvbnMucmFkaXVzKTtcclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmhpZGVCb3R0b20pIHtcclxuICAgICAgICAgICAgbGV0IHBvcnRpb25Ub0hpZGUgPSAwLjMzMzQ7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5taW5NYXhWYWwubWF4ID0gdGhpcy5jb21tb24ubm9ybWFsaXplQnlQZXJjZW50YWdlKHRoaXMub3B0aW9ucy5taW5NYXhWYWwubWF4LCBwb3J0aW9uVG9IaWRlKTtcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLm1pbk1heFZhbC5taW4gPSB0aGlzLmNvbW1vbi5ub3JtYWxpemVCeVBlcmNlbnRhZ2UodGhpcy5vcHRpb25zLm1pbk1heFZhbC5taW4sIHBvcnRpb25Ub0hpZGUpO1xyXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMubWluTWF4VmFsLnZhbHVlID0gdGhpcy5jb21tb24ubm9ybWFsaXplQnlQZXJjZW50YWdlKHRoaXMub3B0aW9ucy5taW5NYXhWYWwudmFsdWUsIHBvcnRpb25Ub0hpZGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIGxldCBoNCA9IHtcclxuICAgICAgICAgICAgdHlwZTogJ2g0JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICdzdHlsZSc6IGBwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDEwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiAxMDAlOyB0cmFuc2l0aW9uLXByb3BlcnR5OiBjb2xvcjsgbWFyZ2luOiAwO3RvcDogNTAlO2xlZnQ6IDA7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO2BcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gYXMgSnNvblRvSHRtbEVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IGg0RWxlbSA9IHRoaXMuY29tbW9uLmpzb25Ub0h0bWwoaDQpIGFzIGFueTtcclxuXHJcbiAgICAgICAgbGV0IG9iaiA9IHtcclxuICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAnZGF0YS1yYW5nZSc6ICcnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGFzIEpzb25Ub0h0bWxFbGVtZW50O1xyXG5cclxuICAgICAgICBsZXQgaW5uZXJFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbChvYmopO1xyXG5cclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQoaDRFbGVtKTtcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKGZhbHNlKTtcclxuXHJcbiAgICAgICAgXHJcblxyXG5cclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQodGhpcy5jaXJjbGUuZ2V0RWxlbWVudCgpKTtcclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQodGhpcy5lZGdlcy5nZXRMZWZ0RWxlbWVudCgpKTtcclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQodGhpcy5lZGdlcy5nZXRSaWdodEVsZW1lbnQoKSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChpbm5lckVsZW0pO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnModHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZShvcHRpb25zOiBSYW5nZU9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICB0aGlzLmZpeE9wdGlvbnMoKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnModHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlT3B0aW9ucyhzZXRXcmFwPzogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgICAgIGlmIChzZXRXcmFwKVxyXG4gICAgICAgICAgICB0aGlzLnNldFdyYXAodGhpcy5vcHRpb25zKTtcclxuICAgICAgICB0aGlzLnNldFRpdGxlKHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5zZXRDaXJjbGUoKTtcclxuICAgICAgICB0aGlzLnNldEVkZ2VzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VGl0bGUob3B0aW9uczogUmFuZ2VPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IGg0ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2g0Jyk7XHJcbiAgICAgICAgaWYgKCFoNCkgcmV0dXJuO1xyXG4gICAgICAgIGg0LnN0eWxlLmNvbG9yID0gb3B0aW9ucy5oaWdobGlnaHQgPyBvcHRpb25zLmNvbG9ycy5hY3RpdmUgOiBvcHRpb25zLmNvbG9ycy5kZWZhdWx0O1xyXG4gICAgICAgIGg0LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG9wdGlvbnMuYW5pbWF0aW9uRHVyYXRpb24gKyAnbXMnO1xyXG4gICAgICAgIGg0LnN0eWxlLmZvbnRTaXplID0gb3B0aW9ucy50aXRsZS5mb250U2l6ZSArICdtcyc7XHJcbiAgICAgICAgaDQuc3R5bGUuZm9udEZhbWlseSA9IG9wdGlvbnMudGl0bGUuZm9udEZhbWlseTtcclxuICAgICAgICBoNC5zdHlsZS5mb250V2VpZ2h0ID0gb3B0aW9ucy50aXRsZS5mb250V2VpZ2h0O1xyXG4gICAgICAgIGg0LnN0eWxlLmxldHRlclNwYWNpbmcgPSBvcHRpb25zLnRpdGxlLmxldHRlclNwYWNpbmc7XHJcbiAgICAgICAgaDQuc3R5bGUubGluZUhlaWdodCA9IG9wdGlvbnMudGl0bGUubGluZUhlaWdodCArICdweCc7XHJcbiAgICAgICAgaDQudGV4dENvbnRlbnQgPSBvcHRpb25zLnRpdGxlLnRleHQ7XHJcbiAgICAgICAgaDQuc3R5bGUudG9wID0gJ2NhbGMoNTAlIC0gJyArIChvcHRpb25zLnRpdGxlLmxpbmVIZWlnaHQgLyAyKSArICdweCknO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFdyYXAob3B0aW9uczogUmFuZ2VPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IHdyYXAgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IGRpbSA9IChvcHRpb25zLnJhZGl1cyAqIDIpICsgJ3B4JztcclxuICAgICAgICB3cmFwLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xyXG4gICAgfVxyXG5cclxuICAgIGdldERlZmF1bHRPcHRpb25zKCk6IFJhbmdlT3B0aW9ucyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbWluTWF4VmFsOiB7XHJcbiAgICAgICAgICAgICAgICBtaW46IDMwLFxyXG4gICAgICAgICAgICAgICAgbWF4OiA3MCxcclxuICAgICAgICAgICAgICAgIHZhbHVlOiA1NVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0aXRsZToge1xyXG4gICAgICAgICAgICAgICAgdGV4dDogJycsXHJcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29sb3JzOiB0aGlzLmNvbW1vbi5nZXREZWZhdWx0Q29sb3JzKCksXHJcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiA2LFxyXG4gICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogNTAwLFxyXG4gICAgICAgICAgICByYWRpdXM6IDg4LFxyXG4gICAgICAgICAgICBzaG93RWRnZXM6IHRydWUsXHJcbiAgICAgICAgICAgIHNob3dJY29uOiB0cnVlLFxyXG4gICAgICAgICAgICBob2xsb3dFZGdlczogU2lkZVN0YXRlLk5vbmUsXHJcbiAgICAgICAgICAgIGhpZGVCb3R0b206IHRydWUsXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodDogZmFsc2VcclxuICAgICAgICB9IGFzIFJhbmdlT3B0aW9ucztcclxuICAgIH1cclxuXHJcbiAgICBzZXRDaXJjbGUoKSB7XHJcbiAgICAgICAgdGhpcy5jaXJjbGVPcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgdGhpcy5jaXJjbGVPcHRpb25zKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuZnJvbURlZ3JlZSA9IHRoaXMub3B0aW9ucy5taW5NYXhWYWwubWluO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy50b0RlZ3JlZSA9IHRoaXMub3B0aW9ucy5taW5NYXhWYWwubWF4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5lbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jaXJjbGUpXHJcbiAgICAgICAgICAgIHRoaXMuY2lyY2xlLnVwZGF0ZSh0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUgPSBuZXcgQ2lyY2xlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RWRnZXMoKSB7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCB0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMuc3Ryb2tlV2lkdGggPSB0aGlzLm9wdGlvbnMuc3Ryb2tlV2lkdGg7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMuY29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3JzLmFjdGl2ZTtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5ob2xsb3dFZGdlcyA9IHRoaXMub3B0aW9ucy5ob2xsb3dFZGdlcztcclxuICAgICAgICBcclxuICAgICAgICBpZiAodGhpcy5lZGdlcylcclxuICAgICAgICAgICAgdGhpcy5lZGdlcy51cGRhdGUodGhpcy5lZGdlc09wdGlvbnMpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5lZGdlcyA9IG5ldyBFZGdlcyh0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAgICAgbGV0IGxlZnQgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbGVmdC1lZGdlXScpO1xyXG4gICAgICAgIGxldCByaWdodCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1yaWdodC1lZGdlXScpO1xyXG4gICAgICAgIGlmIChsZWZ0ICYmIHJpZ2h0KSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLnNob3dFZGdlcykge1xyXG4gICAgICAgICAgICAgICAgbGVmdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxlZnQuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19"}