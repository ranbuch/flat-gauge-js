{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/circle.ts","src/common.ts","src/interfaces.ts","src/spinner.ts"],"names":[],"mappings":"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","file":"spinner.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Circle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: CircleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.injectCss();\r\n\r\n        this.init();\r\n    }\r\n\r\n    injectCss(): void {\r\n        let className = '_all-gauge-js-circle-style';\r\n        if (document.querySelector('.' + className)) return;\r\n\r\n        let style = `@keyframes allGaugeRotatingCircle {\r\n            from {\r\n                transform: rotate(0deg);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }`;\r\n\r\n        let sheet = document.createElement('style');\r\n        sheet.innerHTML = style;\r\n        sheet.className = className;\r\n        document.body.appendChild(sheet);\r\n    }\r\n\r\n    public update(options: CircleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        if (typeof this.options.indent === 'undefined')\r\n            this.options.indent = 50;\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setSvg(this.options);\r\n        this.setElements(this.options);\r\n    }\r\n\r\n    setSvg(options: CircleOptions): void {\r\n        if (options.toDegree - options.fromDegree == 100)\r\n            options.toDegree -= 0.0001;\r\n        let startAngle = (options.fromDegree - this.options.indent) * 3.6, endAngle = (options.toDegree - this.options.indent) * 3.6;\r\n        let d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n\r\n        let svg = this.element.querySelector('svg');\r\n        let dim = options.radius * 2;\r\n        svg.style.transitionDuration = options.animationDuration;\r\n        svg.style.width = dim + 'px';\r\n        svg.style.height = dim + 'px';\r\n        svg.style.animation = `allGaugeRotatingCircle ${options.rotationSpeed}ms linear infinite`;\r\n        svg.setAttributeNS(null, 'width', dim + 'px');\r\n        svg.setAttributeNS(null, 'height', dim + 'px');\r\n        let path = svg.querySelector('[data-arc]');\r\n        path.setAttributeNS(null, 'stroke', options.colors.active);\r\n        path.setAttributeNS(null, 'stroke-width', options.strokeWidth);\r\n        if (d.indexOf('NaN') == -1)\r\n            path.setAttributeNS(null, 'd', d);\r\n        path.style.strokeWidth = options.strokeWidth + 'px';\r\n        path.style.transitionDuration = options.animationDuration;\r\n\r\n        let concealer = svg.querySelector('[data-concealer]');\r\n        if (options.hideBottom) {\r\n            startAngle = (33.334) * 3.6, endAngle = (66.667) * 3.6;\r\n            d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n            concealer.setAttributeNS(null, 'stroke-width', options.strokeWidth + 2);\r\n            concealer.setAttributeNS(null, 'd', d);\r\n            concealer.style.strokeWidth = (options.strokeWidth + 2) + 'px';\r\n            concealer.style.display = '';\r\n            let bgColor = options.backgroundColor;\r\n            if (!bgColor)\r\n                bgColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!bgColor)\r\n                bgColor = '#ffffff';\r\n            concealer.setAttributeNS(null, 'stroke', bgColor);\r\n        }\r\n        else\r\n            concealer.style.display = 'none';\r\n    }\r\n\r\n    setElements(options: CircleOptions): void {\r\n        // let circle = this.element.querySelector('div[data-circle]');\r\n        let circle = this.element.children[0];\r\n        let dim = this.options.radius * 2 + 'px';\r\n        circle.style.width = dim;\r\n        circle.style.height = dim;\r\n        circle.style.transitionDuration = options.animationDuration;\r\n\r\n        let c1 = circle.querySelector('[data-c1]');\r\n        c1.style.width = dim;\r\n        c1.style.height = dim;\r\n        c1.style.backgroundColor = this.options.colors.inactive;\r\n        c1.style.transitionDuration = options.animationDuration;\r\n        \r\n        let c3 = circle.querySelector('[data-c3]');\r\n        dim = ((options.radius * 2) - (options.strokeWidth * 2)) + 'px';\r\n        c3.style.width = dim;\r\n        c3.style.height = dim;\r\n        c3.style.top = options.strokeWidth + 'px';\r\n        c3.style.left = options.strokeWidth + 'px';\r\n        c3.style.backgroundColor = options.backgroundColor;\r\n        c3.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative; margin: auto; display: block;`,\r\n                'data-circle': 'true'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c1': '',\r\n                                'style': `position: absolute;top: 0; left: 0; z-index: 1; border-radius: 50%;`\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'svg',\r\n                            attrs: {\r\n                                'style': `position: absolute; top: 0;left: 0; z-index: 2; border-radius: unset;`\r\n                            },\r\n                            children: [\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-arc': ''\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-concealer': ''\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c3': '',\r\n                                'style': `position: absolute; z-index: 3; border-radius: 50%;`\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): any {\r\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    describeArc(x: number, y: number, radius: number, startAngle: number, endAngle: number): any {\r\n        var start = this.polarToCartesian(x, y, radius, endAngle);\r\n        var end = this.polarToCartesian(x, y, radius, startAngle);\r\n        var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n        var d = [\r\n            \"M\", start.x, start.y,\r\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n        ].join(\" \");\r\n        return d;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","import { JsonToHtmlElement, RGBA, InnerText, ColorPalette, MinMaxVal, FromTo, Time, SideState } from './interfaces';\r\n\r\nexport class Common {\r\n    static NameSpaceElements: Array<string> = ['svg', 'path', 'g'];\r\n    static xmlns: string = \"http://www.w3.org/2000/svg\";\r\n    // static needleWidthHeightRatio: number = 9.107127839547825;\r\n    static needleWidthHeightRatio: number = 8.69322239126;\r\n    extend(src: any, dest: any, copy?: boolean): any {\r\n        for (let i in src) {\r\n            if (typeof src[i] === 'object') {\r\n                if (dest && dest[i])\r\n                    src[i] = this.extend(src[i], dest[i]);\r\n            }\r\n            else if (typeof dest === 'object' && typeof dest[i] !== 'undefined') {\r\n                src[i] = dest[i];\r\n            }\r\n        }\r\n        if (copy)\r\n            return JSON.parse(JSON.stringify(src));\r\n        return src;\r\n    }\r\n\r\n    jsonToHtml(obj: JsonToHtmlElement): any {\r\n        let elm = null, isNsElem = Common.NameSpaceElements.filter(x => x == obj.type).length > 0;\r\n        if (isNsElem)\r\n            elm = document.createElementNS(Common.xmlns, obj.type);\r\n        else\r\n            elm = document.createElement(obj.type);\r\n        for (var i in obj.attrs) {\r\n            if (isNsElem)\r\n                elm.setAttributeNS(null, i, obj.attrs[i]);\r\n            else\r\n                elm.setAttribute(i, obj.attrs[i]);\r\n        }\r\n        for (let i in obj.children) {\r\n            let newElem = null;\r\n            if (obj.children[i].type == '#text')\r\n                newElem = document.createTextNode(obj.children[i].text);\r\n            else\r\n                newElem = this.jsonToHtml(obj.children[i]);\r\n            if ((newElem && newElem.tagName && newElem.tagName.toLowerCase() !== 'undefined') || newElem.nodeType == 3)\r\n                elm.appendChild(newElem);\r\n        }\r\n        return elm;\r\n    }\r\n\r\n    isHex(str: string): boolean {\r\n        return str.indexOf('#') > -1;\r\n    }\r\n\r\n    isRgba(str: string) {\r\n        return str.split(',').length > 3;\r\n    }\r\n\r\n    toRgbObj(rgba: string): RGBA {\r\n        let arr = rgba.split(',').map((item) => {\r\n            return parseInt(item, 10);\r\n        });\r\n        return {\r\n            Red: arr[0],\r\n            Green: arr[1],\r\n            Blue: arr[2],\r\n            Alpha: arr[3]\r\n        };\r\n    }\r\n\r\n    RgbObjToString(rgba: RGBA): string {\r\n        let ans = '(' + rgba.Red + ',' + rgba.Green + ',' + rgba.Blue;\r\n        if (rgba.Alpha)\r\n            ans += ',' + rgba.Alpha\r\n        ans += ')';\r\n        return ans;\r\n    }\r\n\r\n    hexToRgb(hex: string): RGBA {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m: string, r: string, g: string, b: string) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            Red: parseInt(result[1], 16),\r\n            Green: parseInt(result[2], 16),\r\n            Blue: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    setInnerTextDefaults(innerText?: InnerText): InnerText {\r\n        if (!innerText)\r\n            innerText = {\r\n                text: ''\r\n            };\r\n        if (!innerText.text)\r\n            innerText.text = '';\r\n        if (!innerText.fontSize)\r\n            innerText.fontSize = 18;\r\n        if (!innerText.lineHeight)\r\n            innerText.lineHeight = innerText.fontSize;\r\n        if (!innerText.fontFamily)\r\n            innerText.fontFamily = 'Arial,Utkal,sans-serif';\r\n        if (!innerText.fontWeight)\r\n            innerText.fontWeight = 'normal';\r\n        if (!innerText.letterSpacing)\r\n            innerText.letterSpacing = '0';\r\n        return innerText;\r\n    }\r\n\r\n    getComputedStyleByParentRec(elem: any, cssProp: string): string {\r\n        if (!elem) return null;\r\n        let css = getComputedStyle(elem) as any;\r\n        let val = css[cssProp];\r\n        if (val && val != 'rgba(0, 0, 0, 0)') return val;\r\n        return this.getComputedStyleByParentRec(elem.parentElement, cssProp);\r\n    }\r\n\r\n    // odd strokeWidth is not supported\r\n    fixStrokeWidth(sw: number): number {\r\n        if (sw % 2 == 1)\r\n            console.warn('all-gauge: stroke-width \"' + sw + '\" is not supported (odd), changed to \"' + (++sw)) + '\"';\r\n        return sw;\r\n    }\r\n\r\n    // odd radius is not supported\r\n    fixRadius(r: number): number {\r\n        if (r % 2 == 1)\r\n            console.warn('all-gauge: radius \"' + r + '\" is not supported (odd), changed to \"' + (++r)) + '\"';\r\n        return r;\r\n    }\r\n\r\n    getDefaultColors(): ColorPalette {\r\n        return {\r\n            active: '#4CCEAD',\r\n            default: '#505050',\r\n            inactive: '#ededed'\r\n        };\r\n    }\r\n\r\n    getNeedleInnerStyle(radius: number): any {\r\n        return {\r\n            'height': (radius + 20) + 'px',\r\n            'width': (radius / Common.needleWidthHeightRatio) + 'px'\r\n        };\r\n    }\r\n\r\n    getNeedleStyle(radius: number, arcNeedlePercentage: number, scale: number, indent: number = 50) {\r\n        if (typeof scale !== 'number')\r\n            scale = 1.125;\r\n        let deg = (arcNeedlePercentage - indent) * 3.6;\r\n        return {\r\n            'left': 'calc(50% - ' + ((radius / Common.needleWidthHeightRatio)) / 2 + 'px',\r\n            'transform': 'rotate(' + deg + 'deg) scale(' + scale + ')'\r\n        };\r\n    }\r\n\r\n    isInRange(minMaxVal: MinMaxVal, sides: SideState) {\r\n        switch (sides) {\r\n            case SideState.Both: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n            case SideState.None: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Left: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Right: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    normalizeByPercentage(value: number, percentage: number, mid?: number, max?: number): number {\r\n        if (typeof mid === 'undefined')\r\n            mid = 50;\r\n        if (typeof max === 'undefined')\r\n            max = mid * 2;\r\n        let rel = null;\r\n\r\n        if (value > mid) {\r\n            percentage /= 2;\r\n            rel = Math.abs(mid - value);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value * (1 - percentage);\r\n        }\r\n        else {\r\n            if (value == 0.0)\r\n                value = 0.001;\r\n            rel = Math.abs(value - mid);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value + (mid * (percentage));\r\n        }\r\n    }\r\n\r\n    getRemainder(range: FromTo, hour: number) {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) {\r\n            return current - range.from;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isHourInRange(range: FromTo, hour: number): boolean {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) return true;\r\n        return false;\r\n    }\r\n\r\n    getPercentageByTime(dateTime: Date): number {\r\n        let secondsInADay = 86400; //24 * 60 * 60;\r\n        let hours = dateTime.getHours() * 3600; //60 * 60;\r\n        let minutes = dateTime.getMinutes() * 60;\r\n        let seconds = dateTime.getSeconds();\r\n        let totalSeconds = hours + minutes + seconds;\r\n        let percentSeconds = 100 * totalSeconds / secondsInADay;\r\n        return percentSeconds;\r\n        // let max = 86400000; // 1000 * 60 * 60 * 24 is the number of milliseconds on a 24 hours day.\r\n        // let hours = dateTime.getHours();\r\n        // let minutes = dateTime.getMinutes();\r\n        // let seconds = dateTime.getSeconds();\r\n        // let total = (hours * 1000 * 60 * 60) + (minutes * 1000 * 60) + (seconds * 1000);\r\n        // let percentage = total / max;\r\n        // return percentage * 100;\r\n    }\r\n\r\n    getMinutesFromHour(hour: string) {\r\n        let arr = hour.split(':');\r\n        return parseInt(arr[0].trim()) * 60 + parseInt(arr[1].trim());\r\n    }\r\n\r\n    getMinutesFromStart(hour: string, start = 0) {\r\n        let arr = hour.split(':');\r\n        return Math.max((parseInt(arr[0].trim()) * 60 + (parseInt(arr[1].trim()))) - start, 0);\r\n    }\r\n\r\n    getHoursAndMinutesLT(date: Date): string {\r\n        let hours = date.getHours();\r\n        hours = (hours + 24 - 2) % 24;\r\n        let mid = 'am';\r\n        if (hours == 0) { //At 00 hours we need to show 12 am\r\n            hours = 12;\r\n        }\r\n        else if (hours > 12) {\r\n            hours = hours % 12;\r\n            mid = 'pm';\r\n        }\r\n        return hours + ':' + date.getMinutes() + ' ' + mid;\r\n    }\r\n\r\n    getSecondsFromTime(timer: Time): number {\r\n        let hours = 0;\r\n        hours += timer.hours * 3600;\r\n        hours += timer.minutes * 60;\r\n        hours += timer.seconds;\r\n        return hours;\r\n    }\r\n\r\n    setTimeToZero(timer: Time): void {\r\n        timer.hours = 0;\r\n        timer.minutes = 0;\r\n        timer.seconds = 0;\r\n    }\r\n\r\n    decreaseTime(timer: Time): boolean {\r\n        if (timer.seconds > 0) {\r\n            if (--timer.seconds < 0) {\r\n                timer.seconds = 59;\r\n                if (--timer.minutes < 0) {\r\n                    timer.minutes = 59;\r\n                    if (--timer.hours < 0) {\r\n                        this.setTimeToZero(timer);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (timer.minutes > 0) {\r\n            timer.seconds = 59;\r\n            if (--timer.minutes < 0) {\r\n                timer.minutes = 59;\r\n                if (--timer.hours < 0) {\r\n                    this.setTimeToZero(timer);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (timer.hours > 0) {\r\n            timer.minutes = 59;\r\n            if (--timer.hours < 0) {\r\n                this.setTimeToZero(timer);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.isTimeZero(timer)) {\r\n            this.setTimeToZero(timer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTimeZero(timer: Time): boolean {\r\n        if (timer.hours <= 0 && timer.minutes <= 0 && timer.seconds <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    padWithZiro(text: string) {\r\n        if (String(text).length < 2)\r\n            text = '0' + text;\r\n        return text;\r\n    }\r\n\r\n    getSideStateByString(state: string): SideState {\r\n        if (!state) return SideState.None;\r\n        switch (state.toLowerCase()) {\r\n            case 'left':\r\n                return SideState.Left;\r\n            case 'right':\r\n                return SideState.Right;\r\n            case 'both':\r\n                return SideState.Both;\r\n            case 'none':\r\n                return SideState.None;\r\n            default:\r\n                return SideState.None\r\n        }\r\n    }\r\n}","export interface ColorPalette {\r\n    default: string;\r\n    active: string;\r\n    inactive: string;\r\n}\r\n\r\nexport interface CircleOptions {\r\n    colors?: ColorPalette;\r\n    fromDegree?: number;\r\n    toDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    animationDuration?: number;\r\n    backgroundColor?: string;\r\n    hideBottom: boolean;\r\n    indent?: number;\r\n}\r\n\r\nexport interface SpinnerOptions {\r\n    colors?: ColorPalette;\r\n    activeDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    title?: InnerText;\r\n    animationDuration?: number;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport interface InnerText {\r\n    text: string;\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    lineHeight?: number;\r\n    fontWeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport interface JsonToHtmlElement {\r\n    type: string;\r\n    text?: string;\r\n    attrs?: any;\r\n    children?: Array<JsonToHtmlElement>;\r\n}\r\n\r\nexport interface RGBA {\r\n    Red: number;\r\n    Green: number;\r\n    Blue: number;\r\n    Alpha?: number;\r\n}\r\n\r\nexport interface MinMaxVal {\r\n    min: number;\r\n    max: number;\r\n    value?: number;\r\n}\r\n\r\nexport interface NeedleOptions {\r\n    color: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    scale: number;\r\n    animationDuration?: number;\r\n    disabled?: boolean;\r\n    indent?: number;\r\n}\r\n\r\nexport interface TuneOptions {\r\n    needleOptions?: NeedleOptions;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    // title?: InnerText;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n}\r\n\r\n// export interface MinMaxEdge {\r\n//     minMaxVal: MinMaxVal;\r\n//     leftEdges?: SinngleSideState;\r\n//     rightEdges?: SinngleSideState;\r\n//     bgColor: string;\r\n// }\r\n\r\nexport interface MultituneOptions {\r\n    needleOptions: NeedleOptions;\r\n    segments: Array<MinMaxVal>;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface RangeOptions {\r\n    colors?: ColorPalette;\r\n    minMaxVal: MinMaxVal;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    hideBottom: boolean;\r\n    title?: InnerText;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport enum SideState {\r\n    None,\r\n    Left,\r\n    Right,\r\n    Both,\r\n}\r\n\r\n// export enum SinngleSideState {\r\n//     None,\r\n//     Hollow,\r\n//     Full,\r\n// }\r\n\r\nexport interface EdgesOptions {\r\n    color: string;\r\n    backgroundColor?: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    strokeWidth: number;\r\n    animationDuration?: number;\r\n    hollowEdges?: SideState;\r\n    indent?: number;\r\n}\r\n\r\nexport interface IconOptions {\r\n    degree: number;\r\n    radius: number;\r\n\tradiusOffset?: number;\r\n    animationDuration?: number;\r\n    src: string;\r\n    dimensions: {\r\n        width: number;\r\n        height: number;\r\n    },\r\n    top?: number;\r\n    left?: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface NumberData {\r\n        number: string;\r\n        isActive: boolean;\r\n        remainder: number;\r\n    }\r\n\r\nexport interface AmPmOptions {\r\n    fromTo: FromToString;\r\n    needleOptions?: NeedleOptions;\r\n    colors?: ColorPalette;\r\n    radius: number;\r\n    minMaxValAm?: MinMaxVal;\r\n    minMaxValPm?: MinMaxVal;\r\n    animationDuration?: number;\r\n    strokeWidth?: number;\r\n    hollowEdgesAm?: SideState;\r\n    hollowEdgesPm?: SideState;\r\n    showEdgesAm?: boolean;\r\n    showEdgesPm?: boolean;\r\n}\r\n\r\nexport interface FromTo {\r\n        from: number;\r\n        to: number;\r\n    }\r\n\r\nexport interface FromToString {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nexport interface Time {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n}\r\n\r\nexport interface TimerOptions {\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    time: Time;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    title?: InnerText;\r\n    percentage?: number;\r\n}","import { SpinnerOptions, JsonToHtmlElement, RGBA, InnerText, CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\n\r\nexport class Spinner {\r\n    private element: any;\r\n    private options: SpinnerOptions;\r\n    private circleOptions: CircleOptions;\r\n    private common: Common;\r\n    private circle: Circle;\r\n    constructor(element: any, options?: SpinnerOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): SpinnerOptions {\r\n        return {\r\n            colors: this.common.getDefaultColors(),\r\n            activeDegree: 10,\r\n            radius: 88,\r\n            strokeWidth: 6,\r\n            rotationSpeed: 5000,\r\n            animationDuration: 500,\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            highlight: false\r\n        } as SpinnerOptions;\r\n    }\r\n\r\n    public update(options: SpinnerOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setTitle(this.options);\r\n        this.setDiv(this.options);\r\n        this.setCircle();\r\n    }\r\n\r\n    setTitle(options: SpinnerOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        // h4.style.top = ((options.radius) - (options.title.fontSize / 2)) + 'px';\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        // setTimeout(() => {\r\n        //     let h = parseInt(getComputedStyle(h4).height.replace('px', ''));\r\n        //     if (!isNaN(h))\r\n        //         h4.style.top = ((options.radius) - (h / 2)) + 'px';\r\n        // }, 10);\r\n    }\r\n\r\n    setDiv(options: SpinnerOptions) {\r\n        let div = this.element.querySelector('div[data-spinner]');\r\n        let dim = options.radius * 2 + 'px';\r\n        div.style.width = dim;\r\n        div.style.height = dim;\r\n        div.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        \r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n        \r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative;`,\r\n                'data-spinner': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.setCircle();\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        this.circleOptions.fromDegree = -this.options.activeDegree / 2;\r\n        this.circleOptions.toDegree = this.options.activeDegree / 2;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle) {\r\n            this.circle.update(this.circleOptions);\r\n        }\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY2lyY2xlLnRzIiwic3JjL2NvbW1vbi50cyIsInNyYy9pbnRlcmZhY2VzLnRzIiwic3JjL3NwaW5uZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUNDQSxJQUFBLFdBQUEsUUFBQSxVQUFBLENBQUE7QUFFQSxJQUFBLFNBQUEsYUFBQSxZQUFBO0FBR0ksYUFBQSxNQUFBLENBQW9CLE9BQXBCLEVBQTBDO0FBQXRCLGFBQUEsT0FBQSxHQUFBLE9BQUE7QUFDaEIsYUFBSyxNQUFMLEdBQWMsSUFBSSxTQUFBLE1BQUosRUFBZDtBQUVBLGFBQUssU0FBTDtBQUVBLGFBQUssSUFBTDtBQUNIO0FBRUQsV0FBQSxTQUFBLENBQUEsU0FBQSxHQUFBLFlBQUE7QUFDSSxZQUFJLFlBQVksNEJBQWhCO0FBQ0EsWUFBSSxTQUFTLGFBQVQsQ0FBdUIsTUFBTSxTQUE3QixDQUFKLEVBQTZDO0FBRTdDLFlBQUksUUFBUSwwTUFBWjtBQVNBLFlBQUksUUFBUSxTQUFTLGFBQVQsQ0FBdUIsT0FBdkIsQ0FBWjtBQUNBLGNBQU0sU0FBTixHQUFrQixLQUFsQjtBQUNBLGNBQU0sU0FBTixHQUFrQixTQUFsQjtBQUNBLGlCQUFTLElBQVQsQ0FBYyxXQUFkLENBQTBCLEtBQTFCO0FBQ0gsS0FqQkQ7QUFtQk8sV0FBQSxTQUFBLENBQUEsTUFBQSxHQUFQLFVBQWMsT0FBZCxFQUFvQztBQUNoQyxhQUFLLE9BQUwsR0FBZSxLQUFLLE1BQUwsQ0FBWSxNQUFaLENBQW1CLEtBQUssT0FBeEIsRUFBaUMsT0FBakMsQ0FBZjtBQUNBLFlBQUksT0FBTyxLQUFLLE9BQUwsQ0FBYSxNQUFwQixLQUErQixXQUFuQyxFQUNJLEtBQUssT0FBTCxDQUFhLE1BQWIsR0FBc0IsRUFBdEI7QUFDSixhQUFLLGFBQUw7QUFDSCxLQUxNO0FBT1AsV0FBQSxTQUFBLENBQUEsYUFBQSxHQUFBLFlBQUE7QUFDSSxh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S0FBSyxNQUFMLENBQVksVUFBWixFQUF0QjtBQUVBLGFBQUssT0FBTCxDQUFhLFdBQWIsQ0FBeUIsU0FBekI7QUFFQSxhQUFLLGFBQUw7QUFDSCxLQTdCRDtBQStCQSxZQUFBLFNBQUEsQ0FBQSxTQUFBLEdBQUEsWUFBQTtBQUNJLGFBQUssYUFBTCxHQUFxQixLQUFLLE1BQUwsQ0FBWSxNQUFaLENBQW1CLEtBQUssT0FBeEIsRUFBaUMsS0FBSyxhQUF0QyxDQUFyQjtBQUNBLGFBQUssYUFBTCxDQUFtQixVQUFuQixHQUFnQyxDQUFDLEtBQUssT0FBTCxDQUFhLFlBQWQsR0FBNkIsQ0FBN0Q7QUFDQSxhQUFLLGFBQUwsQ0FBbUIsUUFBbkIsR0FBOEIsS0FBSyxPQUFMLENBQWEsWUFBYixHQUE0QixDQUExRDtBQUVBLGFBQUssYUFBTCxDQUFtQixlQUFuQixHQUFxQyxLQUFLLE1BQUwsQ0FBWSwyQkFBWixDQUF3QyxLQUFLLE9BQTdDLEVBQXNELGlCQUF0RCxDQUFyQztBQUNBLFlBQUksQ0FBQyxLQUFLLGFBQUwsQ0FBbUIsZUFBeEIsRUFDSSxLQUFLLGFBQUwsQ0FBbUIsZUFBbkIsR0FBcUMsTUFBckM7QUFFSixZQUFJLEtBQUssTUFBVCxFQUFpQjtBQUNiLGlCQUFLLE1BQUwsQ0FBWSxNQUFaLENBQW1CLEtBQUssYUFBeEI7QUFDSCxTQUZELE1BSUksS0FBSyxNQUFMLEdBQWMsSUFBSSxTQUFBLE1BQUosQ0FBVyxLQUFLLGFBQWhCLENBQWQ7QUFDUCxLQWREO0FBZUosV0FBQSxPQUFBO0FBQUMsQ0F6SEQsRUFBQTtBQUFhLFFBQUEsT0FBQSxHQUFBLE9BQUEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiaW1wb3J0IHsgQ2lyY2xlT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDaXJjbGUge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIGNvbW1vbjogQ29tbW9uO1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBvcHRpb25zOiBDaXJjbGVPcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcblxyXG4gICAgICAgIHRoaXMuaW5qZWN0Q3NzKCk7XHJcblxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGluamVjdENzcygpOiB2b2lkIHtcclxuICAgICAgICBsZXQgY2xhc3NOYW1lID0gJ19hbGwtZ2F1Z2UtanMtY2lyY2xlLXN0eWxlJztcclxuICAgICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLicgKyBjbGFzc05hbWUpKSByZXR1cm47XHJcblxyXG4gICAgICAgIGxldCBzdHlsZSA9IGBAa2V5ZnJhbWVzIGFsbEdhdWdlUm90YXRpbmdDaXJjbGUge1xyXG4gICAgICAgICAgICBmcm9tIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9YDtcclxuXHJcbiAgICAgICAgbGV0IHNoZWV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcclxuICAgICAgICBzaGVldC5pbm5lckhUTUwgPSBzdHlsZTtcclxuICAgICAgICBzaGVldC5jbGFzc05hbWUgPSBjbGFzc05hbWU7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzaGVldCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZShvcHRpb25zOiBDaXJjbGVPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuaW5kZW50ID09PSAndW5kZWZpbmVkJylcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmluZGVudCA9IDUwO1xyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZU9wdGlvbnMoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXRTdmcodGhpcy5vcHRpb25zKTtcclxuICAgICAgICB0aGlzLnNldEVsZW1lbnRzKHRoaXMub3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0U3ZnKG9wdGlvbnM6IENpcmNsZU9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICBpZiAob3B0aW9ucy50b0RlZ3JlZSAtIG9wdGlvbnMuZnJvbURlZ3JlZSA9PSAxMDApXHJcbiAgICAgICAgICAgIG9wdGlvbnMudG9EZWdyZWUgLT0gMC4wMDAxO1xyXG4gICAgICAgIGxldCBzdGFydEFuZ2xlID0gKG9wdGlvbnMuZnJvbURlZ3JlZSAtIHRoaXMub3B0aW9ucy5pbmRlbnQpICogMy42LCBlbmRBbmdsZSA9IChvcHRpb25zLnRvRGVncmVlIC0gdGhpcy5vcHRpb25zLmluZGVudCkgKiAzLjY7XHJcbiAgICAgICAgbGV0IGQgPSB0aGlzLmRlc2NyaWJlQXJjKG9wdGlvbnMucmFkaXVzLCBvcHRpb25zLnJhZGl1cywgb3B0aW9ucy5yYWRpdXMgLSAob3B0aW9ucy5zdHJva2VXaWR0aCAvIDIpLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSk7XHJcblxyXG4gICAgICAgIGxldCBzdmcgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3Rvcignc3ZnJyk7XHJcbiAgICAgICAgbGV0IGRpbSA9IG9wdGlvbnMucmFkaXVzICogMjtcclxuICAgICAgICBzdmcuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgICAgICBzdmcuc3R5bGUud2lkdGggPSBkaW0gKyAncHgnO1xyXG4gICAgICAgIHN2Zy5zdHlsZS5oZWlnaHQgPSBkaW0gKyAncHgnO1xyXG4gICAgICAgIHN2Zy5zdHlsZS5hbmltYXRpb24gPSBgYWxsR2F1Z2VSb3RhdGluZ0NpcmNsZSAke29wdGlvbnMucm90YXRpb25TcGVlZH1tcyBsaW5lYXIgaW5maW5pdGVgO1xyXG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnd2lkdGgnLCBkaW0gKyAncHgnKTtcclxuICAgICAgICBzdmcuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2hlaWdodCcsIGRpbSArICdweCcpO1xyXG4gICAgICAgIGxldCBwYXRoID0gc3ZnLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFyY10nKTtcclxuICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2UnLCBvcHRpb25zLmNvbG9ycy5hY3RpdmUpO1xyXG4gICAgICAgIHBhdGguc2V0QXR0cmlidXRlTlMobnVsbCwgJ3N0cm9rZS13aWR0aCcsIG9wdGlvbnMuc3Ryb2tlV2lkdGgpO1xyXG4gICAgICAgIGlmIChkLmluZGV4T2YoJ05hTicpID09IC0xKVxyXG4gICAgICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZU5TKG51bGwsICdkJywgZCk7XHJcbiAgICAgICAgcGF0aC5zdHlsZS5zdHJva2VXaWR0aCA9IG9wdGlvbnMuc3Ryb2tlV2lkdGggKyAncHgnO1xyXG4gICAgICAgIHBhdGguc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuXHJcbiAgICAgICAgbGV0IGNvbmNlYWxlciA9IHN2Zy5xdWVyeVNlbGVjdG9yKCdbZGF0YS1jb25jZWFsZXJdJyk7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMuaGlkZUJvdHRvbSkge1xyXG4gICAgICAgICAgICBzdGFydEFuZ2xlID0gKDMzLjMzNCkgKiAzLjYsIGVuZEFuZ2xlID0gKDY2LjY2NykgKiAzLjY7XHJcbiAgICAgICAgICAgIGQgPSB0aGlzLmRlc2NyaWJlQXJjKG9wdGlvbnMucmFkaXVzLCBvcHRpb25zLnJhZGl1cywgb3B0aW9ucy5yYWRpdXMgLSAob3B0aW9ucy5zdHJva2VXaWR0aCAvIDIpLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgIGNvbmNlYWxlci5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnc3Ryb2tlLXdpZHRoJywgb3B0aW9ucy5zdHJva2VXaWR0aCArIDIpO1xyXG4gICAgICAgICAgICBjb25jZWFsZXIuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2QnLCBkKTtcclxuICAgICAgICAgICAgY29uY2VhbGVyLnN0eWxlLnN0cm9rZVdpZHRoID0gKG9wdGlvbnMuc3Ryb2tlV2lkdGggKyAyKSArICdweCc7XHJcbiAgICAgICAgICAgIGNvbmNlYWxlci5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgIGxldCBiZ0NvbG9yID0gb3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3I7XHJcbiAgICAgICAgICAgIGlmICghYmdDb2xvcilcclxuICAgICAgICAgICAgICAgIGJnQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5lbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgICAgIGlmICghYmdDb2xvcilcclxuICAgICAgICAgICAgICAgIGJnQ29sb3IgPSAnI2ZmZmZmZic7XHJcbiAgICAgICAgICAgIGNvbmNlYWxlci5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnc3Ryb2tlJywgYmdDb2xvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgY29uY2VhbGVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RWxlbWVudHMob3B0aW9uczogQ2lyY2xlT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIC8vIGxldCBjaXJjbGUgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignZGl2W2RhdGEtY2lyY2xlXScpO1xyXG4gICAgICAgIGxldCBjaXJjbGUgPSB0aGlzLmVsZW1lbnQuY2hpbGRyZW5bMF07XHJcbiAgICAgICAgbGV0IGRpbSA9IHRoaXMub3B0aW9ucy5yYWRpdXMgKiAyICsgJ3B4JztcclxuICAgICAgICBjaXJjbGUuc3R5bGUud2lkdGggPSBkaW07XHJcbiAgICAgICAgY2lyY2xlLnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICBjaXJjbGUuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuXHJcbiAgICAgICAgbGV0IGMxID0gY2lyY2xlLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWMxXScpO1xyXG4gICAgICAgIGMxLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIGMxLnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICBjMS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3JzLmluYWN0aXZlO1xyXG4gICAgICAgIGMxLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG9wdGlvbnMuYW5pbWF0aW9uRHVyYXRpb247XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGMzID0gY2lyY2xlLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWMzXScpO1xyXG4gICAgICAgIGRpbSA9ICgob3B0aW9ucy5yYWRpdXMgKiAyKSAtIChvcHRpb25zLnN0cm9rZVdpZHRoICogMikpICsgJ3B4JztcclxuICAgICAgICBjMy5zdHlsZS53aWR0aCA9IGRpbTtcclxuICAgICAgICBjMy5zdHlsZS5oZWlnaHQgPSBkaW07XHJcbiAgICAgICAgYzMuc3R5bGUudG9wID0gb3B0aW9ucy5zdHJva2VXaWR0aCArICdweCc7XHJcbiAgICAgICAgYzMuc3R5bGUubGVmdCA9IG9wdGlvbnMuc3Ryb2tlV2lkdGggKyAncHgnO1xyXG4gICAgICAgIGMzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IG9wdGlvbnMuYmFja2dyb3VuZENvbG9yO1xyXG4gICAgICAgIGMzLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG9wdGlvbnMuYW5pbWF0aW9uRHVyYXRpb247XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKHtcclxuICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAnc3R5bGUnOiBgcG9zaXRpb246IHJlbGF0aXZlOyBtYXJnaW46IGF1dG87IGRpc3BsYXk6IGJsb2NrO2AsXHJcbiAgICAgICAgICAgICAgICAnZGF0YS1jaXJjbGUnOiAndHJ1ZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLWMxJzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiBhYnNvbHV0ZTt0b3A6IDA7IGxlZnQ6IDA7IHotaW5kZXg6IDE7IGJvcmRlci1yYWRpdXM6IDUwJTtgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdmcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDA7bGVmdDogMDsgei1pbmRleDogMjsgYm9yZGVyLXJhZGl1czogdW5zZXQ7YFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGF0aCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZmlsbCc6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLWFyYyc6ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3BhdGgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZpbGwnOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YS1jb25jZWFsZXInOiAnJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLWMzJzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMzsgYm9yZGVyLXJhZGl1czogNTAlO2BcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwb2xhclRvQ2FydGVzaWFuKGNlbnRlclg6IG51bWJlciwgY2VudGVyWTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgYW5nbGVJbkRlZ3JlZXM6IG51bWJlcik6IGFueSB7XHJcbiAgICAgICAgdmFyIGFuZ2xlSW5SYWRpYW5zID0gKGFuZ2xlSW5EZWdyZWVzIC0gOTApICogTWF0aC5QSSAvIDE4MC4wO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IGNlbnRlclggKyAocmFkaXVzICogTWF0aC5jb3MoYW5nbGVJblJhZGlhbnMpKSxcclxuICAgICAgICAgICAgeTogY2VudGVyWSArIChyYWRpdXMgKiBNYXRoLnNpbihhbmdsZUluUmFkaWFucykpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBkZXNjcmliZUFyYyh4OiBudW1iZXIsIHk6IG51bWJlciwgcmFkaXVzOiBudW1iZXIsIHN0YXJ0QW5nbGU6IG51bWJlciwgZW5kQW5nbGU6IG51bWJlcik6IGFueSB7XHJcbiAgICAgICAgdmFyIHN0YXJ0ID0gdGhpcy5wb2xhclRvQ2FydGVzaWFuKHgsIHksIHJhZGl1cywgZW5kQW5nbGUpO1xyXG4gICAgICAgIHZhciBlbmQgPSB0aGlzLnBvbGFyVG9DYXJ0ZXNpYW4oeCwgeSwgcmFkaXVzLCBzdGFydEFuZ2xlKTtcclxuICAgICAgICB2YXIgbGFyZ2VBcmNGbGFnID0gZW5kQW5nbGUgLSBzdGFydEFuZ2xlIDw9IDE4MCA/IFwiMFwiIDogXCIxXCI7XHJcbiAgICAgICAgdmFyIGQgPSBbXHJcbiAgICAgICAgICAgIFwiTVwiLCBzdGFydC54LCBzdGFydC55LFxyXG4gICAgICAgICAgICBcIkFcIiwgcmFkaXVzLCByYWRpdXMsIDAsIGxhcmdlQXJjRmxhZywgMCwgZW5kLngsIGVuZC55XHJcbiAgICAgICAgXS5qb2luKFwiIFwiKTtcclxuICAgICAgICByZXR1cm4gZDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0RWxlbWVudCgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQ7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBKc29uVG9IdG1sRWxlbWVudCwgUkdCQSwgSW5uZXJUZXh0LCBDb2xvclBhbGV0dGUsIE1pbk1heFZhbCwgRnJvbVRvLCBUaW1lLCBTaWRlU3RhdGUgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbW1vbiB7XHJcbiAgICBzdGF0aWMgTmFtZVNwYWNlRWxlbWVudHM6IEFycmF5PHN0cmluZz4gPSBbJ3N2ZycsICdwYXRoJywgJ2cnXTtcclxuICAgIHN0YXRpYyB4bWxuczogc3RyaW5nID0gXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO1xyXG4gICAgLy8gc3RhdGljIG5lZWRsZVdpZHRoSGVpZ2h0UmF0aW86IG51bWJlciA9IDkuMTA3MTI3ODM5NTQ3ODI1O1xyXG4gICAgc3RhdGljIG5lZWRsZVdpZHRoSGVpZ2h0UmF0aW86IG51bWJlciA9IDguNjkzMjIyMzkxMjY7XHJcbiAgICBleHRlbmQoc3JjOiBhbnksIGRlc3Q6IGFueSwgY29weT86IGJvb2xlYW4pOiBhbnkge1xyXG4gICAgICAgIGZvciAobGV0IGkgaW4gc3JjKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc3JjW2ldID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRlc3QgJiYgZGVzdFtpXSlcclxuICAgICAgICAgICAgICAgICAgICBzcmNbaV0gPSB0aGlzLmV4dGVuZChzcmNbaV0sIGRlc3RbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkZXN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgZGVzdFtpXSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgICAgIHNyY1tpXSA9IGRlc3RbaV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNvcHkpXHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNyYykpO1xyXG4gICAgICAgIHJldHVybiBzcmM7XHJcbiAgICB9XHJcblxyXG4gICAganNvblRvSHRtbChvYmo6IEpzb25Ub0h0bWxFbGVtZW50KTogYW55IHtcclxuICAgICAgICBsZXQgZWxtID0gbnVsbCwgaXNOc0VsZW0gPSBDb21tb24uTmFtZVNwYWNlRWxlbWVudHMuZmlsdGVyKHggPT4geCA9PSBvYmoudHlwZSkubGVuZ3RoID4gMDtcclxuICAgICAgICBpZiAoaXNOc0VsZW0pXHJcbiAgICAgICAgICAgIGVsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhDb21tb24ueG1sbnMsIG9iai50eXBlKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIGVsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQob2JqLnR5cGUpO1xyXG4gICAgICAgIGZvciAodmFyIGkgaW4gb2JqLmF0dHJzKSB7XHJcbiAgICAgICAgICAgIGlmIChpc05zRWxlbSlcclxuICAgICAgICAgICAgICAgIGVsbS5zZXRBdHRyaWJ1dGVOUyhudWxsLCBpLCBvYmouYXR0cnNbaV0pO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlKGksIG9iai5hdHRyc1tpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGkgaW4gb2JqLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIGxldCBuZXdFbGVtID0gbnVsbDtcclxuICAgICAgICAgICAgaWYgKG9iai5jaGlsZHJlbltpXS50eXBlID09ICcjdGV4dCcpXHJcbiAgICAgICAgICAgICAgICBuZXdFbGVtID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUob2JqLmNoaWxkcmVuW2ldLnRleHQpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBuZXdFbGVtID0gdGhpcy5qc29uVG9IdG1sKG9iai5jaGlsZHJlbltpXSk7XHJcbiAgICAgICAgICAgIGlmICgobmV3RWxlbSAmJiBuZXdFbGVtLnRhZ05hbWUgJiYgbmV3RWxlbS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICd1bmRlZmluZWQnKSB8fCBuZXdFbGVtLm5vZGVUeXBlID09IDMpXHJcbiAgICAgICAgICAgICAgICBlbG0uYXBwZW5kQ2hpbGQobmV3RWxlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBlbG07XHJcbiAgICB9XHJcblxyXG4gICAgaXNIZXgoc3RyOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gc3RyLmluZGV4T2YoJyMnKSA+IC0xO1xyXG4gICAgfVxyXG5cclxuICAgIGlzUmdiYShzdHI6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiBzdHIuc3BsaXQoJywnKS5sZW5ndGggPiAzO1xyXG4gICAgfVxyXG5cclxuICAgIHRvUmdiT2JqKHJnYmE6IHN0cmluZyk6IFJHQkEge1xyXG4gICAgICAgIGxldCBhcnIgPSByZ2JhLnNwbGl0KCcsJykubWFwKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUludChpdGVtLCAxMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgUmVkOiBhcnJbMF0sXHJcbiAgICAgICAgICAgIEdyZWVuOiBhcnJbMV0sXHJcbiAgICAgICAgICAgIEJsdWU6IGFyclsyXSxcclxuICAgICAgICAgICAgQWxwaGE6IGFyclszXVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgUmdiT2JqVG9TdHJpbmcocmdiYTogUkdCQSk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IGFucyA9ICcoJyArIHJnYmEuUmVkICsgJywnICsgcmdiYS5HcmVlbiArICcsJyArIHJnYmEuQmx1ZTtcclxuICAgICAgICBpZiAocmdiYS5BbHBoYSlcclxuICAgICAgICAgICAgYW5zICs9ICcsJyArIHJnYmEuQWxwaGFcclxuICAgICAgICBhbnMgKz0gJyknO1xyXG4gICAgICAgIHJldHVybiBhbnM7XHJcbiAgICB9XHJcblxyXG4gICAgaGV4VG9SZ2IoaGV4OiBzdHJpbmcpOiBSR0JBIHtcclxuICAgICAgICAvLyBFeHBhbmQgc2hvcnRoYW5kIGZvcm0gKGUuZy4gXCIwM0ZcIikgdG8gZnVsbCBmb3JtIChlLmcuIFwiMDAzM0ZGXCIpXHJcbiAgICAgICAgdmFyIHNob3J0aGFuZFJlZ2V4ID0gL14jPyhbYS1mXFxkXSkoW2EtZlxcZF0pKFthLWZcXGRdKSQvaTtcclxuICAgICAgICBoZXggPSBoZXgucmVwbGFjZShzaG9ydGhhbmRSZWdleCwgZnVuY3Rpb24gKG06IHN0cmluZywgcjogc3RyaW5nLCBnOiBzdHJpbmcsIGI6IHN0cmluZykge1xyXG4gICAgICAgICAgICByZXR1cm4gciArIHIgKyBnICsgZyArIGIgKyBiO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgcmVzdWx0ID0gL14jPyhbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KSQvaS5leGVjKGhleCk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdCA/IHtcclxuICAgICAgICAgICAgUmVkOiBwYXJzZUludChyZXN1bHRbMV0sIDE2KSxcclxuICAgICAgICAgICAgR3JlZW46IHBhcnNlSW50KHJlc3VsdFsyXSwgMTYpLFxyXG4gICAgICAgICAgICBCbHVlOiBwYXJzZUludChyZXN1bHRbM10sIDE2KVxyXG4gICAgICAgIH0gOiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHNldElubmVyVGV4dERlZmF1bHRzKGlubmVyVGV4dD86IElubmVyVGV4dCk6IElubmVyVGV4dCB7XHJcbiAgICAgICAgaWYgKCFpbm5lclRleHQpXHJcbiAgICAgICAgICAgIGlubmVyVGV4dCA9IHtcclxuICAgICAgICAgICAgICAgIHRleHQ6ICcnXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgaWYgKCFpbm5lclRleHQudGV4dClcclxuICAgICAgICAgICAgaW5uZXJUZXh0LnRleHQgPSAnJztcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5mb250U2l6ZSlcclxuICAgICAgICAgICAgaW5uZXJUZXh0LmZvbnRTaXplID0gMTg7XHJcbiAgICAgICAgaWYgKCFpbm5lclRleHQubGluZUhlaWdodClcclxuICAgICAgICAgICAgaW5uZXJUZXh0LmxpbmVIZWlnaHQgPSBpbm5lclRleHQuZm9udFNpemU7XHJcbiAgICAgICAgaWYgKCFpbm5lclRleHQuZm9udEZhbWlseSlcclxuICAgICAgICAgICAgaW5uZXJUZXh0LmZvbnRGYW1pbHkgPSAnQXJpYWwsVXRrYWwsc2Fucy1zZXJpZic7XHJcbiAgICAgICAgaWYgKCFpbm5lclRleHQuZm9udFdlaWdodClcclxuICAgICAgICAgICAgaW5uZXJUZXh0LmZvbnRXZWlnaHQgPSAnbm9ybWFsJztcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5sZXR0ZXJTcGFjaW5nKVxyXG4gICAgICAgICAgICBpbm5lclRleHQubGV0dGVyU3BhY2luZyA9ICcwJztcclxuICAgICAgICByZXR1cm4gaW5uZXJUZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyhlbGVtOiBhbnksIGNzc1Byb3A6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKCFlbGVtKSByZXR1cm4gbnVsbDtcclxuICAgICAgICBsZXQgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtKSBhcyBhbnk7XHJcbiAgICAgICAgbGV0IHZhbCA9IGNzc1tjc3NQcm9wXTtcclxuICAgICAgICBpZiAodmFsICYmIHZhbCAhPSAncmdiYSgwLCAwLCAwLCAwKScpIHJldHVybiB2YWw7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29tcHV0ZWRTdHlsZUJ5UGFyZW50UmVjKGVsZW0ucGFyZW50RWxlbWVudCwgY3NzUHJvcCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gb2RkIHN0cm9rZVdpZHRoIGlzIG5vdCBzdXBwb3J0ZWRcclxuICAgIGZpeFN0cm9rZVdpZHRoKHN3OiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIGlmIChzdyAlIDIgPT0gMSlcclxuICAgICAgICAgICAgY29uc29sZS53YXJuKCdhbGwtZ2F1Z2U6IHN0cm9rZS13aWR0aCBcIicgKyBzdyArICdcIiBpcyBub3Qgc3VwcG9ydGVkIChvZGQpLCBjaGFuZ2VkIHRvIFwiJyArICgrK3N3KSkgKyAnXCInO1xyXG4gICAgICAgIHJldHVybiBzdztcclxuICAgIH1cclxuXHJcbiAgICAvLyBvZGQgcmFkaXVzIGlzIG5vdCBzdXBwb3J0ZWRcclxuICAgIGZpeFJhZGl1cyhyOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIGlmIChyICUgMiA9PSAxKVxyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ2FsbC1nYXVnZTogcmFkaXVzIFwiJyArIHIgKyAnXCIgaXMgbm90IHN1cHBvcnRlZCAob2RkKSwgY2hhbmdlZCB0byBcIicgKyAoKytyKSkgKyAnXCInO1xyXG4gICAgICAgIHJldHVybiByO1xyXG4gICAgfVxyXG5cclxuICAgIGdldERlZmF1bHRDb2xvcnMoKTogQ29sb3JQYWxldHRlIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBhY3RpdmU6ICcjNENDRUFEJyxcclxuICAgICAgICAgICAgZGVmYXVsdDogJyM1MDUwNTAnLFxyXG4gICAgICAgICAgICBpbmFjdGl2ZTogJyNlZGVkZWQnXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBnZXROZWVkbGVJbm5lclN0eWxlKHJhZGl1czogbnVtYmVyKTogYW55IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAnaGVpZ2h0JzogKHJhZGl1cyArIDIwKSArICdweCcsXHJcbiAgICAgICAgICAgICd3aWR0aCc6IChyYWRpdXMgLyBDb21tb24ubmVlZGxlV2lkdGhIZWlnaHRSYXRpbykgKyAncHgnXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBnZXROZWVkbGVTdHlsZShyYWRpdXM6IG51bWJlciwgYXJjTmVlZGxlUGVyY2VudGFnZTogbnVtYmVyLCBzY2FsZTogbnVtYmVyLCBpbmRlbnQ6IG51bWJlciA9IDUwKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBzY2FsZSAhPT0gJ251bWJlcicpXHJcbiAgICAgICAgICAgIHNjYWxlID0gMS4xMjU7XHJcbiAgICAgICAgbGV0IGRlZyA9IChhcmNOZWVkbGVQZXJjZW50YWdlIC0gaW5kZW50KSAqIDMuNjtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAnbGVmdCc6ICdjYWxjKDUwJSAtICcgKyAoKHJhZGl1cyAvIENvbW1vbi5uZWVkbGVXaWR0aEhlaWdodFJhdGlvKSkgLyAyICsgJ3B4JyxcclxuICAgICAgICAgICAgJ3RyYW5zZm9ybSc6ICdyb3RhdGUoJyArIGRlZyArICdkZWcpIHNjYWxlKCcgKyBzY2FsZSArICcpJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgaXNJblJhbmdlKG1pbk1heFZhbDogTWluTWF4VmFsLCBzaWRlczogU2lkZVN0YXRlKSB7XHJcbiAgICAgICAgc3dpdGNoIChzaWRlcykge1xyXG4gICAgICAgICAgICBjYXNlIFNpZGVTdGF0ZS5Cb3RoOiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKG1pbk1heFZhbC5taW4gPCBtaW5NYXhWYWwudmFsdWUgJiYgbWluTWF4VmFsLm1heCA+IG1pbk1heFZhbC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBTaWRlU3RhdGUuTm9uZToge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChtaW5NYXhWYWwubWluIDw9IG1pbk1heFZhbC52YWx1ZSAmJiBtaW5NYXhWYWwubWF4ID49IG1pbk1heFZhbC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBTaWRlU3RhdGUuTGVmdDoge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChtaW5NYXhWYWwubWluIDwgbWluTWF4VmFsLnZhbHVlICYmIG1pbk1heFZhbC5tYXggPj0gbWluTWF4VmFsLnZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFNpZGVTdGF0ZS5SaWdodDoge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChtaW5NYXhWYWwubWluIDw9IG1pbk1heFZhbC52YWx1ZSAmJiBtaW5NYXhWYWwubWF4ID4gbWluTWF4VmFsLnZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBub3JtYWxpemVCeVBlcmNlbnRhZ2UodmFsdWU6IG51bWJlciwgcGVyY2VudGFnZTogbnVtYmVyLCBtaWQ/OiBudW1iZXIsIG1heD86IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBtaWQgPT09ICd1bmRlZmluZWQnKVxyXG4gICAgICAgICAgICBtaWQgPSA1MDtcclxuICAgICAgICBpZiAodHlwZW9mIG1heCA9PT0gJ3VuZGVmaW5lZCcpXHJcbiAgICAgICAgICAgIG1heCA9IG1pZCAqIDI7XHJcbiAgICAgICAgbGV0IHJlbCA9IG51bGw7XHJcblxyXG4gICAgICAgIGlmICh2YWx1ZSA+IG1pZCkge1xyXG4gICAgICAgICAgICBwZXJjZW50YWdlIC89IDI7XHJcbiAgICAgICAgICAgIHJlbCA9IE1hdGguYWJzKG1pZCAtIHZhbHVlKTtcclxuICAgICAgICAgICAgcmVsID0gcmVsIC8gbWlkO1xyXG4gICAgICAgICAgICBwZXJjZW50YWdlICo9IHJlbDtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlICogKDEgLSBwZXJjZW50YWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PSAwLjApXHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IDAuMDAxO1xyXG4gICAgICAgICAgICByZWwgPSBNYXRoLmFicyh2YWx1ZSAtIG1pZCk7XHJcbiAgICAgICAgICAgIHJlbCA9IHJlbCAvIG1pZDtcclxuICAgICAgICAgICAgcGVyY2VudGFnZSAqPSByZWw7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSArIChtaWQgKiAocGVyY2VudGFnZSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXRSZW1haW5kZXIocmFuZ2U6IEZyb21UbywgaG91cjogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IGN1cnJlbnQgPSAxMDAgLyAxMiAqIGhvdXI7XHJcbiAgICAgICAgaWYgKGN1cnJlbnQgPj0gcmFuZ2UuZnJvbSAmJiBjdXJyZW50IDw9IHJhbmdlLnRvKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50IC0gcmFuZ2UuZnJvbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcblxyXG4gICAgaXNIb3VySW5SYW5nZShyYW5nZTogRnJvbVRvLCBob3VyOiBudW1iZXIpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgY3VycmVudCA9IDEwMCAvIDEyICogaG91cjtcclxuICAgICAgICBpZiAoY3VycmVudCA+PSByYW5nZS5mcm9tICYmIGN1cnJlbnQgPD0gcmFuZ2UudG8pIHJldHVybiB0cnVlO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRQZXJjZW50YWdlQnlUaW1lKGRhdGVUaW1lOiBEYXRlKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgc2Vjb25kc0luQURheSA9IDg2NDAwOyAvLzI0ICogNjAgKiA2MDtcclxuICAgICAgICBsZXQgaG91cnMgPSBkYXRlVGltZS5nZXRIb3VycygpICogMzYwMDsgLy82MCAqIDYwO1xyXG4gICAgICAgIGxldCBtaW51dGVzID0gZGF0ZVRpbWUuZ2V0TWludXRlcygpICogNjA7XHJcbiAgICAgICAgbGV0IHNlY29uZHMgPSBkYXRlVGltZS5nZXRTZWNvbmRzKCk7XHJcbiAgICAgICAgbGV0IHRvdGFsU2Vjb25kcyA9IGhvdXJzICsgbWludXRlcyArIHNlY29uZHM7XHJcbiAgICAgICAgbGV0IHBlcmNlbnRTZWNvbmRzID0gMTAwICogdG90YWxTZWNvbmRzIC8gc2Vjb25kc0luQURheTtcclxuICAgICAgICByZXR1cm4gcGVyY2VudFNlY29uZHM7XHJcbiAgICAgICAgLy8gbGV0IG1heCA9IDg2NDAwMDAwOyAvLyAxMDAwICogNjAgKiA2MCAqIDI0IGlzIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIG9uIGEgMjQgaG91cnMgZGF5LlxyXG4gICAgICAgIC8vIGxldCBob3VycyA9IGRhdGVUaW1lLmdldEhvdXJzKCk7XHJcbiAgICAgICAgLy8gbGV0IG1pbnV0ZXMgPSBkYXRlVGltZS5nZXRNaW51dGVzKCk7XHJcbiAgICAgICAgLy8gbGV0IHNlY29uZHMgPSBkYXRlVGltZS5nZXRTZWNvbmRzKCk7XHJcbiAgICAgICAgLy8gbGV0IHRvdGFsID0gKGhvdXJzICogMTAwMCAqIDYwICogNjApICsgKG1pbnV0ZXMgKiAxMDAwICogNjApICsgKHNlY29uZHMgKiAxMDAwKTtcclxuICAgICAgICAvLyBsZXQgcGVyY2VudGFnZSA9IHRvdGFsIC8gbWF4O1xyXG4gICAgICAgIC8vIHJldHVybiBwZXJjZW50YWdlICogMTAwO1xyXG4gICAgfVxyXG5cclxuICAgIGdldE1pbnV0ZXNGcm9tSG91cihob3VyOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgYXJyID0gaG91ci5zcGxpdCgnOicpO1xyXG4gICAgICAgIHJldHVybiBwYXJzZUludChhcnJbMF0udHJpbSgpKSAqIDYwICsgcGFyc2VJbnQoYXJyWzFdLnRyaW0oKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TWludXRlc0Zyb21TdGFydChob3VyOiBzdHJpbmcsIHN0YXJ0ID0gMCkge1xyXG4gICAgICAgIGxldCBhcnIgPSBob3VyLnNwbGl0KCc6Jyk7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KChwYXJzZUludChhcnJbMF0udHJpbSgpKSAqIDYwICsgKHBhcnNlSW50KGFyclsxXS50cmltKCkpKSkgLSBzdGFydCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SG91cnNBbmRNaW51dGVzTFQoZGF0ZTogRGF0ZSk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xyXG4gICAgICAgIGhvdXJzID0gKGhvdXJzICsgMjQgLSAyKSAlIDI0O1xyXG4gICAgICAgIGxldCBtaWQgPSAnYW0nO1xyXG4gICAgICAgIGlmIChob3VycyA9PSAwKSB7IC8vQXQgMDAgaG91cnMgd2UgbmVlZCB0byBzaG93IDEyIGFtXHJcbiAgICAgICAgICAgIGhvdXJzID0gMTI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGhvdXJzID4gMTIpIHtcclxuICAgICAgICAgICAgaG91cnMgPSBob3VycyAlIDEyO1xyXG4gICAgICAgICAgICBtaWQgPSAncG0nO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaG91cnMgKyAnOicgKyBkYXRlLmdldE1pbnV0ZXMoKSArICcgJyArIG1pZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTZWNvbmRzRnJvbVRpbWUodGltZXI6IFRpbWUpOiBudW1iZXIge1xyXG4gICAgICAgIGxldCBob3VycyA9IDA7XHJcbiAgICAgICAgaG91cnMgKz0gdGltZXIuaG91cnMgKiAzNjAwO1xyXG4gICAgICAgIGhvdXJzICs9IHRpbWVyLm1pbnV0ZXMgKiA2MDtcclxuICAgICAgICBob3VycyArPSB0aW1lci5zZWNvbmRzO1xyXG4gICAgICAgIHJldHVybiBob3VycztcclxuICAgIH1cclxuXHJcbiAgICBzZXRUaW1lVG9aZXJvKHRpbWVyOiBUaW1lKTogdm9pZCB7XHJcbiAgICAgICAgdGltZXIuaG91cnMgPSAwO1xyXG4gICAgICAgIHRpbWVyLm1pbnV0ZXMgPSAwO1xyXG4gICAgICAgIHRpbWVyLnNlY29uZHMgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGRlY3JlYXNlVGltZSh0aW1lcjogVGltZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmICh0aW1lci5zZWNvbmRzID4gMCkge1xyXG4gICAgICAgICAgICBpZiAoLS10aW1lci5zZWNvbmRzIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGltZXIuc2Vjb25kcyA9IDU5O1xyXG4gICAgICAgICAgICAgICAgaWYgKC0tdGltZXIubWludXRlcyA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aW1lci5taW51dGVzID0gNTk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKC0tdGltZXIuaG91cnMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0VGltZVRvWmVybyh0aW1lcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aW1lci5taW51dGVzID4gMCkge1xyXG4gICAgICAgICAgICB0aW1lci5zZWNvbmRzID0gNTk7XHJcbiAgICAgICAgICAgIGlmICgtLXRpbWVyLm1pbnV0ZXMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lci5taW51dGVzID0gNTk7XHJcbiAgICAgICAgICAgICAgICBpZiAoLS10aW1lci5ob3VycyA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFRpbWVUb1plcm8odGltZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRpbWVyLmhvdXJzID4gMCkge1xyXG4gICAgICAgICAgICB0aW1lci5taW51dGVzID0gNTk7XHJcbiAgICAgICAgICAgIGlmICgtLXRpbWVyLmhvdXJzIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRUaW1lVG9aZXJvKHRpbWVyKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuaXNUaW1lWmVybyh0aW1lcikpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRUaW1lVG9aZXJvKHRpbWVyKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBpc1RpbWVaZXJvKHRpbWVyOiBUaW1lKTogYm9vbGVhbiB7XHJcbiAgICAgICAgaWYgKHRpbWVyLmhvdXJzIDw9IDAgJiYgdGltZXIubWludXRlcyA8PSAwICYmIHRpbWVyLnNlY29uZHMgPD0gMCkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHBhZFdpdGhaaXJvKHRleHQ6IHN0cmluZykge1xyXG4gICAgICAgIGlmIChTdHJpbmcodGV4dCkubGVuZ3RoIDwgMilcclxuICAgICAgICAgICAgdGV4dCA9ICcwJyArIHRleHQ7XHJcbiAgICAgICAgcmV0dXJuIHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U2lkZVN0YXRlQnlTdHJpbmcoc3RhdGU6IHN0cmluZyk6IFNpZGVTdGF0ZSB7XHJcbiAgICAgICAgaWYgKCFzdGF0ZSkgcmV0dXJuIFNpZGVTdGF0ZS5Ob25lO1xyXG4gICAgICAgIHN3aXRjaCAoc3RhdGUudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICBjYXNlICdsZWZ0JzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBTaWRlU3RhdGUuTGVmdDtcclxuICAgICAgICAgICAgY2FzZSAncmlnaHQnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5SaWdodDtcclxuICAgICAgICAgICAgY2FzZSAnYm90aCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU2lkZVN0YXRlLkJvdGg7XHJcbiAgICAgICAgICAgIGNhc2UgJ25vbmUnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5Ob25lO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5Ob25lXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiZXhwb3J0IGludGVyZmFjZSBDb2xvclBhbGV0dGUge1xyXG4gICAgZGVmYXVsdDogc3RyaW5nO1xyXG4gICAgYWN0aXZlOiBzdHJpbmc7XHJcbiAgICBpbmFjdGl2ZTogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENpcmNsZU9wdGlvbnMge1xyXG4gICAgY29sb3JzPzogQ29sb3JQYWxldHRlO1xyXG4gICAgZnJvbURlZ3JlZT86IG51bWJlcjtcclxuICAgIHRvRGVncmVlPzogbnVtYmVyO1xyXG4gICAgcmFkaXVzPzogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICByb3RhdGlvblNwZWVkPzogbnVtYmVyO1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmc7XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgaW5kZW50PzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNwaW5uZXJPcHRpb25zIHtcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIGFjdGl2ZURlZ3JlZT86IG51bWJlcjtcclxuICAgIHJhZGl1cz86IG51bWJlcjtcclxuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xyXG4gICAgcm90YXRpb25TcGVlZD86IG51bWJlcjtcclxuICAgIHRpdGxlPzogSW5uZXJUZXh0O1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICBoaWdobGlnaHQ/OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElubmVyVGV4dCB7XHJcbiAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgICBmb250U2l6ZT86IG51bWJlcjtcclxuICAgIGZvbnRGYW1pbHk/OiBzdHJpbmc7XHJcbiAgICBsaW5lSGVpZ2h0PzogbnVtYmVyO1xyXG4gICAgZm9udFdlaWdodD86IHN0cmluZztcclxuICAgIGxldHRlclNwYWNpbmc/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSnNvblRvSHRtbEVsZW1lbnQge1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgdGV4dD86IHN0cmluZztcclxuICAgIGF0dHJzPzogYW55O1xyXG4gICAgY2hpbGRyZW4/OiBBcnJheTxKc29uVG9IdG1sRWxlbWVudD47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUkdCQSB7XHJcbiAgICBSZWQ6IG51bWJlcjtcclxuICAgIEdyZWVuOiBudW1iZXI7XHJcbiAgICBCbHVlOiBudW1iZXI7XHJcbiAgICBBbHBoYT86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNaW5NYXhWYWwge1xyXG4gICAgbWluOiBudW1iZXI7XHJcbiAgICBtYXg6IG51bWJlcjtcclxuICAgIHZhbHVlPzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE5lZWRsZU9wdGlvbnMge1xyXG4gICAgY29sb3I6IHN0cmluZztcclxuICAgIG1pbk1heFZhbDogTWluTWF4VmFsO1xyXG4gICAgcmFkaXVzOiBudW1iZXI7XHJcbiAgICBzY2FsZTogbnVtYmVyO1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICBkaXNhYmxlZD86IGJvb2xlYW47XHJcbiAgICBpbmRlbnQ/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHVuZU9wdGlvbnMge1xyXG4gICAgbmVlZGxlT3B0aW9ucz86IE5lZWRsZU9wdGlvbnM7XHJcbiAgICBpY29uT3B0aW9ucz86IEljb25PcHRpb25zO1xyXG4gICAgY29sb3JzPzogQ29sb3JQYWxldHRlO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICAvLyB0aXRsZT86IElubmVyVGV4dDtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgcmFkaXVzOiBudW1iZXI7XHJcbiAgICBzaG93RWRnZXM6IGJvb2xlYW47XHJcbiAgICBob2xsb3dFZGdlcz86IFNpZGVTdGF0ZTtcclxuICAgIHNob3dJY29uOiBib29sZWFuO1xyXG4gICAgaGlkZUJvdHRvbTogYm9vbGVhbjtcclxuICAgIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcclxuICAgIGhvbGxvd0VkZ2VzQmdDb2xvcj86IHN0cmluZztcclxufVxyXG5cclxuLy8gZXhwb3J0IGludGVyZmFjZSBNaW5NYXhFZGdlIHtcclxuLy8gICAgIG1pbk1heFZhbDogTWluTWF4VmFsO1xyXG4vLyAgICAgbGVmdEVkZ2VzPzogU2lubmdsZVNpZGVTdGF0ZTtcclxuLy8gICAgIHJpZ2h0RWRnZXM/OiBTaW5uZ2xlU2lkZVN0YXRlO1xyXG4vLyAgICAgYmdDb2xvcjogc3RyaW5nO1xyXG4vLyB9XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE11bHRpdHVuZU9wdGlvbnMge1xyXG4gICAgbmVlZGxlT3B0aW9uczogTmVlZGxlT3B0aW9ucztcclxuICAgIHNlZ21lbnRzOiBBcnJheTxNaW5NYXhWYWw+O1xyXG4gICAgaWNvbk9wdGlvbnM/OiBJY29uT3B0aW9ucztcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHNob3dFZGdlczogYm9vbGVhbjtcclxuICAgIHNob3dJY29uOiBib29sZWFuO1xyXG4gICAgaGlkZUJvdHRvbTogYm9vbGVhbjtcclxuICAgIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcclxuICAgIGhvbGxvd0VkZ2VzQmdDb2xvcj86IHN0cmluZztcclxuICAgIGhvbGxvd0VkZ2VzPzogU2lkZVN0YXRlO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJhbmdlT3B0aW9ucyB7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICBtaW5NYXhWYWw6IE1pbk1heFZhbDtcclxuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHNob3dFZGdlczogYm9vbGVhbjtcclxuICAgIGhvbGxvd0VkZ2VzPzogU2lkZVN0YXRlO1xyXG4gICAgaGlkZUJvdHRvbTogYm9vbGVhbjtcclxuICAgIHRpdGxlPzogSW5uZXJUZXh0O1xyXG4gICAgaGlnaGxpZ2h0PzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGVudW0gU2lkZVN0YXRlIHtcclxuICAgIE5vbmUsXHJcbiAgICBMZWZ0LFxyXG4gICAgUmlnaHQsXHJcbiAgICBCb3RoLFxyXG59XHJcblxyXG4vLyBleHBvcnQgZW51bSBTaW5uZ2xlU2lkZVN0YXRlIHtcclxuLy8gICAgIE5vbmUsXHJcbi8vICAgICBIb2xsb3csXHJcbi8vICAgICBGdWxsLFxyXG4vLyB9XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEVkZ2VzT3B0aW9ucyB7XHJcbiAgICBjb2xvcjogc3RyaW5nO1xyXG4gICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nO1xyXG4gICAgbWluTWF4VmFsOiBNaW5NYXhWYWw7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHN0cm9rZVdpZHRoOiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGhvbGxvd0VkZ2VzPzogU2lkZVN0YXRlO1xyXG4gICAgaW5kZW50PzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEljb25PcHRpb25zIHtcclxuICAgIGRlZ3JlZTogbnVtYmVyO1xyXG4gICAgcmFkaXVzOiBudW1iZXI7XHJcblx0cmFkaXVzT2Zmc2V0PzogbnVtYmVyO1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICBzcmM6IHN0cmluZztcclxuICAgIGRpbWVuc2lvbnM6IHtcclxuICAgICAgICB3aWR0aDogbnVtYmVyO1xyXG4gICAgICAgIGhlaWdodDogbnVtYmVyO1xyXG4gICAgfSxcclxuICAgIHRvcD86IG51bWJlcjtcclxuICAgIGxlZnQ/OiBudW1iZXI7XHJcbiAgICBvcGFjaXR5OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTnVtYmVyRGF0YSB7XHJcbiAgICAgICAgbnVtYmVyOiBzdHJpbmc7XHJcbiAgICAgICAgaXNBY3RpdmU6IGJvb2xlYW47XHJcbiAgICAgICAgcmVtYWluZGVyOiBudW1iZXI7XHJcbiAgICB9XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEFtUG1PcHRpb25zIHtcclxuICAgIGZyb21UbzogRnJvbVRvU3RyaW5nO1xyXG4gICAgbmVlZGxlT3B0aW9ucz86IE5lZWRsZU9wdGlvbnM7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIG1pbk1heFZhbEFtPzogTWluTWF4VmFsO1xyXG4gICAgbWluTWF4VmFsUG0/OiBNaW5NYXhWYWw7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xyXG4gICAgaG9sbG93RWRnZXNBbT86IFNpZGVTdGF0ZTtcclxuICAgIGhvbGxvd0VkZ2VzUG0/OiBTaWRlU3RhdGU7XHJcbiAgICBzaG93RWRnZXNBbT86IGJvb2xlYW47XHJcbiAgICBzaG93RWRnZXNQbT86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRnJvbVRvIHtcclxuICAgICAgICBmcm9tOiBudW1iZXI7XHJcbiAgICAgICAgdG86IG51bWJlcjtcclxuICAgIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRnJvbVRvU3RyaW5nIHtcclxuICAgIGZyb206IHN0cmluZztcclxuICAgIHRvOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGltZSB7XHJcbiAgICBob3VyczogbnVtYmVyLFxyXG4gICAgbWludXRlczogbnVtYmVyLFxyXG4gICAgc2Vjb25kczogbnVtYmVyLFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRpbWVyT3B0aW9ucyB7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICBzdHJva2VXaWR0aD86IG51bWJlcjtcclxuICAgIHRpbWU6IFRpbWU7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc2hvd0VkZ2VzOiBib29sZWFuO1xyXG4gICAgdGl0bGU/OiBJbm5lclRleHQ7XHJcbiAgICBwZXJjZW50YWdlPzogbnVtYmVyO1xyXG59IiwiaW1wb3J0IHsgU3Bpbm5lck9wdGlvbnMsIEpzb25Ub0h0bWxFbGVtZW50LCBSR0JBLCBJbm5lclRleHQsIENpcmNsZU9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBDb21tb24gfSBmcm9tICcuL2NvbW1vbic7XHJcbmltcG9ydCB7IENpcmNsZSB9IGZyb20gJy4vY2lyY2xlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTcGlubmVyIHtcclxuICAgIHByaXZhdGUgZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBvcHRpb25zOiBTcGlubmVyT3B0aW9ucztcclxuICAgIHByaXZhdGUgY2lyY2xlT3B0aW9uczogQ2lyY2xlT3B0aW9ucztcclxuICAgIHByaXZhdGUgY29tbW9uOiBDb21tb247XHJcbiAgICBwcml2YXRlIGNpcmNsZTogQ2lyY2xlO1xyXG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogYW55LCBvcHRpb25zPzogU3Bpbm5lck9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuY29tbW9uID0gbmV3IENvbW1vbigpO1xyXG4gICAgICAgIC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcclxuICAgICAgICBsZXQgZGVmYXVsdE9wdGlvbnMgPSB0aGlzLmdldERlZmF1bHRPcHRpb25zKCk7XHJcblxyXG4gICAgICAgIC8vIG92ZXJyaWRlIGRlZmF1bHRzIHdpdGggdXNlciBvcHRpb25zXHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoID0gdGhpcy5jb21tb24uZml4U3Ryb2tlV2lkdGgodGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoKTtcclxuICAgICAgICB0aGlzLm9wdGlvbnMucmFkaXVzID0gdGhpcy5jb21tb24uZml4UmFkaXVzKHRoaXMub3B0aW9ucy5yYWRpdXMpO1xyXG5cclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXREZWZhdWx0T3B0aW9ucygpOiBTcGlubmVyT3B0aW9ucyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY29sb3JzOiB0aGlzLmNvbW1vbi5nZXREZWZhdWx0Q29sb3JzKCksXHJcbiAgICAgICAgICAgIGFjdGl2ZURlZ3JlZTogMTAsXHJcbiAgICAgICAgICAgIHJhZGl1czogODgsXHJcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiA2LFxyXG4gICAgICAgICAgICByb3RhdGlvblNwZWVkOiA1MDAwLFxyXG4gICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogNTAwLFxyXG4gICAgICAgICAgICB0aXRsZToge1xyXG4gICAgICAgICAgICAgICAgdGV4dDogJycsXHJcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaGlnaGxpZ2h0OiBmYWxzZVxyXG4gICAgICAgIH0gYXMgU3Bpbm5lck9wdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZShvcHRpb25zOiBTcGlubmVyT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy50aXRsZSA9IHRoaXMuY29tbW9uLnNldElubmVyVGV4dERlZmF1bHRzKHRoaXMub3B0aW9ucy50aXRsZSk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlT3B0aW9ucygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNldFRpdGxlKHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5zZXREaXYodGhpcy5vcHRpb25zKTtcclxuICAgICAgICB0aGlzLnNldENpcmNsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRpdGxlKG9wdGlvbnM6IFNwaW5uZXJPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IGg0ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2g0Jyk7XHJcbiAgICAgICAgaDQuc3R5bGUuY29sb3IgPSBvcHRpb25zLmhpZ2hsaWdodCA/IG9wdGlvbnMuY29sb3JzLmFjdGl2ZSA6IG9wdGlvbnMuY29sb3JzLmRlZmF1bHQ7XHJcbiAgICAgICAgLy8gaDQuc3R5bGUudG9wID0gKChvcHRpb25zLnJhZGl1cykgLSAob3B0aW9ucy50aXRsZS5mb250U2l6ZSAvIDIpKSArICdweCc7XHJcbiAgICAgICAgaDQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICAgICAgaDQuc3R5bGUuZm9udFNpemUgPSBvcHRpb25zLnRpdGxlLmZvbnRTaXplICsgJ21zJztcclxuICAgICAgICBoNC5zdHlsZS5mb250RmFtaWx5ID0gb3B0aW9ucy50aXRsZS5mb250RmFtaWx5O1xyXG4gICAgICAgIGg0LnN0eWxlLmZvbnRXZWlnaHQgPSBvcHRpb25zLnRpdGxlLmZvbnRXZWlnaHQ7XHJcbiAgICAgICAgaDQuc3R5bGUubGV0dGVyU3BhY2luZyA9IG9wdGlvbnMudGl0bGUubGV0dGVyU3BhY2luZztcclxuICAgICAgICBoNC5zdHlsZS5saW5lSGVpZ2h0ID0gb3B0aW9ucy50aXRsZS5saW5lSGVpZ2h0ICsgJ3B4JztcclxuICAgICAgICBoNC50ZXh0Q29udGVudCA9IG9wdGlvbnMudGl0bGUudGV4dDtcclxuICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAvLyAgICAgbGV0IGggPSBwYXJzZUludChnZXRDb21wdXRlZFN0eWxlKGg0KS5oZWlnaHQucmVwbGFjZSgncHgnLCAnJykpO1xyXG4gICAgICAgIC8vICAgICBpZiAoIWlzTmFOKGgpKVxyXG4gICAgICAgIC8vICAgICAgICAgaDQuc3R5bGUudG9wID0gKChvcHRpb25zLnJhZGl1cykgLSAoaCAvIDIpKSArICdweCc7XHJcbiAgICAgICAgLy8gfSwgMTApO1xyXG4gICAgfVxyXG5cclxuICAgIHNldERpdihvcHRpb25zOiBTcGlubmVyT3B0aW9ucykge1xyXG4gICAgICAgIGxldCBkaXYgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignZGl2W2RhdGEtc3Bpbm5lcl0nKTtcclxuICAgICAgICBsZXQgZGltID0gb3B0aW9ucy5yYWRpdXMgKiAyICsgJ3B4JztcclxuICAgICAgICBkaXYuc3R5bGUud2lkdGggPSBkaW07XHJcbiAgICAgICAgZGl2LnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICBkaXYuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMub3B0aW9ucy50aXRsZSA9IHRoaXMuY29tbW9uLnNldElubmVyVGV4dERlZmF1bHRzKHRoaXMub3B0aW9ucy50aXRsZSk7XHJcbiAgICAgICAgbGV0IGg0ID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnaDQnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMTA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDEwMCU7IHRyYW5zaXRpb24tcHJvcGVydHk6IGNvbG9yOyBtYXJnaW46IDA7dG9wOiA1MCU7bGVmdDogMDt0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBsZXQgaDRFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbChoNCkgYXMgYW55O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBvYmogPSB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdkaXYnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiByZWxhdGl2ZTtgLFxyXG4gICAgICAgICAgICAgICAgJ2RhdGEtc3Bpbm5lcic6ICcnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGFzIEpzb25Ub0h0bWxFbGVtZW50O1xyXG4gICAgICAgIGxldCBpbm5lckVsZW0gPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuc2V0Q2lyY2xlKCk7XHJcblxyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZChoNEVsZW0pO1xyXG5cclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQodGhpcy5jaXJjbGUuZ2V0RWxlbWVudCgpKTtcclxuXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGlubmVyRWxlbSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENpcmNsZSgpIHtcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCB0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5mcm9tRGVncmVlID0gLXRoaXMub3B0aW9ucy5hY3RpdmVEZWdyZWUgLyAyO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy50b0RlZ3JlZSA9IHRoaXMub3B0aW9ucy5hY3RpdmVEZWdyZWUgLyAyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5lbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jaXJjbGUpIHtcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUudXBkYXRlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUgPSBuZXcgQ2lyY2xlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICB9XHJcbn0iXX0="}