{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/circle.ts","src/common.ts","src/interfaces.ts","src/spinner.ts"],"names":[],"mappings":"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","file":"spinner.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Circle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: CircleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.injectCss();\r\n\r\n        this.init();\r\n    }\r\n\r\n    injectCss(): void {\r\n        let className = '_all-gauge-js-circle-style';\r\n        if (document.querySelector('.' + className)) return;\r\n\r\n        let style = `@keyframes allGaugeRotatingCircle {\r\n            from {\r\n                transform: rotate(0deg);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }`;\r\n\r\n        let sheet = document.createElement('style');\r\n        sheet.innerHTML = style;\r\n        sheet.className = className;\r\n        document.body.appendChild(sheet);\r\n    }\r\n\r\n    public update(options: CircleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setSvg(this.options);\r\n        this.setElements(this.options);\r\n    }\r\n\r\n    setSvg(options: CircleOptions): void {\r\n        let startAngle = (options.fromDegree - 50) * 3.6, endAngle = (options.toDegree - 50) * 3.6;\r\n        let d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n\r\n        let svg = this.element.querySelector('svg');\r\n        let dim = options.radius * 2;\r\n        svg.style.transitionDuration = options.animationDuration;\r\n        svg.style.width = dim + 'px';\r\n        svg.style.height = dim + 'px';\r\n        svg.style.animation = `allGaugeRotatingCircle ${options.rotationSpeed}ms linear infinite`;\r\n        svg.setAttributeNS(null, 'width', dim + 'px');\r\n        svg.setAttributeNS(null, 'height', dim + 'px');\r\n        let path = svg.querySelector('[data-arc]');\r\n        path.setAttributeNS(null, 'stroke', options.colors.active);\r\n        path.setAttributeNS(null, 'stroke-width', options.strokeWidth);\r\n        path.setAttributeNS(null, 'd', d);\r\n        path.style.strokeWidth = options.strokeWidth + 'px';\r\n        path.style.transitionDuration = options.animationDuration;\r\n\r\n        let concealer = svg.querySelector('[data-concealer]');\r\n        if (options.hideBottom) {\r\n            startAngle = (33.334) * 3.6, endAngle = (66.667) * 3.6;\r\n            d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n            concealer.setAttributeNS(null, 'stroke-width', options.strokeWidth + 2);\r\n            concealer.setAttributeNS(null, 'd', d);\r\n            concealer.style.strokeWidth = (options.strokeWidth + 2) + 'px';\r\n            concealer.style.display = '';\r\n            let bgColor = options.backgroundColor;\r\n            if (!bgColor)\r\n                bgColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!bgColor)\r\n                bgColor = '#ffffff';\r\n            concealer.setAttributeNS(null, 'stroke', bgColor);\r\n        }\r\n        else\r\n            concealer.style.display = 'none';\r\n    }\r\n\r\n    setElements(options: CircleOptions): void {\r\n        // let circle = this.element.querySelector('div[data-circle]');\r\n        let circle = this.element.children[0];\r\n        let dim = this.options.radius * 2 + 'px';\r\n        circle.style.width = dim;\r\n        circle.style.height = dim;\r\n        circle.style.transitionDuration = options.animationDuration;\r\n\r\n        let c1 = circle.querySelector('[data-c1]');\r\n        c1.style.width = dim;\r\n        c1.style.height = dim;\r\n        c1.style.backgroundColor = this.options.colors.inactive;\r\n        c1.style.transitionDuration = options.animationDuration;\r\n        \r\n        let c3 = circle.querySelector('[data-c3]');\r\n        dim = ((options.radius * 2) - (options.strokeWidth * 2)) + 'px';\r\n        c3.style.width = dim;\r\n        c3.style.height = dim;\r\n        c3.style.top = options.strokeWidth + 'px';\r\n        c3.style.left = options.strokeWidth + 'px';\r\n        c3.style.backgroundColor = options.backgroundColor;\r\n        c3.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative; margin: auto; display: block;`,\r\n                'data-circle': 'true'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c1': '',\r\n                                'style': `position: absolute;top: 0; left: 0; z-index: 1; border-radius: 50%;`\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'svg',\r\n                            attrs: {\r\n                                'style': `position: absolute; top: 0;left: 0; z-index: 2; border-radius: unset;`\r\n                            },\r\n                            children: [\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-arc': ''\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-concealer': ''\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c3': '',\r\n                                'style': `position: absolute; z-index: 3; border-radius: 50%;`\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): any {\r\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    describeArc(x: number, y: number, radius: number, startAngle: number, endAngle: number): any {\r\n        var start = this.polarToCartesian(x, y, radius, endAngle);\r\n        var end = this.polarToCartesian(x, y, radius, startAngle);\r\n        var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n        var d = [\r\n            \"M\", start.x, start.y,\r\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n        ].join(\" \");\r\n        return d;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","import { JsonToHtmlElement, RGBA, InnerText, ColorPalette, MinMaxVal, FromTo, Time, SideState } from './interfaces';\r\n\r\nexport class Common {\r\n    static NameSpaceElements: Array<string> = ['svg', 'path', 'g'];\r\n    static xmlns: string = \"http://www.w3.org/2000/svg\";\r\n    // static needleWidthHeightRatio: number = 9.107127839547825;\r\n    static needleWidthHeightRatio: number = 8.69322239126;\r\n    extend(src: any, dest: any, copy?: boolean): any {\r\n        for (let i in src) {\r\n            if (typeof src[i] === 'object') {\r\n                if (dest && dest[i])\r\n                    src[i] = this.extend(src[i], dest[i]);\r\n            }\r\n            else if (typeof dest === 'object' && typeof dest[i] !== 'undefined') {\r\n                src[i] = dest[i];\r\n            }\r\n        }\r\n        if (copy)\r\n            return JSON.parse(JSON.stringify(src));\r\n        return src;\r\n    }\r\n\r\n    jsonToHtml(obj: JsonToHtmlElement): any {\r\n        let elm = null, isNsElem = Common.NameSpaceElements.filter(x => x == obj.type).length > 0;\r\n        if (isNsElem)\r\n            elm = document.createElementNS(Common.xmlns, obj.type);\r\n        else\r\n            elm = document.createElement(obj.type);\r\n        for (var i in obj.attrs) {\r\n            if (isNsElem)\r\n                elm.setAttributeNS(null, i, obj.attrs[i]);\r\n            else\r\n                elm.setAttribute(i, obj.attrs[i]);\r\n        }\r\n        for (let i in obj.children) {\r\n            let newElem = null;\r\n            if (obj.children[i].type == '#text')\r\n                newElem = document.createTextNode(obj.children[i].text);\r\n            else\r\n                newElem = this.jsonToHtml(obj.children[i]);\r\n            if ((newElem && newElem.tagName && newElem.tagName.toLowerCase() !== 'undefined') || newElem.nodeType == 3)\r\n                elm.appendChild(newElem);\r\n        }\r\n        return elm;\r\n    }\r\n\r\n    isHex(str: string): boolean {\r\n        return str.indexOf('#') > -1;\r\n    }\r\n\r\n    isRgba(str: string) {\r\n        return str.split(',').length > 3;\r\n    }\r\n\r\n    toRgbObj(rgba: string): RGBA {\r\n        let arr = rgba.split(',').map((item) => {\r\n            return parseInt(item, 10);\r\n        });\r\n        return {\r\n            Red: arr[0],\r\n            Green: arr[1],\r\n            Blue: arr[2],\r\n            Alpha: arr[3]\r\n        };\r\n    }\r\n\r\n    RgbObjToString(rgba: RGBA): string {\r\n        let ans = '(' + rgba.Red + ',' + rgba.Green + ',' + rgba.Blue;\r\n        if (rgba.Alpha)\r\n            ans += ',' + rgba.Alpha\r\n        ans += ')';\r\n        return ans;\r\n    }\r\n\r\n    hexToRgb(hex: string): RGBA {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m: string, r: string, g: string, b: string) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            Red: parseInt(result[1], 16),\r\n            Green: parseInt(result[2], 16),\r\n            Blue: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    setInnerTextDefaults(innerText?: InnerText): InnerText {\r\n        if (!innerText)\r\n            innerText = {\r\n                text: ''\r\n            };\r\n        if (!innerText.text)\r\n            innerText.text = '';\r\n        if (!innerText.fontSize)\r\n            innerText.fontSize = 18;\r\n        if (!innerText.lineHeight)\r\n            innerText.lineHeight = innerText.fontSize;\r\n        if (!innerText.fontFamily)\r\n            innerText.fontFamily = 'Arial,Utkal,sans-serif';\r\n        if (!innerText.fontWeight)\r\n            innerText.fontWeight = 'normal';\r\n        if (!innerText.letterSpacing)\r\n            innerText.letterSpacing = '0';\r\n        return innerText;\r\n    }\r\n\r\n    getComputedStyleByParentRec(elem: any, cssProp: string): string {\r\n        if (!elem) return null;\r\n        let css = getComputedStyle(elem) as any;\r\n        let val = css[cssProp];\r\n        if (val && val != 'rgba(0, 0, 0, 0)') return val;\r\n        return this.getComputedStyleByParentRec(elem.parentElement, cssProp);\r\n    }\r\n\r\n    // odd strokeWidth is not supported\r\n    fixStrokeWidth(sw: number): number {\r\n        if (sw % 2 == 1)\r\n            console.warn('all-gauge: stroke-width \"' + sw + '\" is not supported (odd), changed to \"' + (++sw)) + '\"';\r\n        return sw;\r\n    }\r\n\r\n    // odd radius is not supported\r\n    fixRadius(r: number): number {\r\n        if (r % 2 == 1)\r\n            console.warn('all-gauge: radius \"' + r + '\" is not supported (odd), changed to \"' + (++r)) + '\"';\r\n        return r;\r\n    }\r\n\r\n    getDefaultColors(): ColorPalette {\r\n        return {\r\n            active: '#4CCEAD',\r\n            default: '#505050',\r\n            inactive: '#ededed'\r\n        };\r\n    }\r\n\r\n    getNeedleInnerStyle(radius: number): any {\r\n        return {\r\n            'height': (radius + 20) + 'px',\r\n            'width': (radius / Common.needleWidthHeightRatio) + 'px'\r\n        };\r\n    }\r\n\r\n    getNeedleStyle(radius: number, arcNeedlePercentage: number, scale: number) {\r\n        if (typeof scale !== 'number')\r\n            scale = 1.125;\r\n        let deg = (arcNeedlePercentage - 50) * 3.6;\r\n        return {\r\n            'left': 'calc(50% - ' + ((radius / Common.needleWidthHeightRatio)) / 2 + 'px',\r\n            'transform': 'rotate(' + deg + 'deg) scale(' + scale + ')'\r\n        };\r\n    }\r\n\r\n    isInRange(minMaxVal: MinMaxVal, sides: SideState) {\r\n        switch (sides) {\r\n            case SideState.Both: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n            case SideState.None: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Left: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Right: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n        }    \r\n    }\r\n\r\n    normalizeByPercentage(value: number, percentage: number, mid?: number, max?: number): number {\r\n        if (typeof mid === 'undefined')\r\n            mid = 50;\r\n        if (typeof max === 'undefined')\r\n            max = mid * 2;\r\n        let rel = null;\r\n\r\n        if (value > mid) {\r\n            percentage /= 2;\r\n            rel = Math.abs(mid - value);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value * (1 - percentage);\r\n        }\r\n        else {\r\n            if (value == 0.0)\r\n                value = 0.001;\r\n            rel = Math.abs(value - mid);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value + (mid * (percentage));\r\n        }\r\n    }\r\n\r\n    getRemainder(range: FromTo, hour: number) {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) {\r\n            return current - range.from;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isHourInRange(range: FromTo, hour: number): boolean {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) return true;\r\n        return false;\r\n    }\r\n\r\n    getMinutesFromHour(hour: string) {\r\n        let arr = hour.split(':');\r\n        return parseInt(arr[0].trim()) * 60 + parseInt(arr[1].trim());\r\n    }\r\n\r\n    getMinutesFromStart(hour: string, start = 0) {\r\n        let arr = hour.split(':');\r\n        return Math.max((parseInt(arr[0].trim()) * 60 + (parseInt(arr[1].trim()))) - start, 0);\r\n    }\r\n\r\n    getHoursAndMinutesLT(date: Date): string {\r\n        let hours = date.getHours();\r\n        hours = (hours + 24 - 2) % 24;\r\n        let mid = 'am';\r\n        if (hours == 0) { //At 00 hours we need to show 12 am\r\n            hours = 12;\r\n        }\r\n        else if (hours > 12) {\r\n            hours = hours % 12;\r\n            mid = 'pm';\r\n        }\r\n        return hours + ':' + date.getMinutes() + ' ' + mid;\r\n    }\r\n\r\n    getSecondsFromTime(timer: Time): number {\r\n        let hours = 0;\r\n        hours += timer.hours * 3600;\r\n        hours += timer.minutes * 60;\r\n        hours += timer.seconds;\r\n        return hours;\r\n    }\r\n\r\n    setTimeToZero(timer: Time): void {\r\n        timer.hours = 0;\r\n        timer.minutes = 0;\r\n        timer.seconds = 0;\r\n    }\r\n\r\n    decreaseTime(timer: Time): boolean {\r\n        if (timer.seconds > 0) {\r\n            if (--timer.seconds < 0) {\r\n                timer.seconds = 59;\r\n                if (--timer.minutes < 0) {\r\n                    timer.minutes = 59;\r\n                    if (--timer.hours < 0) {\r\n                        this.setTimeToZero(timer);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (timer.minutes > 0) {\r\n            timer.seconds = 59;\r\n            if (--timer.minutes < 0) {\r\n                timer.minutes = 59;\r\n                if (--timer.hours < 0) {\r\n                    this.setTimeToZero(timer);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (timer.hours > 0) {\r\n            timer.minutes = 59;\r\n            if (--timer.hours < 0) {\r\n                this.setTimeToZero(timer);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.isTimeZero(timer)) {\r\n            this.setTimeToZero(timer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTimeZero(timer: Time): boolean {\r\n        if (timer.hours <= 0 && timer.minutes <= 0 && timer.seconds <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    padWithZiro(text: string) {\r\n        if (String(text).length < 2)\r\n            text = '0' + text;\r\n        return text;\r\n    }\r\n\r\n    getSideStateByString(state: string): SideState {\r\n        if (!state) return SideState.None;\r\n        switch (state.toLowerCase()) {\r\n            case 'left':\r\n                return SideState.Left;\r\n            case 'right':\r\n                return SideState.Right;\r\n            case 'both':\r\n                return SideState.Both;\r\n            case 'none':\r\n                return SideState.None;\r\n            default:\r\n                return SideState.None\r\n        }\r\n    }\r\n}","export interface ColorPalette {\r\n    default: string;\r\n    active: string;\r\n    inactive: string;\r\n}\r\n\r\nexport interface CircleOptions {\r\n    colors?: ColorPalette;\r\n    fromDegree?: number;\r\n    toDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    animationDuration?: number;\r\n    backgroundColor?: string;\r\n    hideBottom: boolean;\r\n}\r\n\r\nexport interface SpinnerOptions {\r\n    colors?: ColorPalette;\r\n    activeDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    title?: InnerText;\r\n    animationDuration?: number;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport interface InnerText {\r\n    text: string;\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    lineHeight?: number;\r\n    fontWeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport interface JsonToHtmlElement {\r\n    type: string;\r\n    text?: string;\r\n    attrs?: any;\r\n    children?: Array<JsonToHtmlElement>;\r\n}\r\n\r\nexport interface RGBA {\r\n    Red: number;\r\n    Green: number;\r\n    Blue: number;\r\n    Alpha?: number;\r\n}\r\n\r\nexport interface MinMaxVal {\r\n    min: number;\r\n    max: number;\r\n    value?: number;\r\n}\r\n\r\nexport interface NeedleOptions {\r\n    color: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    scale: number;\r\n    animationDuration?: number;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport interface TuneOptions {\r\n    needleOptions?: NeedleOptions;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    // title?: InnerText;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n}\r\n\r\n// export interface MinMaxEdge {\r\n//     minMaxVal: MinMaxVal;\r\n//     leftEdges?: SinngleSideState;\r\n//     rightEdges?: SinngleSideState;\r\n//     bgColor: string;\r\n// }\r\n\r\nexport interface MultituneOptions {\r\n    needleOptions: NeedleOptions;\r\n    segments: Array<MinMaxVal>;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface RangeOptions {\r\n    colors?: ColorPalette;\r\n    minMaxVal: MinMaxVal;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    hideBottom: boolean;\r\n    title?: InnerText;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport enum SideState {\r\n    None,\r\n    Left,\r\n    Right,\r\n    Both,\r\n}\r\n\r\n// export enum SinngleSideState {\r\n//     None,\r\n//     Hollow,\r\n//     Full,\r\n// }\r\n\r\nexport interface EdgesOptions {\r\n    color: string;\r\n    backgroundColor?: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    strokeWidth: number;\r\n    animationDuration?: number;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface IconOptions {\r\n    degree: number;\r\n    radius: number;\r\n\tradiusOffset?: number;\r\n    animationDuration?: number;\r\n    src: string;\r\n    dimensions: {\r\n        width: number;\r\n        height: number;\r\n    },\r\n    top?: number;\r\n    left?: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface NumberData {\r\n        number: string;\r\n        isActive: boolean;\r\n        remainder: number;\r\n    }\r\n\r\nexport interface AmPmOptions {\r\n    fromTo: FromToString;\r\n    needleOptions?: NeedleOptions;\r\n    colors?: ColorPalette;\r\n    radius: number;\r\n    minMaxValAm?: MinMaxVal;\r\n    minMaxValPm?: MinMaxVal;\r\n    animationDuration?: number;\r\n    strokeWidth?: number;\r\n    hollowEdgesAm?: SideState;\r\n    hollowEdgesPm?: SideState;\r\n}\r\n\r\nexport interface FromTo {\r\n        from: number;\r\n        to: number;\r\n    }\r\n\r\nexport interface FromToString {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nexport interface Time {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n}\r\n\r\nexport interface TimerOptions {\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    time: Time;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    title?: InnerText;\r\n    percentage?: number;\r\n}","import { SpinnerOptions, JsonToHtmlElement, RGBA, InnerText, CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\n\r\nexport class Spinner {\r\n    private element: any;\r\n    private options: SpinnerOptions;\r\n    private circleOptions: CircleOptions;\r\n    private common: Common;\r\n    private circle: Circle;\r\n    constructor(element: any, options?: SpinnerOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n        if (this.options.activeDegree == 100)\r\n            this.options.activeDegree = 99.9999;\r\n\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): SpinnerOptions {\r\n        return {\r\n            colors: this.common.getDefaultColors(),\r\n            activeDegree: 10,\r\n            radius: 88,\r\n            strokeWidth: 6,\r\n            rotationSpeed: 5000,\r\n            animationDuration: 500,\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            highlight: false\r\n        } as SpinnerOptions;\r\n    }\r\n\r\n    public update(options: SpinnerOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        if (this.options.activeDegree == 100)\r\n            this.options.activeDegree = 99.9999;\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setTitle(this.options);\r\n        this.setDiv(this.options);\r\n        this.setCircle();\r\n    }\r\n\r\n    setTitle(options: SpinnerOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        // h4.style.top = ((options.radius) - (options.title.fontSize / 2)) + 'px';\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        // setTimeout(() => {\r\n        //     let h = parseInt(getComputedStyle(h4).height.replace('px', ''));\r\n        //     if (!isNaN(h))\r\n        //         h4.style.top = ((options.radius) - (h / 2)) + 'px';\r\n        // }, 10);\r\n    }\r\n\r\n    setDiv(options: SpinnerOptions) {\r\n        let div = this.element.querySelector('div[data-spinner]');\r\n        let dim = options.radius * 2 + 'px';\r\n        div.style.width = dim;\r\n        div.style.height = dim;\r\n        div.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        \r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n        \r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative;`,\r\n                'data-spinner': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.setCircle();\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        this.circleOptions.fromDegree = -this.options.activeDegree / 2;\r\n        this.circleOptions.toDegree = this.options.activeDegree / 2;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle) {\r\n            this.circle.update(this.circleOptions);\r\n        }\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}