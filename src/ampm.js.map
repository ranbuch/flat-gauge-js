{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ampm.ts","src/circle.ts","src/common.ts","src/edges.ts","src/interfaces.ts","src/needle.ts"],"names":[],"mappings":"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","file":"ampm.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { AmPmOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, NumberData, FromTo } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\n\r\nexport class AmPm {\r\n    private element: any;\r\n    private options: AmPmOptions;\r\n    private common: Common;\r\n    private circleOptionsAm: CircleOptions;\r\n    private circleAm: Circle;\r\n    private circleOptionsPm: CircleOptions;\r\n    private circlePm: Circle;\r\n    private edgesOptionsAm: EdgesOptions;\r\n    private edgesAm: Edges;\r\n    private edgesOptionsPm: EdgesOptions;\r\n    private edgesPm: Edges;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    // private amNumbers: Array<NumberData>;\r\n    // private pmNumbers: Array<NumberData>;\r\n    private minMaxValAm: FromTo;\r\n    private minMaxValPm: FromTo;\r\n    private lower: Array<NumberData>;\r\n    private higher: Array<NumberData>;\r\n\r\n    constructor(element: any, options?: AmPmOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.setMinutes();\r\n\r\n        this.init();\r\n    }\r\n\r\n    setMinutes() {\r\n        let arrFrom = this.options.fromTo.from.split(':');\r\n        let arrTo = this.options.fromTo.to.split(':');\r\n        let fromMinutes = 0, toMinutes = 0, from = null, to = null;\r\n\r\n        if (parseInt(arrFrom[0]) <= 12 || parseInt(arrTo[0]) <= 12) {\r\n            fromMinutes = this.common.getMinutesFromHour(this.options.fromTo.from);\r\n        }\r\n\r\n        if (parseInt(arrFrom[0]) >= 12 || parseInt(arrTo[0]) >= 12) {\r\n            toMinutes = this.common.getMinutesFromHour(this.options.fromTo.to);\r\n        }\r\n        \r\n        let max = 60 * 12;\r\n        if (fromMinutes > 0) {\r\n            from = this.common.getMinutesFromStart(this.options.fromTo.from, 0);\r\n            to = this.common.getMinutesFromStart(this.options.fromTo.to, 0);\r\n                \r\n            this.minMaxValAm = {\r\n                from: from / max * 100,\r\n                to: Math.min(to / max * 100, 100)\r\n            } as FromTo;\r\n        }\r\n\r\n        if (toMinutes > 0) {\r\n            from = this.common.getMinutesFromStart(this.options.fromTo.from, 60 * 12);\r\n            to = this.common.getMinutesFromStart(this.options.fromTo.to, 60 * 12);\r\n            \r\n            this.minMaxValPm = {\r\n                from: from / max * 100,\r\n                to: Math.min(to / max * 100, 100)\r\n            } as FromTo;\r\n        }\r\n        \r\n        this.lower = [];\r\n        this.higher = [];\r\n\r\n        this.lower.push({\r\n            number: '00',\r\n            isActive: this.common.isHourInRange(this.minMaxValAm, 0),\r\n            remainder: this.common.getRemainder(this.minMaxValAm, 0)\r\n        });\r\n        for (let i = 1; i < 24; i++) {\r\n            if (i < 12) {\r\n                this.lower.push({\r\n                    number: i.toString(),\r\n                    isActive: this.common.isHourInRange(this.minMaxValAm, i),\r\n                    remainder: this.common.getRemainder(this.minMaxValAm, i)\r\n                });\r\n            }\r\n            else {\r\n                this.higher.push({\r\n                    number: i.toString(),\r\n                    isActive: this.common.isHourInRange(this.minMaxValPm, i - 12),\r\n                    remainder: this.common.getRemainder(this.minMaxValAm, i - 12)\r\n                });\r\n            }\r\n        }\r\n\r\n        this.setNeedle();\r\n        setTimeout(() => {\r\n            this.setMinutes();\r\n        }, 60000);\r\n    }\r\n\r\n    setNeedle() {\r\n        \r\n        let now = this.common.getHoursAndMinutesLT(new Date());\r\n\r\n        let isAm = now.indexOf('AM') > -1;\r\n\r\n        let relevantHours = isAm ? this.lower : this.higher;\r\n\r\n        // let diameterForNeedle = isAm ? (this.options.radius * 2) - 20 : this.options.radius * 2;\r\n\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (this.edgesOptionsAm && this.edgesOptionsPm)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, (isAm ? this.edgesOptionsAm.hollowEdges : this.edgesOptionsPm.hollowEdges)) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n\r\n        for (let i = 0; i < relevantHours.length; i++) {\r\n            if (relevantHours[i].isActive) {\r\n                let current = (i * (100 / 12)) + relevantHours[i].remainder;\r\n                if (this.needleOptions.minMaxVal.min === null)\r\n                    this.needleOptions.minMaxVal.min = current;\r\n                this.needleOptions.minMaxVal.max = current;\r\n            }\r\n        }\r\n\r\n        if (this.needle)\r\n            this.needle.update(this.needleOptions);\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n            \r\n            // this.needle = {\r\n            //     minMaxVal: {\r\n            //         min: null,\r\n            //         max: null,\r\n            //         value: this.piService.getCurrentTimePercentage()\r\n            //     },\r\n            //     color: null\r\n            // };\r\n        \r\n        \r\n\r\n        // this.needleStyleInner = this.common.getNeedleInnerStyle(this.diameter);\r\n        // this.needleStyle = this.piService.getStyleByPercentage(this.diameter, this.niddle.minMaxVal.value, isAm);\r\n        // this.needle.color = this.piService.getColor(this.niddle);\r\n    }\r\n\r\n    // initNumbers(numbers: Array<NumberData>) {\r\n    //     numbers.push({\r\n    //         number: '00',\r\n    //         isActive: this.common.isHourInRange(this.minMaxValAm, 0),\r\n    //         remainder: this.common.getRemainder(this.minMaxValAm, 0)\r\n    //     });\r\n    //     numbers.push({\r\n\r\n    //     });\r\n    //     // this.amNumbers.\r\n    // }\r\n\r\n    init() {\r\n        // this.amNumbers = [];\r\n        // this.initNumbers(this.amNumbers);\r\n\r\n        let innerElem = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': 'position: relative;',\r\n                'data-ampm': ''\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-am-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-pm-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-needle-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        let amWrap = {\r\n            type: 'div',\r\n            attrs: {\r\n                style: 'position: absolute;height: 60px;top: 65px;left: 105px;color: #CBCBCB;font-size: 16px;z-index: 30',\r\n                'data-am-numbers': ''\r\n            },\r\n            children: []\r\n        } as JsonToHtmlElement;\r\n        for (let i = 0; i < this.lower.length; i++) {\r\n            amWrap.children.push({\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `height: 100%;position: absolute;width: 20px;left: 0;top: 0;transform-origin: bottom center;text-align: center;transform: rotate(${i * 30}deg);`,\r\n                    'data-num': i\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'span',\r\n                        attrs: {\r\n                            'style': `transform: rotate(-${i * 30}deg);display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: '#text',\r\n                                text: this.lower[i].number\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        let pmWrap = {\r\n            type: 'div',\r\n            attrs: {\r\n                style: 'position: absolute;height: 110px;color: #CBCBCB;font-size: 16px;',\r\n                'data-pm-numbers': ''\r\n            },\r\n            children: []\r\n        } as JsonToHtmlElement;\r\n        for (let i = 0; i < this.higher.length; i++) {\r\n            pmWrap.children.push({\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `height: 100%;position: absolute;width: 20px;left: 0;top: 0;transform-origin: bottom center;text-align: center;transform: rotate(${i * 30}deg);`,\r\n                    'data-num': i\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'span',\r\n                        attrs: {\r\n                            'style': `transform: rotate(-${i * 30}deg);display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: '#text',\r\n                                text: this.higher[i].number\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.common.jsonToHtml(amWrap));\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.circleAm.getElement());\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.edgesAm.getLeftElement());\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.edgesAm.getRightElement());\r\n\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.common.jsonToHtml(pmWrap));\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.circlePm.getElement());\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.edgesPm.getLeftElement());\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.edgesPm.getRightElement());\r\n\r\n        \r\n        innerElem.querySelector('[data-needle-wrap]').appendChild(this.needle.getElement());\r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    setNumbers() {\r\n        let pmNumbers = this.element.querySelector('[data-pm-numbers]');\r\n        if (!pmNumbers) return;\r\n        pmNumbers.style.left = (((this.options.radius * 2) / 1.67) - 30) + 'px';\r\n        pmNumbers.style.top = '-20px';\r\n    }\r\n\r\n    setCircles() {\r\n        let setCircle = (prefix: string) => {\r\n            this['circleOptions' + prefix] = this.common.extend(this.options, this['circleOptions' + prefix], true);\r\n        \r\n            this['circleOptions' + prefix].fromDegree = this.options.needleOptions.minMaxVal.min;\r\n            this['circleOptions' + prefix].toDegree = this.options.needleOptions.minMaxVal.max;\r\n            \r\n            this['circleOptions' + prefix].backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!this['circleOptions' + prefix].backgroundColor)\r\n                this['circleOptions' + prefix].backgroundColor = '#fff';\r\n\r\n            if (prefix == 'Am')\r\n                this['circleOptions' + prefix].radius = this.options.radius - (this.options.strokeWidth);\r\n\r\n            if (this['circle' + prefix]) {\r\n                this['circle' + prefix].update(this['circleOptions' + prefix]);\r\n            }\r\n            else\r\n                this['circle' + prefix] = new Circle(this['circleOptions' + prefix]);\r\n        };\r\n\r\n        setCircle('Am');\r\n        setCircle('Pm');\r\n    }\r\n\r\n    setEdges() {\r\n        let setEdge = (prefix: string) => {\r\n            this['edgesOptions' + prefix] = this.common.extend(this.options.needleOptions, this['edgesOptions' + prefix], true);\r\n            this['edgesOptions' + prefix].strokeWidth = this.options.strokeWidth;\r\n            this['edgesOptions' + prefix].color = this.options.colors.active;\r\n            this['edgesOptions' + prefix].hollowEdges = this.options['hollowEdges' +  + prefix];\r\n            \r\n            if (this['edges' + prefix])\r\n                this['edges' + prefix].update(this['edgesOptions' + prefix]);\r\n            else\r\n                this['edges' + prefix] = new Edges(this['edgesOptions' + prefix]);\r\n            let left = this.element.querySelector('[data-left-edge]');\r\n            let right = this.element.querySelector('[data-right-edge]');\r\n            if (left && right) {\r\n                if (!this.options['showEdges' + prefix]) {\r\n                    left.style.display = 'none';\r\n                    right.style.display = 'none';\r\n                }\r\n                else {\r\n                    left.style.display = 'inline-block';\r\n                    right.style.display = 'inline-block';\r\n                }\r\n            }\r\n        }\r\n\r\n        setEdge('Am');\r\n        setEdge('Pm');\r\n    }\r\n\r\n    public update(options: AmPmOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircles();\r\n        this.setNeedle();\r\n        this.setNumbers();\r\n        this.setEdges();\r\n        this.setNeedle();\r\n    }\r\n\r\n    setWrap(options: AmPmOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n        let topLeftDim = (options.radius / 3.5) + 'px';\r\n\r\n        let amWrap = wrap.querySelector('[data-am-wrap]');\r\n        amWrap.style.top = ((options.radius / 3.5) + (options.strokeWidth * 2)) + 'px';\r\n        amWrap.style.left = ((options.radius / 3.5) + (options.strokeWidth * 2)) + 'px';\r\n        amWrap.style.zIndex = '20';\r\n        // let amCircle = amWrap.querySelector('[data-circle]')\r\n        let amNumbers = amWrap.querySelector('[data-am-numbers');\r\n        amNumbers.style.top = (options.strokeWidth * 3) + 'px';\r\n        amNumbers.style.left = (options.radius - options.strokeWidth * 3) + 'px';\r\n        \r\n        let pmWrap = wrap.querySelector('[data-pm-wrap]');\r\n        // let pmCircle = pmWrap.querySelector('[data-circle]')\r\n        pmWrap.style.top = topLeftDim;\r\n        pmWrap.style.left = topLeftDim;\r\n        \r\n\r\n        \r\n        let nWrap = wrap.querySelector('[data-needle-wrap]');\r\n        nWrap.style.top = topLeftDim;\r\n        nWrap.style.left = ((options.radius / 3.5) + options.radius) + 'px';\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    getDefaultOptions(): AmPmOptions {\r\n        let animationDuration = 500, radius = 88;\r\n        let colors = this.common.getDefaultColors();\r\n        return {\r\n            fromTo: {\r\n                from: '3:52',\r\n                to: '14:20'\r\n            },\r\n            radius: radius,\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            needleOptions: {\r\n                animationDuration: animationDuration,\r\n                color: colors.active,\r\n                radius: radius,\r\n                scale: 1.125,\r\n                minMaxVal: {\r\n                    max: 3,\r\n                    min: 14,\r\n                    value: 14\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n","import { CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Circle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: CircleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.injectCss();\r\n\r\n        this.init();\r\n    }\r\n\r\n    injectCss(): void {\r\n        let className = '_all-gauge-js-circle-style';\r\n        if (document.querySelector('.' + className)) return;\r\n\r\n        let style = `@keyframes allGaugeRotatingCircle {\r\n            from {\r\n                transform: rotate(0deg);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }`;\r\n\r\n        let sheet = document.createElement('style');\r\n        sheet.innerHTML = style;\r\n        sheet.className = className;\r\n        document.body.appendChild(sheet);\r\n    }\r\n\r\n    public update(options: CircleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setSvg(this.options);\r\n        this.setElements(this.options);\r\n    }\r\n\r\n    setSvg(options: CircleOptions): void {\r\n        let startAngle = (options.fromDegree - 50) * 3.6, endAngle = (options.toDegree - 50) * 3.6;\r\n        let d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n\r\n        let svg = this.element.querySelector('svg');\r\n        let dim = options.radius * 2;\r\n        svg.style.transitionDuration = options.animationDuration;\r\n        svg.style.width = dim + 'px';\r\n        svg.style.height = dim + 'px';\r\n        svg.style.animation = `allGaugeRotatingCircle ${options.rotationSpeed}ms linear infinite`;\r\n        svg.setAttributeNS(null, 'width', dim + 'px');\r\n        svg.setAttributeNS(null, 'height', dim + 'px');\r\n        let path = svg.querySelector('[data-arc]');\r\n        path.setAttributeNS(null, 'stroke', options.colors.active);\r\n        path.setAttributeNS(null, 'stroke-width', options.strokeWidth);\r\n        path.setAttributeNS(null, 'd', d);\r\n        path.style.strokeWidth = options.strokeWidth + 'px';\r\n        path.style.transitionDuration = options.animationDuration;\r\n\r\n        let concealer = svg.querySelector('[data-concealer]');\r\n        if (options.hideBottom) {\r\n            startAngle = (33.334) * 3.6, endAngle = (66.667) * 3.6;\r\n            d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n            concealer.setAttributeNS(null, 'stroke-width', options.strokeWidth + 2);\r\n            concealer.setAttributeNS(null, 'd', d);\r\n            concealer.style.strokeWidth = (options.strokeWidth + 2) + 'px';\r\n            concealer.style.display = '';\r\n            let bgColor = options.backgroundColor;\r\n            if (!bgColor)\r\n                bgColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!bgColor)\r\n                bgColor = '#ffffff';\r\n            concealer.setAttributeNS(null, 'stroke', bgColor);\r\n        }\r\n        else\r\n            concealer.style.display = 'none';\r\n    }\r\n\r\n    setElements(options: CircleOptions): void {\r\n        // let circle = this.element.querySelector('div[data-circle]');\r\n        let circle = this.element.children[0];\r\n        let dim = this.options.radius * 2 + 'px';\r\n        circle.style.width = dim;\r\n        circle.style.height = dim;\r\n        circle.style.transitionDuration = options.animationDuration;\r\n\r\n        let c1 = circle.querySelector('[data-c1]');\r\n        c1.style.width = dim;\r\n        c1.style.height = dim;\r\n        c1.style.backgroundColor = this.options.colors.inactive;\r\n        c1.style.transitionDuration = options.animationDuration;\r\n        \r\n        let c3 = circle.querySelector('[data-c3]');\r\n        dim = ((options.radius * 2) - (options.strokeWidth * 2)) + 'px';\r\n        c3.style.width = dim;\r\n        c3.style.height = dim;\r\n        c3.style.top = options.strokeWidth + 'px';\r\n        c3.style.left = options.strokeWidth + 'px';\r\n        c3.style.backgroundColor = options.backgroundColor;\r\n        c3.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative; margin: auto; display: block;`,\r\n                'data-circle': 'true'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c1': '',\r\n                                'style': `position: absolute;top: 0; left: 0; z-index: 1; border-radius: 50%;`\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'svg',\r\n                            attrs: {\r\n                                'style': `position: absolute; top: 0;left: 0; z-index: 2; border-radius: unset;`\r\n                            },\r\n                            children: [\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-arc': ''\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-concealer': ''\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c3': '',\r\n                                'style': `position: absolute; z-index: 3; border-radius: 50%;`\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): any {\r\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    describeArc(x: number, y: number, radius: number, startAngle: number, endAngle: number): any {\r\n        var start = this.polarToCartesian(x, y, radius, endAngle);\r\n        var end = this.polarToCartesian(x, y, radius, startAngle);\r\n        var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n        var d = [\r\n            \"M\", start.x, start.y,\r\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n        ].join(\" \");\r\n        return d;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","import { JsonToHtmlElement, RGBA, InnerText, ColorPalette, MinMaxVal, FromTo, Time, SideState } from './interfaces';\r\n\r\nexport class Common {\r\n    static NameSpaceElements: Array<string> = ['svg', 'path', 'g'];\r\n    static xmlns: string = \"http://www.w3.org/2000/svg\";\r\n    // static needleWidthHeightRatio: number = 9.107127839547825;\r\n    static needleWidthHeightRatio: number = 8.69322239126;\r\n    extend(src: any, dest: any, copy?: boolean): any {\r\n        for (let i in src) {\r\n            if (typeof src[i] === 'object') {\r\n                if (dest && dest[i])\r\n                    src[i] = this.extend(src[i], dest[i]);\r\n            }\r\n            else if (typeof dest === 'object' && typeof dest[i] !== 'undefined') {\r\n                src[i] = dest[i];\r\n            }\r\n        }\r\n        if (copy)\r\n            return JSON.parse(JSON.stringify(src));\r\n        return src;\r\n    }\r\n\r\n    jsonToHtml(obj: JsonToHtmlElement): any {\r\n        let elm = null, isNsElem = Common.NameSpaceElements.filter(x => x == obj.type).length > 0;\r\n        if (isNsElem)\r\n            elm = document.createElementNS(Common.xmlns, obj.type);\r\n        else\r\n            elm = document.createElement(obj.type);\r\n        for (var i in obj.attrs) {\r\n            if (isNsElem)\r\n                elm.setAttributeNS(null, i, obj.attrs[i]);\r\n            else\r\n                elm.setAttribute(i, obj.attrs[i]);\r\n        }\r\n        for (let i in obj.children) {\r\n            let newElem = null;\r\n            if (obj.children[i].type == '#text')\r\n                newElem = document.createTextNode(obj.children[i].text);\r\n            else\r\n                newElem = this.jsonToHtml(obj.children[i]);\r\n            if ((newElem && newElem.tagName && newElem.tagName.toLowerCase() !== 'undefined') || newElem.nodeType == 3)\r\n                elm.appendChild(newElem);\r\n        }\r\n        return elm;\r\n    }\r\n\r\n    isHex(str: string): boolean {\r\n        return str.indexOf('#') > -1;\r\n    }\r\n\r\n    isRgba(str: string) {\r\n        return str.split(',').length > 3;\r\n    }\r\n\r\n    toRgbObj(rgba: string): RGBA {\r\n        let arr = rgba.split(',').map((item) => {\r\n            return parseInt(item, 10);\r\n        });\r\n        return {\r\n            Red: arr[0],\r\n            Green: arr[1],\r\n            Blue: arr[2],\r\n            Alpha: arr[3]\r\n        };\r\n    }\r\n\r\n    RgbObjToString(rgba: RGBA): string {\r\n        let ans = '(' + rgba.Red + ',' + rgba.Green + ',' + rgba.Blue;\r\n        if (rgba.Alpha)\r\n            ans += ',' + rgba.Alpha\r\n        ans += ')';\r\n        return ans;\r\n    }\r\n\r\n    hexToRgb(hex: string): RGBA {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m: string, r: string, g: string, b: string) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            Red: parseInt(result[1], 16),\r\n            Green: parseInt(result[2], 16),\r\n            Blue: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    setInnerTextDefaults(innerText?: InnerText): InnerText {\r\n        if (!innerText)\r\n            innerText = {\r\n                text: ''\r\n            };\r\n        if (!innerText.text)\r\n            innerText.text = '';\r\n        if (!innerText.fontSize)\r\n            innerText.fontSize = 18;\r\n        if (!innerText.lineHeight)\r\n            innerText.lineHeight = innerText.fontSize;\r\n        if (!innerText.fontFamily)\r\n            innerText.fontFamily = 'Arial,Utkal,sans-serif';\r\n        if (!innerText.fontWeight)\r\n            innerText.fontWeight = 'normal';\r\n        if (!innerText.letterSpacing)\r\n            innerText.letterSpacing = '0';\r\n        return innerText;\r\n    }\r\n\r\n    getComputedStyleByParentRec(elem: any, cssProp: string): string {\r\n        if (!elem) return null;\r\n        let css = getComputedStyle(elem) as any;\r\n        let val = css[cssProp];\r\n        if (val && val != 'rgba(0, 0, 0, 0)') return val;\r\n        return this.getComputedStyleByParentRec(elem.parentElement, cssProp);\r\n    }\r\n\r\n    // odd strokeWidth is not supported\r\n    fixStrokeWidth(sw: number): number {\r\n        if (sw % 2 == 1)\r\n            console.warn('all-gauge: stroke-width \"' + sw + '\" is not supported (odd), changed to \"' + (++sw)) + '\"';\r\n        return sw;\r\n    }\r\n\r\n    // odd radius is not supported\r\n    fixRadius(r: number): number {\r\n        if (r % 2 == 1)\r\n            console.warn('all-gauge: radius \"' + r + '\" is not supported (odd), changed to \"' + (++r)) + '\"';\r\n        return r;\r\n    }\r\n\r\n    getDefaultColors(): ColorPalette {\r\n        return {\r\n            active: '#4CCEAD',\r\n            default: '#505050',\r\n            inactive: '#ededed'\r\n        };\r\n    }\r\n\r\n    getNeedleInnerStyle(radius: number): any {\r\n        return {\r\n            'height': (radius + 20) + 'px',\r\n            'width': (radius / Common.needleWidthHeightRatio) + 'px'\r\n        };\r\n    }\r\n\r\n    getNeedleStyle(radius: number, arcNeedlePercentage: number, scale: number) {\r\n        if (typeof scale !== 'number')\r\n            scale = 1.125;\r\n        let deg = (arcNeedlePercentage - 50) * 3.6;\r\n        return {\r\n            'left': 'calc(50% - ' + ((radius / Common.needleWidthHeightRatio)) / 2 + 'px',\r\n            'transform': 'rotate(' + deg + 'deg) scale(' + scale + ')'\r\n        };\r\n    }\r\n\r\n    isInRange(minMaxVal: MinMaxVal, sides: SideState) {\r\n        switch (sides) {\r\n            case SideState.Both: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n            case SideState.None: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Left: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Right: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n        }    \r\n    }\r\n\r\n    normalizeByPercentage(value: number, percentage: number, mid?: number, max?: number): number {\r\n        if (typeof mid === 'undefined')\r\n            mid = 50;\r\n        if (typeof max === 'undefined')\r\n            max = mid * 2;\r\n        let rel = null;\r\n\r\n        if (value > mid) {\r\n            percentage /= 2;\r\n            rel = Math.abs(mid - value);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value * (1 - percentage);\r\n        }\r\n        else {\r\n            if (value == 0.0)\r\n                value = 0.001;\r\n            rel = Math.abs(value - mid);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value + (mid * (percentage));\r\n        }\r\n    }\r\n\r\n    getRemainder(range: FromTo, hour: number) {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) {\r\n            return current - range.from;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isHourInRange(range: FromTo, hour: number): boolean {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) return true;\r\n        return false;\r\n    }\r\n\r\n    getMinutesFromHour(hour: string) {\r\n        let arr = hour.split(':');\r\n        return parseInt(arr[0].trim()) * 60 + parseInt(arr[1].trim());\r\n    }\r\n\r\n    getMinutesFromStart(hour: string, start = 0) {\r\n        let arr = hour.split(':');\r\n        return Math.max((parseInt(arr[0].trim()) * 60 + (parseInt(arr[1].trim()))) - start, 0);\r\n    }\r\n\r\n    getHoursAndMinutesLT(date: Date): string {\r\n        let hours = date.getHours();\r\n        hours = (hours + 24 - 2) % 24;\r\n        let mid = 'am';\r\n        if (hours == 0) { //At 00 hours we need to show 12 am\r\n            hours = 12;\r\n        }\r\n        else if (hours > 12) {\r\n            hours = hours % 12;\r\n            mid = 'pm';\r\n        }\r\n        return hours + ':' + date.getMinutes() + ' ' + mid;\r\n    }\r\n\r\n    getSecondsFromTime(timer: Time): number {\r\n        let hours = 0;\r\n        hours += timer.hours * 3600;\r\n        hours += timer.minutes * 60;\r\n        hours += timer.seconds;\r\n        return hours;\r\n    }\r\n\r\n    setTimeToZero(timer: Time): void {\r\n        timer.hours = 0;\r\n        timer.minutes = 0;\r\n        timer.seconds = 0;\r\n    }\r\n\r\n    decreaseTime(timer: Time): boolean {\r\n        if (timer.seconds > 0) {\r\n            if (--timer.seconds < 0) {\r\n                timer.seconds = 59;\r\n                if (--timer.minutes < 0) {\r\n                    timer.minutes = 59;\r\n                    if (--timer.hours < 0) {\r\n                        this.setTimeToZero(timer);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (timer.minutes > 0) {\r\n            timer.seconds = 59;\r\n            if (--timer.minutes < 0) {\r\n                timer.minutes = 59;\r\n                if (--timer.hours < 0) {\r\n                    this.setTimeToZero(timer);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (timer.hours > 0) {\r\n            timer.minutes = 59;\r\n            if (--timer.hours < 0) {\r\n                this.setTimeToZero(timer);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.isTimeZero(timer)) {\r\n            this.setTimeToZero(timer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTimeZero(timer: Time): boolean {\r\n        if (timer.hours <= 0 && timer.minutes <= 0 && timer.seconds <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    padWithZiro(text: string) {\r\n        if (String(text).length < 2)\r\n            text = '0' + text;\r\n        return text;\r\n    }\r\n\r\n    getSideStateByString(state: string): SideState {\r\n        if (!state) return SideState.None;\r\n        switch (state.toLowerCase()) {\r\n            case 'left':\r\n                return SideState.Left;\r\n            case 'right':\r\n                return SideState.Right;\r\n            case 'both':\r\n                return SideState.Both;\r\n            case 'none':\r\n                return SideState.None;\r\n            default:\r\n                return SideState.None\r\n        }\r\n    }\r\n}","import { EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Edges {\r\n    private leftElement: any;\r\n    private rightElement: any;\r\n    private common: Common;\r\n\r\n    static AddToEdge: number = 4;\r\n    static AddToEdgeHeight: number = 4;\r\n\r\n    constructor(private options?: EdgesOptions) {\r\n        this.common = new Common();\r\n\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        this.options = this.common.extend(defaultOptions, options);\r\n        \r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): EdgesOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500;\r\n        return {\r\n            color: colors.active,\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            radius: defRadius,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            hollowEdges: SideState.None,\r\n            backgroundColor: '#ffffff'\r\n        } as EdgesOptions;\r\n    }\r\n\r\n    init() {\r\n        this.leftElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-left-edge': ''\r\n                }\r\n            });\r\n\r\n        this.rightElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-right-edge': ''\r\n                }\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: EdgesOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions() {\r\n        this.setSpans(this.options);\r\n    }\r\n\r\n    setSpans(options: EdgesOptions) {\r\n        let height = (options.strokeWidth + Edges.AddToEdge + Edges.AddToEdgeHeight) + 'px';\r\n        let top = 'calc(50% - ' + ((options.strokeWidth / 2) + (Edges.AddToEdge / 2) + (Edges.AddToEdgeHeight / 2)) + 'px)';\r\n        let leftStyle = 'calc(50% - ' + (Edges.AddToEdge / 2) + 'px)';\r\n\r\n        // let bgColor = this.common.getComputedStyleByParentRec(this.leftElement, 'backgroundColor');\r\n        // if (!bgColor)\r\n        let bgColor = this.options.backgroundColor;\r\n\r\n        let left = this.leftElement;\r\n        left.style.height = height;\r\n        left.style.top = top;\r\n        left.style.left = leftStyle;\r\n        left.style.backgroundColor = options.color;\r\n        left.style.transitionDuration = options.animationDuration + 'ms';\r\n        // left.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Left || options.hollowEdges == SideState.Both) {\r\n            left.style.border = 'solid 1px ' + options.color;\r\n            left.style.backgroundColor = bgColor;\r\n            // left.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // left.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let right = this.rightElement;\r\n        right.style.height = height;\r\n        right.style.top = top;\r\n        right.style.left = leftStyle;\r\n        right.style.backgroundColor = options.color;\r\n        right.style.transitionDuration = options.animationDuration + 'ms';\r\n        // right.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Right || options.hollowEdges == SideState.Both) {\r\n            right.style.border = 'solid 1px ' + options.color;\r\n            right.style.backgroundColor = bgColor;\r\n            // right.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // right.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let scalar = options.radius - (options.strokeWidth / 2), xVectorLeft, yVectorLeft, xVectorRight, yVectorRight;\r\n        let degLeft = (options.minMaxVal.min - 50) * 3.6;\r\n        let degRight = (options.minMaxVal.max - 50) * 3.6;\r\n        xVectorLeft = Math.sin(degLeft * (Math.PI / 180)) * scalar;\r\n        yVectorLeft = -Math.cos(degLeft * (Math.PI / 180)) * scalar;\r\n        left.style.transform = `translate3d(${xVectorLeft}px, ${yVectorLeft}px, 0) rotate(${degLeft}deg)`;\r\n        xVectorRight = Math.sin(degRight * (Math.PI / 180)) * scalar;\r\n        yVectorRight = -Math.cos(degRight * (Math.PI / 180)) * scalar;\r\n        right.style.transform = `translate3d(${xVectorRight}px, ${yVectorRight}px, 0) rotate(${degRight}deg)`;\r\n    }\r\n\r\n    public getLeftElement(): any {\r\n        return this.leftElement;\r\n    }\r\n\r\n    public getRightElement(): any {\r\n        return this.rightElement;\r\n    }\r\n}","export interface ColorPalette {\r\n    default: string;\r\n    active: string;\r\n    inactive: string;\r\n}\r\n\r\nexport interface CircleOptions {\r\n    colors?: ColorPalette;\r\n    fromDegree?: number;\r\n    toDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    animationDuration?: number;\r\n    backgroundColor?: string;\r\n    hideBottom: boolean;\r\n}\r\n\r\nexport interface SpinnerOptions {\r\n    colors?: ColorPalette;\r\n    activeDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    title?: InnerText;\r\n    animationDuration?: number;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport interface InnerText {\r\n    text: string;\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    lineHeight?: number;\r\n    fontWeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport interface JsonToHtmlElement {\r\n    type: string;\r\n    text?: string;\r\n    attrs?: any;\r\n    children?: Array<JsonToHtmlElement>;\r\n}\r\n\r\nexport interface RGBA {\r\n    Red: number;\r\n    Green: number;\r\n    Blue: number;\r\n    Alpha?: number;\r\n}\r\n\r\nexport interface MinMaxVal {\r\n    min: number;\r\n    max: number;\r\n    value?: number;\r\n}\r\n\r\nexport interface NeedleOptions {\r\n    color: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    scale: number;\r\n    animationDuration?: number;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport interface TuneOptions {\r\n    needleOptions?: NeedleOptions;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    // title?: InnerText;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n}\r\n\r\n// export interface MinMaxEdge {\r\n//     minMaxVal: MinMaxVal;\r\n//     leftEdges?: SinngleSideState;\r\n//     rightEdges?: SinngleSideState;\r\n//     bgColor: string;\r\n// }\r\n\r\nexport interface MultituneOptions {\r\n    needleOptions: NeedleOptions;\r\n    segments: Array<MinMaxVal>;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface RangeOptions {\r\n    colors?: ColorPalette;\r\n    minMaxVal: MinMaxVal;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    hideBottom: boolean;\r\n    title?: InnerText;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport enum SideState {\r\n    None,\r\n    Left,\r\n    Right,\r\n    Both,\r\n}\r\n\r\n// export enum SinngleSideState {\r\n//     None,\r\n//     Hollow,\r\n//     Full,\r\n// }\r\n\r\nexport interface EdgesOptions {\r\n    color: string;\r\n    backgroundColor?: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    strokeWidth: number;\r\n    animationDuration?: number;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface IconOptions {\r\n    degree: number;\r\n    radius: number;\r\n\tradiusOffset?: number;\r\n    animationDuration?: number;\r\n    src: string;\r\n    dimensions: {\r\n        width: number;\r\n        height: number;\r\n    },\r\n    top?: number;\r\n    left?: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface NumberData {\r\n        number: string;\r\n        isActive: boolean;\r\n        remainder: number;\r\n    }\r\n\r\nexport interface AmPmOptions {\r\n    fromTo: FromToString;\r\n    needleOptions?: NeedleOptions;\r\n    colors?: ColorPalette;\r\n    radius: number;\r\n    minMaxValAm?: MinMaxVal;\r\n    minMaxValPm?: MinMaxVal;\r\n    animationDuration?: number;\r\n    strokeWidth?: number;\r\n    hollowEdgesAm?: SideState;\r\n    hollowEdgesPm?: SideState;\r\n}\r\n\r\nexport interface FromTo {\r\n        from: number;\r\n        to: number;\r\n    }\r\n\r\nexport interface FromToString {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nexport interface Time {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n}\r\n\r\nexport interface TimerOptions {\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    time: Time;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    title?: InnerText;\r\n    percentage?: number;\r\n}","import { NeedleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Needle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: NeedleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.options = options;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml(\r\n            {\r\n                type: 'div',\r\n                attrs: {\r\n                    'style': 'position: absolute;z-index: 40;transform-origin: 50% 85%;transform: scale(1.125);transition-duration: .5s; top: -4px;',\r\n                    'data-needle': ''\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'svg',\r\n                        attrs: {\r\n                            'version': '1.1',\r\n                            // 'xmlns': 'http://www.w3.org/2000/svg',\r\n                            // 'xmlns:xlink': 'http://www.w3.org/1999/xlink',\r\n                            'x': '0px',\r\n                            'y': '0px',\r\n                            'viewBox': '0 0 11.5 103.8',\r\n                            // 'xml:space': 'preserve',\r\n                            'style': `enable-background:new 0 0 11.5 103.8;position: relative; margin: auto; display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: 'g',\r\n                                children: [\r\n                                    {\r\n                                        type: 'path',\r\n                                        attrs: {\r\n                                            'd': 'M10.4,95.6c-0.4-0.9-1-1.6-1.7-2.1L5.7,1.3L2.8,93.5c-1.9,1.3-2.6,3.8-1.7,6c1.1,2.5,4,3.8,6.6,2.7C10.2,101.1,11.4,98.2,10.4,95.6z'\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: NeedleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setDiv(this.options);\r\n        this.setSvg(this.options);\r\n    }\r\n\r\n    setDiv(options: NeedleOptions): void {\r\n        let div = this.element;\r\n        let divStyle = this.common.getNeedleStyle(options.radius, options.minMaxVal.value, options.scale);\r\n        div.style.left = divStyle.left;\r\n        div.style.transform = divStyle.transform;\r\n        div.style.transitionDuration = options.animationDuration + 'ms';\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n\r\n    setSvg(options: NeedleOptions): void {\r\n        let svg = this.element.querySelector('svg');\r\n        let svgStyle = this.common.getNeedleInnerStyle(options.radius);\r\n        svg.style.width = svgStyle.width;\r\n        svg.style.height = svgStyle.height;\r\n        // try {\r\n        //     svg.setAttributeNS('http://www.w3.org/2000/svg', 'xmlns', window.location.host);\r\n        //     svg.setAttributeNS('http://www.w3.org/1999/xlink', 'xmlns:xlink', window.location.host);\r\n        //     svg.setAttributeNS('http://www.w3.org/2000/svg', 'xml:space', 'preserve');\r\n        // }\r\n        // catch (e) {\r\n        //     // console.log(e);\r\n        // }\r\n        let path = svg.querySelector('path');\r\n        path.setAttributeNS(null, 'fill', options.color);\r\n        path.style.transitionDuration = options.animationDuration + 'ms';\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}