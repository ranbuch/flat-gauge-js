{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ampm.ts","src/circle.ts","src/common.ts","src/edges.ts","src/icon.ts","src/index.ts","src/interfaces.ts","src/multitune.ts","src/needle.ts","src/range.ts","src/spinner.ts","src/timer.ts","src/tune.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { AmPmOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, NumberData, FromTo } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\n\r\nexport class AmPm {\r\n    private element: any;\r\n    private options: AmPmOptions;\r\n    private common: Common;\r\n    private circleOptionsAm: CircleOptions;\r\n    private circleAm: Circle;\r\n    private circleOptionsPm: CircleOptions;\r\n    private circlePm: Circle;\r\n    private edgesOptionsAm: EdgesOptions;\r\n    private edgesAm: Edges;\r\n    private edgesOptionsPm: EdgesOptions;\r\n    private edgesPm: Edges;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    // private amNumbers: Array<NumberData>;\r\n    // private pmNumbers: Array<NumberData>;\r\n    private minMaxValAm: FromTo;\r\n    private minMaxValPm: FromTo;\r\n    private lower: Array<NumberData>;\r\n    private higher: Array<NumberData>;\r\n\r\n    constructor(element: any, options?: AmPmOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.setMinutes();\r\n\r\n        this.init();\r\n    }\r\n\r\n    setMinutes() {\r\n        let arrFrom = this.options.fromTo.from.split(':');\r\n        let arrTo = this.options.fromTo.to.split(':');\r\n        let fromMinutes = 0, toMinutes = 0, from = null, to = null;\r\n\r\n        if (parseInt(arrFrom[0]) <= 12 || parseInt(arrTo[0]) <= 12) {\r\n            fromMinutes = this.common.getMinutesFromHour(this.options.fromTo.from);\r\n        }\r\n\r\n        if (parseInt(arrFrom[0]) >= 12 || parseInt(arrTo[0]) >= 12) {\r\n            toMinutes = this.common.getMinutesFromHour(this.options.fromTo.to);\r\n        }\r\n        let max = 60 * 12;\r\n\r\n        from = this.common.getMinutesFromStart(this.options.fromTo.from, 0);\r\n        to = this.common.getMinutesFromStart(this.options.fromTo.to, 0);\r\n\r\n        this.minMaxValAm = {\r\n            from: from / max * 100,\r\n            to: Math.min(to / max * 100, 100)\r\n        } as FromTo;\r\n        \r\n        from = this.common.getMinutesFromStart(this.options.fromTo.from, 60 * 12);\r\n        to = this.common.getMinutesFromStart(this.options.fromTo.to, 60 * 12);\r\n\r\n        this.minMaxValPm = {\r\n            from: from / max * 100,\r\n            to: Math.min(to / max * 100, 100)\r\n        } as FromTo;\r\n\r\n        this.lower = [];\r\n        this.higher = [];\r\n\r\n        this.lower.push({\r\n            number: '00',\r\n            isActive: this.common.isHourInRange(this.minMaxValAm, 0),\r\n            remainder: this.common.getRemainder(this.minMaxValAm, 0)\r\n        });\r\n        for (let i = 1; i < 24; i++) {\r\n            if (i < 12) {\r\n                this.lower.push({\r\n                    number: i.toString(),\r\n                    isActive: this.common.isHourInRange(this.minMaxValAm, i),\r\n                    remainder: this.common.getRemainder(this.minMaxValAm, i)\r\n                });\r\n            }\r\n            else {\r\n                this.higher.push({\r\n                    number: i.toString(),\r\n                    isActive: this.common.isHourInRange(this.minMaxValPm, i - 12),\r\n                    remainder: this.common.getRemainder(this.minMaxValAm, i - 12)\r\n                });\r\n            }\r\n        }\r\n\r\n        this.setNeedle();\r\n        setTimeout(() => {\r\n            this.setMinutes();\r\n        }, 60000);\r\n    }\r\n\r\n    setNeedle() {\r\n\r\n        let now = this.common.getHoursAndMinutesLT(new Date());\r\n\r\n        let isAm = now.indexOf('AM') > -1;\r\n\r\n        let relevantHours = isAm ? this.lower : this.higher;\r\n\r\n        // let diameterForNeedle = isAm ? (this.options.radius * 2) - 20 : this.options.radius * 2;\r\n\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (this.edgesOptionsAm && this.edgesOptionsPm)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, (isAm ? this.edgesOptionsAm.hollowEdges : this.edgesOptionsPm.hollowEdges)) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n\r\n        let dateTime = new Date();\r\n        this.needleOptions.minMaxVal.value = this.common.getPercentageByTime(dateTime);\r\n        if (this.needleOptions.minMaxVal.value > 50) {\r\n            \r\n        }\r\n        else {\r\n            this.needleOptions.scale = 0.85;\r\n        }\r\n        this.needleOptions.minMaxVal.value /= 2;\r\n        let index = dateTime.getHours();\r\n        if (index > 11)\r\n            index -= 12;\r\n        if (relevantHours[index].isActive) // TOTO fix with remainder\r\n            this.needleOptions.color = this.options.colors.active;\r\n        else\r\n            this.needleOptions.color = this.options.colors.default;\r\n        \r\n        // for (let i = 0; i < relevantHours.length; i++) {\r\n        //     if (relevantHours[i].isActive) {\r\n        //         let current = (i * (100 / 12)) + relevantHours[i].remainder;\r\n        //         if (this.needleOptions.minMaxVal.min === null)\r\n        //             this.needleOptions.minMaxVal.min = current;\r\n        //         this.needleOptions.minMaxVal.max = current;\r\n        //     }\r\n        // }\r\n\r\n        if (this.needle)\r\n            this.needle.update(this.needleOptions);\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n\r\n        // this.needle = {\r\n        //     minMaxVal: {\r\n        //         min: null,\r\n        //         max: null,\r\n        //         value: this.piService.getCurrentTimePercentage()\r\n        //     },\r\n        //     color: null\r\n        // };\r\n\r\n\r\n\r\n        // this.needleStyleInner = this.common.getNeedleInnerStyle(this.diameter);\r\n        // this.needleStyle = this.piService.getStyleByPercentage(this.diameter, this.niddle.minMaxVal.value, isAm);\r\n        // this.needle.color = this.piService.getColor(this.niddle);\r\n    }\r\n\r\n    // initNumbers(numbers: Array<NumberData>) {\r\n    //     numbers.push({\r\n    //         number: '00',\r\n    //         isActive: this.common.isHourInRange(this.minMaxValAm, 0),\r\n    //         remainder: this.common.getRemainder(this.minMaxValAm, 0)\r\n    //     });\r\n    //     numbers.push({\r\n\r\n    //     });\r\n    //     // this.amNumbers.\r\n    // }\r\n\r\n    init() {\r\n        // this.amNumbers = [];\r\n        // this.initNumbers(this.amNumbers);\r\n\r\n        let innerElem = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': 'position: relative;',\r\n                'data-ampm': ''\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-am-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-pm-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-needle-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        let amWrap = {\r\n            type: 'div',\r\n            attrs: {\r\n                style: 'position: absolute;height: 60px;top: 65px;left: 105px;color: #CBCBCB;font-size: 16px;z-index: 30',\r\n                'data-am-numbers': ''\r\n            },\r\n            children: []\r\n        } as JsonToHtmlElement;\r\n        for (let i = 0; i < this.lower.length; i++) {\r\n            amWrap.children.push({\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `height: 100%;position: absolute;width: 20px;left: 0;top: 0;transform-origin: bottom center;text-align: center;transform: rotate(${i * 30}deg);`,\r\n                    'data-num': i\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'span',\r\n                        attrs: {\r\n                            'style': `transform: rotate(-${i * 30}deg);display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: '#text',\r\n                                text: this.lower[i].number\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        let pmWrap = {\r\n            type: 'div',\r\n            attrs: {\r\n                style: 'position: absolute;height: 110px;color: #CBCBCB;font-size: 16px;',\r\n                'data-pm-numbers': ''\r\n            },\r\n            children: []\r\n        } as JsonToHtmlElement;\r\n        for (let i = 0; i < this.higher.length; i++) {\r\n            pmWrap.children.push({\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `height: 100%;position: absolute;width: 20px;left: 0;top: 0;transform-origin: bottom center;text-align: center;transform: rotate(${i * 30}deg);`,\r\n                    'data-num': i\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'span',\r\n                        attrs: {\r\n                            'style': `transform: rotate(-${i * 30}deg);display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: '#text',\r\n                                text: this.higher[i].number\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.common.jsonToHtml(amWrap));\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.circleAm.getElement());\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.edgesAm.getLeftElement());\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.edgesAm.getRightElement());\r\n\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.common.jsonToHtml(pmWrap));\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.circlePm.getElement());\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.edgesPm.getLeftElement());\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.edgesPm.getRightElement());\r\n\r\n\r\n        innerElem.querySelector('[data-needle-wrap]').appendChild(this.needle.getElement());\r\n\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    setNumbers() {\r\n        let pmNumbers = this.element.querySelector('[data-pm-numbers]');\r\n        if (!pmNumbers) return;\r\n        pmNumbers.style.left = (((this.options.radius * 2) / 1.67) - 30) + 'px';\r\n        pmNumbers.style.top = '-20px';\r\n    }\r\n\r\n    setCircles() {\r\n        let setCircle = (prefix: string) => {\r\n            this['circleOptions' + prefix] = this.common.extend(this.options, this['circleOptions' + prefix], true);\r\n            this['circleOptions' + prefix].indent = 0;\r\n\r\n            this['circleOptions' + prefix].fromDegree = this['minMaxVal' + prefix].from;\r\n            this['circleOptions' + prefix].toDegree = this['minMaxVal' + prefix].to;\r\n\r\n            // this['circleOptions' + prefix].fromDegree = this.options.needleOptions.minMaxVal.min;\r\n            // this['circleOptions' + prefix].toDegree = this.options.needleOptions.minMaxVal.max;\r\n\r\n            this['circleOptions' + prefix].backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!this['circleOptions' + prefix].backgroundColor)\r\n                this['circleOptions' + prefix].backgroundColor = '#fff';\r\n\r\n            if (prefix == 'Am')\r\n                this['circleOptions' + prefix].radius = this.options.radius - (this.options.strokeWidth);\r\n\r\n            if (this['circle' + prefix]) {\r\n                this['circle' + prefix].update(this['circleOptions' + prefix]);\r\n            }\r\n            else\r\n                this['circle' + prefix] = new Circle(this['circleOptions' + prefix]);\r\n        };\r\n\r\n        setCircle('Am');\r\n        setCircle('Pm');\r\n    }\r\n\r\n    setEdges() {\r\n        let setEdge = (prefix: string) => {\r\n            this['edgesOptions' + prefix] = this.common.extend(this.options.needleOptions, this['edgesOptions' + prefix], true);\r\n            this['edgesOptions' + prefix].strokeWidth = this.options.strokeWidth;\r\n            this['edgesOptions' + prefix].color = this.options.colors.active;\r\n            this['edgesOptions' + prefix].hollowEdges = this.options['hollowEdges' + + prefix];\r\n            this['edgesOptions' + prefix].minMaxVal = {\r\n                min: this['minMaxVal' + prefix].from,\r\n                max: this['minMaxVal' + prefix].to\r\n            }\r\n            this['edgesOptions' + prefix].indent = 0;\r\n\r\n            if (this['edges' + prefix])\r\n                this['edges' + prefix].update(this['edgesOptions' + prefix]);\r\n            else\r\n                this['edges' + prefix] = new Edges(this['edgesOptions' + prefix]);\r\n            let allEdges = this.element.querySelectorAll('[data-' + prefix + '-wrap] [data-left-edge],[data-' + prefix + '-wrap] [data-right-edge]');\r\n            if (allEdges.length) {\r\n                let disp = 'inline-block';\r\n                if (!this.options['showEdges' + prefix])\r\n                    disp = 'none';\r\n                for (let i = 0; i < allEdges.length; i++) {\r\n                    allEdges[i].style.display = disp;\r\n                }\r\n            }\r\n        }\r\n\r\n        setEdge('Am');\r\n        setEdge('Pm');\r\n    }\r\n\r\n    public update(options: AmPmOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircles();\r\n        this.setNeedle();\r\n        this.setNumbers();\r\n        this.setEdges();\r\n        this.setNeedle();\r\n    }\r\n\r\n    setWrap(options: AmPmOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n        let topLeftDim = (options.radius / 3.5) + 'px';\r\n\r\n        let amWrap = wrap.querySelector('[data-am-wrap]');\r\n        amWrap.style.top = ((options.radius / 3.5) + (options.strokeWidth * 2)) + 'px';\r\n        amWrap.style.left = ((options.radius / 3.5) + (options.strokeWidth * 2)) + 'px';\r\n        amWrap.style.zIndex = '20';\r\n        // let amCircle = amWrap.querySelector('[data-circle]')\r\n        let amNumbers = amWrap.querySelector('[data-am-numbers');\r\n        amNumbers.style.top = (options.strokeWidth * 3) + 'px';\r\n        amNumbers.style.left = (options.radius - options.strokeWidth * 3) + 'px';\r\n\r\n        let pmWrap = wrap.querySelector('[data-pm-wrap]');\r\n        // let pmCircle = pmWrap.querySelector('[data-circle]')\r\n        pmWrap.style.top = topLeftDim;\r\n        pmWrap.style.left = topLeftDim;\r\n\r\n\r\n\r\n        let nWrap = wrap.querySelector('[data-needle-wrap]');\r\n        nWrap.style.top = topLeftDim;\r\n        nWrap.style.left = ((options.radius / 3.5) + options.radius) + 'px';\r\n\r\n\r\n\r\n    }\r\n\r\n    getDefaultOptions(): AmPmOptions {\r\n        let animationDuration = 500, radius = 88;\r\n        let colors = this.common.getDefaultColors();\r\n        return {\r\n            fromTo: {\r\n                from: '0:0',\r\n                to: '23:60'\r\n            },\r\n            radius: radius,\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            needleOptions: {\r\n                animationDuration: animationDuration,\r\n                color: colors.active,\r\n                radius: radius,\r\n                scale: 1.125,\r\n                minMaxVal: {\r\n                    max: 3,\r\n                    min: 14,\r\n                    value: 14\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n","import { CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Circle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: CircleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.injectCss();\r\n\r\n        this.init();\r\n    }\r\n\r\n    injectCss(): void {\r\n        let className = '_all-gauge-js-circle-style';\r\n        if (document.querySelector('.' + className)) return;\r\n\r\n        let style = `@keyframes allGaugeRotatingCircle {\r\n            from {\r\n                transform: rotate(0deg);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }`;\r\n\r\n        let sheet = document.createElement('style');\r\n        sheet.innerHTML = style;\r\n        sheet.className = className;\r\n        document.body.appendChild(sheet);\r\n    }\r\n\r\n    public update(options: CircleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        if (typeof this.options.indent === 'undefined')\r\n            this.options.indent = 50;\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setSvg(this.options);\r\n        this.setElements(this.options);\r\n    }\r\n\r\n    setSvg(options: CircleOptions): void {\r\n        if (options.toDegree - options.fromDegree == 100)\r\n            options.toDegree -= 0.0001;\r\n        let startAngle = (options.fromDegree - this.options.indent) * 3.6, endAngle = (options.toDegree - this.options.indent) * 3.6;\r\n        let d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n\r\n        let svg = this.element.querySelector('svg');\r\n        let dim = options.radius * 2;\r\n        svg.style.transitionDuration = options.animationDuration;\r\n        svg.style.width = dim + 'px';\r\n        svg.style.height = dim + 'px';\r\n        svg.style.animation = `allGaugeRotatingCircle ${options.rotationSpeed}ms linear infinite`;\r\n        svg.setAttributeNS(null, 'width', dim + 'px');\r\n        svg.setAttributeNS(null, 'height', dim + 'px');\r\n        let path = svg.querySelector('[data-arc]');\r\n        path.setAttributeNS(null, 'stroke', options.colors.active);\r\n        path.setAttributeNS(null, 'stroke-width', options.strokeWidth);\r\n        if (d.indexOf('NaN') == -1)\r\n            path.setAttributeNS(null, 'd', d);\r\n        path.style.strokeWidth = options.strokeWidth + 'px';\r\n        path.style.transitionDuration = options.animationDuration;\r\n\r\n        let concealer = svg.querySelector('[data-concealer]');\r\n        if (options.hideBottom) {\r\n            startAngle = (33.334) * 3.6, endAngle = (66.667) * 3.6;\r\n            d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n            concealer.setAttributeNS(null, 'stroke-width', options.strokeWidth + 2);\r\n            concealer.setAttributeNS(null, 'd', d);\r\n            concealer.style.strokeWidth = (options.strokeWidth + 2) + 'px';\r\n            concealer.style.display = '';\r\n            let bgColor = options.backgroundColor;\r\n            if (!bgColor)\r\n                bgColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!bgColor)\r\n                bgColor = '#ffffff';\r\n            concealer.setAttributeNS(null, 'stroke', bgColor);\r\n        }\r\n        else\r\n            concealer.style.display = 'none';\r\n    }\r\n\r\n    setElements(options: CircleOptions): void {\r\n        // let circle = this.element.querySelector('div[data-circle]');\r\n        let circle = this.element.children[0];\r\n        let dim = this.options.radius * 2 + 'px';\r\n        circle.style.width = dim;\r\n        circle.style.height = dim;\r\n        circle.style.transitionDuration = options.animationDuration;\r\n\r\n        let c1 = circle.querySelector('[data-c1]');\r\n        c1.style.width = dim;\r\n        c1.style.height = dim;\r\n        c1.style.backgroundColor = this.options.colors.inactive;\r\n        c1.style.transitionDuration = options.animationDuration;\r\n        \r\n        let c3 = circle.querySelector('[data-c3]');\r\n        dim = ((options.radius * 2) - (options.strokeWidth * 2)) + 'px';\r\n        c3.style.width = dim;\r\n        c3.style.height = dim;\r\n        c3.style.top = options.strokeWidth + 'px';\r\n        c3.style.left = options.strokeWidth + 'px';\r\n        c3.style.backgroundColor = options.backgroundColor;\r\n        c3.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative; margin: auto; display: block;`,\r\n                'data-circle': 'true'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c1': '',\r\n                                'style': `position: absolute;top: 0; left: 0; z-index: 1; border-radius: 50%;`\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'svg',\r\n                            attrs: {\r\n                                'style': `position: absolute; top: 0;left: 0; z-index: 2; border-radius: unset;`\r\n                            },\r\n                            children: [\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-arc': ''\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-concealer': ''\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c3': '',\r\n                                'style': `position: absolute; z-index: 3; border-radius: 50%;`\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): any {\r\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    describeArc(x: number, y: number, radius: number, startAngle: number, endAngle: number): any {\r\n        var start = this.polarToCartesian(x, y, radius, endAngle);\r\n        var end = this.polarToCartesian(x, y, radius, startAngle);\r\n        var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n        var d = [\r\n            \"M\", start.x, start.y,\r\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n        ].join(\" \");\r\n        return d;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","import { JsonToHtmlElement, RGBA, InnerText, ColorPalette, MinMaxVal, FromTo, Time, SideState } from './interfaces';\r\n\r\nexport class Common {\r\n    static NameSpaceElements: Array<string> = ['svg', 'path', 'g'];\r\n    static xmlns: string = \"http://www.w3.org/2000/svg\";\r\n    // static needleWidthHeightRatio: number = 9.107127839547825;\r\n    static needleWidthHeightRatio: number = 8.69322239126;\r\n    extend(src: any, dest: any, copy?: boolean): any {\r\n        for (let i in src) {\r\n            if (typeof src[i] === 'object') {\r\n                if (dest && dest[i])\r\n                    src[i] = this.extend(src[i], dest[i]);\r\n            }\r\n            else if (typeof dest === 'object' && typeof dest[i] !== 'undefined') {\r\n                src[i] = dest[i];\r\n            }\r\n        }\r\n        if (copy)\r\n            return JSON.parse(JSON.stringify(src));\r\n        return src;\r\n    }\r\n\r\n    jsonToHtml(obj: JsonToHtmlElement): any {\r\n        let elm = null, isNsElem = Common.NameSpaceElements.filter(x => x == obj.type).length > 0;\r\n        if (isNsElem)\r\n            elm = document.createElementNS(Common.xmlns, obj.type);\r\n        else\r\n            elm = document.createElement(obj.type);\r\n        for (var i in obj.attrs) {\r\n            if (isNsElem)\r\n                elm.setAttributeNS(null, i, obj.attrs[i]);\r\n            else\r\n                elm.setAttribute(i, obj.attrs[i]);\r\n        }\r\n        for (let i in obj.children) {\r\n            let newElem = null;\r\n            if (obj.children[i].type == '#text')\r\n                newElem = document.createTextNode(obj.children[i].text);\r\n            else\r\n                newElem = this.jsonToHtml(obj.children[i]);\r\n            if ((newElem && newElem.tagName && newElem.tagName.toLowerCase() !== 'undefined') || newElem.nodeType == 3)\r\n                elm.appendChild(newElem);\r\n        }\r\n        return elm;\r\n    }\r\n\r\n    isHex(str: string): boolean {\r\n        return str.indexOf('#') > -1;\r\n    }\r\n\r\n    isRgba(str: string) {\r\n        return str.split(',').length > 3;\r\n    }\r\n\r\n    toRgbObj(rgba: string): RGBA {\r\n        let arr = rgba.split(',').map((item) => {\r\n            return parseInt(item, 10);\r\n        });\r\n        return {\r\n            Red: arr[0],\r\n            Green: arr[1],\r\n            Blue: arr[2],\r\n            Alpha: arr[3]\r\n        };\r\n    }\r\n\r\n    RgbObjToString(rgba: RGBA): string {\r\n        let ans = '(' + rgba.Red + ',' + rgba.Green + ',' + rgba.Blue;\r\n        if (rgba.Alpha)\r\n            ans += ',' + rgba.Alpha\r\n        ans += ')';\r\n        return ans;\r\n    }\r\n\r\n    hexToRgb(hex: string): RGBA {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m: string, r: string, g: string, b: string) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            Red: parseInt(result[1], 16),\r\n            Green: parseInt(result[2], 16),\r\n            Blue: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    setInnerTextDefaults(innerText?: InnerText): InnerText {\r\n        if (!innerText)\r\n            innerText = {\r\n                text: ''\r\n            };\r\n        if (!innerText.text)\r\n            innerText.text = '';\r\n        if (!innerText.fontSize)\r\n            innerText.fontSize = 18;\r\n        if (!innerText.lineHeight)\r\n            innerText.lineHeight = innerText.fontSize;\r\n        if (!innerText.fontFamily)\r\n            innerText.fontFamily = 'Arial,Utkal,sans-serif';\r\n        if (!innerText.fontWeight)\r\n            innerText.fontWeight = 'normal';\r\n        if (!innerText.letterSpacing)\r\n            innerText.letterSpacing = '0';\r\n        return innerText;\r\n    }\r\n\r\n    getComputedStyleByParentRec(elem: any, cssProp: string): string {\r\n        if (!elem) return null;\r\n        let css = getComputedStyle(elem) as any;\r\n        let val = css[cssProp];\r\n        if (val && val != 'rgba(0, 0, 0, 0)') return val;\r\n        return this.getComputedStyleByParentRec(elem.parentElement, cssProp);\r\n    }\r\n\r\n    // odd strokeWidth is not supported\r\n    fixStrokeWidth(sw: number): number {\r\n        if (sw % 2 == 1)\r\n            console.warn('all-gauge: stroke-width \"' + sw + '\" is not supported (odd), changed to \"' + (++sw)) + '\"';\r\n        return sw;\r\n    }\r\n\r\n    // odd radius is not supported\r\n    fixRadius(r: number): number {\r\n        if (r % 2 == 1)\r\n            console.warn('all-gauge: radius \"' + r + '\" is not supported (odd), changed to \"' + (++r)) + '\"';\r\n        return r;\r\n    }\r\n\r\n    getDefaultColors(): ColorPalette {\r\n        return {\r\n            active: '#4CCEAD',\r\n            default: '#505050',\r\n            inactive: '#ededed'\r\n        };\r\n    }\r\n\r\n    getNeedleInnerStyle(radius: number): any {\r\n        return {\r\n            'height': (radius + 20) + 'px',\r\n            'width': (radius / Common.needleWidthHeightRatio) + 'px'\r\n        };\r\n    }\r\n\r\n    getNeedleStyle(radius: number, arcNeedlePercentage: number, scale: number, indent: number = 50) {\r\n        if (typeof scale !== 'number')\r\n            scale = 1.125;\r\n        let deg = (arcNeedlePercentage - indent) * 3.6;\r\n        return {\r\n            'left': 'calc(50% - ' + ((radius / Common.needleWidthHeightRatio)) / 2 + 'px',\r\n            'transform': 'rotate(' + deg + 'deg) scale(' + scale + ')'\r\n        };\r\n    }\r\n\r\n    isInRange(minMaxVal: MinMaxVal, sides: SideState) {\r\n        switch (sides) {\r\n            case SideState.Both: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n            case SideState.None: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Left: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Right: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    normalizeByPercentage(value: number, percentage: number, mid?: number, max?: number): number {\r\n        if (typeof mid === 'undefined')\r\n            mid = 50;\r\n        if (typeof max === 'undefined')\r\n            max = mid * 2;\r\n        let rel = null;\r\n\r\n        if (value > mid) {\r\n            percentage /= 2;\r\n            rel = Math.abs(mid - value);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value * (1 - percentage);\r\n        }\r\n        else {\r\n            if (value == 0.0)\r\n                value = 0.001;\r\n            rel = Math.abs(value - mid);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value + (mid * (percentage));\r\n        }\r\n    }\r\n\r\n    getRemainder(range: FromTo, hour: number) {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) {\r\n            return current - range.from;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isHourInRange(range: FromTo, hour: number): boolean {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) return true;\r\n        return false;\r\n    }\r\n\r\n    getPercentageByTime(dateTime: Date): number {\r\n        let secondsInADay = 86400; //24 * 60 * 60;\r\n        let hours = dateTime.getHours() * 3600; //60 * 60;\r\n        let minutes = dateTime.getMinutes() * 60;\r\n        let seconds = dateTime.getSeconds();\r\n        let totalSeconds = hours + minutes + seconds;\r\n        let percentSeconds = 100 * totalSeconds / secondsInADay;\r\n        return percentSeconds;\r\n        // let max = 86400000; // 1000 * 60 * 60 * 24 is the number of milliseconds on a 24 hours day.\r\n        // let hours = dateTime.getHours();\r\n        // let minutes = dateTime.getMinutes();\r\n        // let seconds = dateTime.getSeconds();\r\n        // let total = (hours * 1000 * 60 * 60) + (minutes * 1000 * 60) + (seconds * 1000);\r\n        // let percentage = total / max;\r\n        // return percentage * 100;\r\n    }\r\n\r\n    getMinutesFromHour(hour: string) {\r\n        let arr = hour.split(':');\r\n        return parseInt(arr[0].trim()) * 60 + parseInt(arr[1].trim());\r\n    }\r\n\r\n    getMinutesFromStart(hour: string, start = 0) {\r\n        let arr = hour.split(':');\r\n        return Math.max((parseInt(arr[0].trim()) * 60 + (parseInt(arr[1].trim()))) - start, 0);\r\n    }\r\n\r\n    getHoursAndMinutesLT(date: Date): string {\r\n        let hours = date.getHours();\r\n        hours = (hours + 24 - 2) % 24;\r\n        let mid = 'am';\r\n        if (hours == 0) { //At 00 hours we need to show 12 am\r\n            hours = 12;\r\n        }\r\n        else if (hours > 12) {\r\n            hours = hours % 12;\r\n            mid = 'pm';\r\n        }\r\n        return hours + ':' + date.getMinutes() + ' ' + mid;\r\n    }\r\n\r\n    getSecondsFromTime(timer: Time): number {\r\n        let hours = 0;\r\n        hours += timer.hours * 3600;\r\n        hours += timer.minutes * 60;\r\n        hours += timer.seconds;\r\n        return hours;\r\n    }\r\n\r\n    setTimeToZero(timer: Time): void {\r\n        timer.hours = 0;\r\n        timer.minutes = 0;\r\n        timer.seconds = 0;\r\n    }\r\n\r\n    decreaseTime(timer: Time): boolean {\r\n        if (timer.seconds > 0) {\r\n            if (--timer.seconds < 0) {\r\n                timer.seconds = 59;\r\n                if (--timer.minutes < 0) {\r\n                    timer.minutes = 59;\r\n                    if (--timer.hours < 0) {\r\n                        this.setTimeToZero(timer);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (timer.minutes > 0) {\r\n            timer.seconds = 59;\r\n            if (--timer.minutes < 0) {\r\n                timer.minutes = 59;\r\n                if (--timer.hours < 0) {\r\n                    this.setTimeToZero(timer);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (timer.hours > 0) {\r\n            timer.minutes = 59;\r\n            if (--timer.hours < 0) {\r\n                this.setTimeToZero(timer);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.isTimeZero(timer)) {\r\n            this.setTimeToZero(timer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTimeZero(timer: Time): boolean {\r\n        if (timer.hours <= 0 && timer.minutes <= 0 && timer.seconds <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    padWithZiro(text: string) {\r\n        if (String(text).length < 2)\r\n            text = '0' + text;\r\n        return text;\r\n    }\r\n\r\n    getSideStateByString(state: string): SideState {\r\n        if (!state) return SideState.None;\r\n        switch (state.toLowerCase()) {\r\n            case 'left':\r\n                return SideState.Left;\r\n            case 'right':\r\n                return SideState.Right;\r\n            case 'both':\r\n                return SideState.Both;\r\n            case 'none':\r\n                return SideState.None;\r\n            default:\r\n                return SideState.None\r\n        }\r\n    }\r\n}","import { EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Edges {\r\n    private leftElement: any;\r\n    private rightElement: any;\r\n    private common: Common;\r\n\r\n    static AddToEdge: number = 4;\r\n    static AddToEdgeHeight: number = 4;\r\n\r\n    constructor(private options?: EdgesOptions) {\r\n        this.common = new Common();\r\n\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        this.options = this.common.extend(defaultOptions, options);\r\n        \r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): EdgesOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500;\r\n        return {\r\n            color: colors.active,\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            radius: defRadius,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            hollowEdges: SideState.None,\r\n            backgroundColor: '#ffffff',\r\n            indent: 50\r\n        } as EdgesOptions;\r\n    }\r\n\r\n    init() {\r\n        this.leftElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-left-edge': ''\r\n                }\r\n            });\r\n\r\n        this.rightElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-right-edge': ''\r\n                }\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: EdgesOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions() {\r\n        this.setSpans(this.options);\r\n    }\r\n\r\n    setSpans(options: EdgesOptions) {\r\n        let height = (options.strokeWidth + Edges.AddToEdge + Edges.AddToEdgeHeight) + 'px';\r\n        let top = 'calc(50% - ' + ((options.strokeWidth / 2) + (Edges.AddToEdge / 2) + (Edges.AddToEdgeHeight / 2)) + 'px)';\r\n        let leftStyle = 'calc(50% - ' + (Edges.AddToEdge / 2) + 'px)';\r\n\r\n        // let bgColor = this.common.getComputedStyleByParentRec(this.leftElement, 'backgroundColor');\r\n        // if (!bgColor)\r\n        let bgColor = this.options.backgroundColor;\r\n\r\n        let left = this.leftElement;\r\n        left.style.height = height;\r\n        left.style.top = top;\r\n        left.style.left = leftStyle;\r\n        left.style.backgroundColor = options.color;\r\n        left.style.transitionDuration = options.animationDuration + 'ms';\r\n        // left.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Left || options.hollowEdges == SideState.Both) {\r\n            left.style.border = 'solid 1px ' + options.color;\r\n            left.style.backgroundColor = bgColor;\r\n            // left.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // left.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let right = this.rightElement;\r\n        right.style.height = height;\r\n        right.style.top = top;\r\n        right.style.left = leftStyle;\r\n        right.style.backgroundColor = options.color;\r\n        right.style.transitionDuration = options.animationDuration + 'ms';\r\n        // right.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Right || options.hollowEdges == SideState.Both) {\r\n            right.style.border = 'solid 1px ' + options.color;\r\n            right.style.backgroundColor = bgColor;\r\n            // right.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // right.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let scalar = options.radius - (options.strokeWidth / 2), xVectorLeft, yVectorLeft, xVectorRight, yVectorRight;\r\n        let degLeft = (options.minMaxVal.min - this.options.indent) * 3.6;\r\n        let degRight = (options.minMaxVal.max - this.options.indent) * 3.6;\r\n        xVectorLeft = Math.sin(degLeft * (Math.PI / 180)) * scalar;\r\n        yVectorLeft = -Math.cos(degLeft * (Math.PI / 180)) * scalar;\r\n        left.style.transform = `translate3d(${xVectorLeft}px, ${yVectorLeft}px, 0) rotate(${degLeft}deg)`;\r\n        xVectorRight = Math.sin(degRight * (Math.PI / 180)) * scalar;\r\n        yVectorRight = -Math.cos(degRight * (Math.PI / 180)) * scalar;\r\n        right.style.transform = `translate3d(${xVectorRight}px, ${yVectorRight}px, 0) rotate(${degRight}deg)`;\r\n    }\r\n\r\n    public getLeftElement(): any {\r\n        return this.leftElement;\r\n    }\r\n\r\n    public getRightElement(): any {\r\n        return this.rightElement;\r\n    }\r\n}","import { IconOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Icon {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: IconOptions) {\r\n        this.common = new Common();\r\n\r\n        this.options = options;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml(\r\n            {\r\n                type: 'img',\r\n                attrs: {\r\n                    'style': 'position: absolute;z-index: 15;display: inline-block;',\r\n                    'data-icon': ''\r\n                }\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: IconOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions() {\r\n        this.setImage(this.options);\r\n    }\r\n\r\n    setImage(options: IconOptions) {\r\n        let image = this.element;\r\n        image.style.width = options.dimensions.width + 'px';\r\n        image.style.height = options.dimensions.height + 'px';\r\n        if (typeof options.top === 'undefined')\r\n            options.top = 0;\r\n        if (typeof options.left === 'undefined')\r\n            options.left = 0;\r\n      \r\n\t    let deg = (options.degree - 50) * 3.6;\r\n\t    let scalar = options.radius + options.radiusOffset;\r\n\t\r\n        let xVector = Math.sin(deg * (Math.PI / 180)) * scalar;\r\n        let yVector = -Math.cos(deg * (Math.PI / 180)) * scalar;\r\n\r\n        image.style.left = ((options.dimensions.width / -2) + options.radius + xVector) + 'px';\r\n        image.style.top = ((options.dimensions.height / -2) + options.radius + yVector) + 'px';\r\n       \r\n        image.style.transitionDuration = '0ms';\r\n        image.style.opacity = options.opacity;\r\n        image.src = options.src;\r\n        if (options.src)\r\n            image.style.display = 'inline-block';\r\n        else\r\n            image.style.display = 'none';\r\n\r\n        image.style.transform = `rotate(${deg}deg)`;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","export { TuneOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions,\r\n    IconOptions, SideState, AmPmOptions, ColorPalette, FromTo, FromToString, InnerText,\r\n    MinMaxVal, MultituneOptions, NumberData, RangeOptions, RGBA, SpinnerOptions, Time,\r\n    TimerOptions } from './interfaces';\r\nexport { AmPm } from './ampm';\r\nexport { MultiTune } from './multitune';\r\nexport { Range } from './range';\r\nexport { Spinner } from './spinner';\r\nexport { Timer } from './timer';\r\nexport { Tune } from './tune';","export interface ColorPalette {\r\n    default: string;\r\n    active: string;\r\n    inactive: string;\r\n}\r\n\r\nexport interface CircleOptions {\r\n    colors?: ColorPalette;\r\n    fromDegree?: number;\r\n    toDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    animationDuration?: number;\r\n    backgroundColor?: string;\r\n    hideBottom: boolean;\r\n    indent?: number;\r\n}\r\n\r\nexport interface SpinnerOptions {\r\n    colors?: ColorPalette;\r\n    activeDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    title?: InnerText;\r\n    animationDuration?: number;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport interface InnerText {\r\n    text: string;\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    lineHeight?: number;\r\n    fontWeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport interface JsonToHtmlElement {\r\n    type: string;\r\n    text?: string;\r\n    attrs?: any;\r\n    children?: Array<JsonToHtmlElement>;\r\n}\r\n\r\nexport interface RGBA {\r\n    Red: number;\r\n    Green: number;\r\n    Blue: number;\r\n    Alpha?: number;\r\n}\r\n\r\nexport interface MinMaxVal {\r\n    min: number;\r\n    max: number;\r\n    value?: number;\r\n}\r\n\r\nexport interface NeedleOptions {\r\n    color: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    scale: number;\r\n    animationDuration?: number;\r\n    disabled?: boolean;\r\n    indent?: number;\r\n}\r\n\r\nexport interface TuneOptions {\r\n    needleOptions?: NeedleOptions;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    // title?: InnerText;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n}\r\n\r\n// export interface MinMaxEdge {\r\n//     minMaxVal: MinMaxVal;\r\n//     leftEdges?: SinngleSideState;\r\n//     rightEdges?: SinngleSideState;\r\n//     bgColor: string;\r\n// }\r\n\r\nexport interface MultituneOptions {\r\n    needleOptions: NeedleOptions;\r\n    segments: Array<MinMaxVal>;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface RangeOptions {\r\n    colors?: ColorPalette;\r\n    minMaxVal: MinMaxVal;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    hideBottom: boolean;\r\n    title?: InnerText;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport enum SideState {\r\n    None,\r\n    Left,\r\n    Right,\r\n    Both,\r\n}\r\n\r\n// export enum SinngleSideState {\r\n//     None,\r\n//     Hollow,\r\n//     Full,\r\n// }\r\n\r\nexport interface EdgesOptions {\r\n    color: string;\r\n    backgroundColor?: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    strokeWidth: number;\r\n    animationDuration?: number;\r\n    hollowEdges?: SideState;\r\n    indent?: number;\r\n}\r\n\r\nexport interface IconOptions {\r\n    degree: number;\r\n    radius: number;\r\n\tradiusOffset?: number;\r\n    animationDuration?: number;\r\n    src: string;\r\n    dimensions: {\r\n        width: number;\r\n        height: number;\r\n    },\r\n    top?: number;\r\n    left?: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface NumberData {\r\n        number: string;\r\n        isActive: boolean;\r\n        remainder: number;\r\n    }\r\n\r\nexport interface AmPmOptions {\r\n    fromTo: FromToString;\r\n    needleOptions?: NeedleOptions;\r\n    colors?: ColorPalette;\r\n    radius: number;\r\n    minMaxValAm?: MinMaxVal;\r\n    minMaxValPm?: MinMaxVal;\r\n    animationDuration?: number;\r\n    strokeWidth?: number;\r\n    hollowEdgesAm?: SideState;\r\n    hollowEdgesPm?: SideState;\r\n    showEdgesAm?: boolean;\r\n    showEdgesPm?: boolean;\r\n}\r\n\r\nexport interface FromTo {\r\n        from: number;\r\n        to: number;\r\n    }\r\n\r\nexport interface FromToString {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nexport interface Time {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n}\r\n\r\nexport interface TimerOptions {\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    time: Time;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    title?: InnerText;\r\n    percentage?: number;\r\n}","import { MultituneOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, IconOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\nimport { Icon } from './icon';\r\n\r\nexport class MultiTune {\r\n    private element: any;\r\n    private options: MultituneOptions;\r\n    private common: Common;\r\n    private circlesOptions: Array<CircleOptions>;\r\n    private circles: Array<Circle>;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    private iconOptions: IconOptions;\r\n    private icon: Icon;\r\n    constructor(element: any, options?: MultituneOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        // if we're hiding bottom we should take thoes values in to considuration\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.needleOptions.minMaxVal.max = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.max, portionToHide);\r\n            this.options.needleOptions.minMaxVal.min = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.min, portionToHide);\r\n            this.options.needleOptions.minMaxVal.value = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.value, portionToHide);\r\n            if (this.options.iconOptions && typeof this.options.iconOptions.degree === 'number')\r\n                this.options.iconOptions.degree = this.common.normalizeByPercentage(this.options.iconOptions.degree, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-multi-tune': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.updateOptions(false);\r\n\r\n        // this.extractEdgesFromCircles();\r\n\r\n        for (let i = 0; i < this.circles.length; i++) {\r\n            let c =  this.circles[i].getElement();\r\n            innerElem.appendChild(c);\r\n            if (i == 1) {\r\n                c.style.position = 'absolute';\r\n                c.style.top= '0';\r\n            }\r\n            // innerElem.appendChild(this.edges[i].getLeftElement());\r\n            // innerElem.appendChild(this.edges[i].getRightElement());\r\n        }\r\n        \r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        innerElem.appendChild(this.needle.getElement());\r\n        innerElem.appendChild(this.icon.getElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: MultituneOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    // extractEdgesFromCircles() {\r\n    // this.edges = [];\r\n    // this.edgesOptions = [];\r\n    // for (let i = 0; i < this.circles.length; i++) {\r\n    //     this.edgesOptions[i].hollowEdges = SideState.Both;\r\n    //     this.edgesOptions[i] = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n    //     this.edgesOptions = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n    //     this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n    //     this.edgesOptions.color = this.options.colors.active;\r\n    //     this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n    //     this.edgesOptions.backgroundColor = this.options.hollowEdgesBgColor;\r\n\r\n    // }\r\n    // this.circles.forEach((c) => {\r\n\r\n\r\n\r\n\r\n    //     this.edges = new Edges(this.edgesOptions);\r\n    //     this.edgesOptions.push({\r\n\r\n    //     });\r\n    //     innerElem.appendChild(c.getElement());\r\n    // });\r\n    // }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircles();\r\n        this.setNeedle();\r\n        this.setEdges();\r\n        this.setIcon();\r\n    }\r\n\r\n    setWrap(options: MultituneOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): MultituneOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500, bgColor = '#ffffff';\r\n        return {\r\n            needleOptions: {\r\n                minMaxVal: {\r\n                    min: 30,\r\n                    max: 70,\r\n                    value: 55\r\n                },\r\n                color: colors.active,\r\n                scale: 1.125,\r\n                radius: defRadius,\r\n                animationDuration: animationDuration,\r\n                disabled: false\r\n            },\r\n            segments: [\r\n                {\r\n                    // minMaxVal: {\r\n                    min: 0,\r\n                    max: 37.5\r\n                    // }\r\n                    // ,\r\n                    // leftEdges: SinngleSideState.None,\r\n                    // rightEdges: SinngleSideState.Hollow,\r\n                    // bgColor: bgColor\r\n                },\r\n                {\r\n                    // minMaxVal: {\r\n                    min: 62.5,\r\n                    max: 100\r\n                    // },\r\n                    // leftEdges: SinngleSideState.Hollow,\r\n                    // rightEdges: SinngleSideState.None,\r\n                    // bgColor: bgColor\r\n                }\r\n            ],\r\n            iconOptions: {\r\n                animationDuration: animationDuration,\r\n                degree: 50,\r\n                radius: defRadius,\r\n                radiusOffset: 0,\r\n                src: '',\r\n                dimensions: {\r\n                    width: 25,\r\n                    height: 25\r\n                },\r\n                top: 0,\r\n                left: 0,\r\n                opacity: 1\r\n            },\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            radius: defRadius,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            hideBottom: true,\r\n            backgroundColor: bgColor,\r\n            hollowEdgesBgColor: bgColor\r\n        } as MultituneOptions;\r\n    }\r\n\r\n    setCircles() {\r\n        let exist = true;\r\n        if (!(this.circles instanceof Array)) {\r\n            exist = false;\r\n            this.circles = [];\r\n            this.circlesOptions = [];\r\n        }\r\n        for (let i = 0; i < this.options.segments.length; i++) {\r\n            if (exist)\r\n                this.circlesOptions[i] = this.common.extend(this.options, this.circlesOptions[i]);\r\n            else\r\n                this.circlesOptions[i] = this.common.extend(this.options, {});\r\n            \r\n\r\n            if (i == 0) {\r\n                this.circlesOptions[i].fromDegree = 0;\r\n                this.circlesOptions[i].toDegree = this.options.needleOptions.minMaxVal.min;\r\n            }\r\n            if (i == 1) {\r\n                this.circlesOptions[i].fromDegree = this.options.needleOptions.minMaxVal.max;\r\n                this.circlesOptions[i].toDegree = 100;\r\n            }\r\n            \r\n\r\n            this.circlesOptions[i].backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!this.circlesOptions[i].backgroundColor)\r\n                this.circlesOptions[i].backgroundColor = '#fff';\r\n\r\n            if (exist)\r\n                this.circles[i].update(this.circlesOptions[i]);\r\n            else\r\n                this.circles[i] = new Circle(this.circlesOptions[i]);\r\n        }\r\n    }\r\n\r\n    setNeedle() {\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (!this.options.needleOptions.color)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, this.options.hollowEdges) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n        else if (this.options.hideBottom) {\r\n            if (this.options.needleOptions.minMaxVal.value >= 83.34 || this.options.needleOptions.minMaxVal.value <= 16.67)\r\n                this.needleOptions.color = this.options.colors.inactive;\r\n        }\r\n\r\n        if (this.needle) {\r\n            this.needle.update(this.needleOptions);\r\n        }\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        this.edgesOptions.backgroundColor = this.options.hollowEdgesBgColor;\r\n\r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n\r\n    setIcon() {\r\n        this.iconOptions = this.common.extend(this.options.iconOptions, this.iconOptions);\r\n\r\n        if (this.icon)\r\n            this.icon.update(this.iconOptions);\r\n        else\r\n            this.icon = new Icon(this.iconOptions);\r\n        let image = this.element.querySelector('[data-icon]');\r\n        if (image) {\r\n            if (!this.options.showIcon || !this.iconOptions.src)\r\n                image.style.display = 'none';\r\n            else\r\n                image.style.display = 'inline-block';\r\n        }\r\n    }\r\n}","import { NeedleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Needle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: NeedleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.options = options;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml(\r\n            {\r\n                type: 'div',\r\n                attrs: {\r\n                    'style': 'position: absolute;z-index: 40;transform-origin: 50% 85%;transform: scale(1.125);transition-duration: .5s; top: -4px;',\r\n                    'data-needle': ''\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'svg',\r\n                        attrs: {\r\n                            'version': '1.1',\r\n                            // 'xmlns': 'http://www.w3.org/2000/svg',\r\n                            // 'xmlns:xlink': 'http://www.w3.org/1999/xlink',\r\n                            'x': '0px',\r\n                            'y': '0px',\r\n                            'viewBox': '0 0 11.5 103.8',\r\n                            // 'xml:space': 'preserve',\r\n                            'style': `enable-background:new 0 0 11.5 103.8;position: relative; margin: auto; display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: 'g',\r\n                                children: [\r\n                                    {\r\n                                        type: 'path',\r\n                                        attrs: {\r\n                                            'd': 'M10.4,95.6c-0.4-0.9-1-1.6-1.7-2.1L5.7,1.3L2.8,93.5c-1.9,1.3-2.6,3.8-1.7,6c1.1,2.5,4,3.8,6.6,2.7C10.2,101.1,11.4,98.2,10.4,95.6z'\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: NeedleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setDiv(this.options);\r\n        this.setSvg(this.options);\r\n    }\r\n\r\n    setDiv(options: NeedleOptions): void {\r\n        let div = this.element;\r\n        let divStyle = this.common.getNeedleStyle(options.radius, options.minMaxVal.value, options.scale, options.indent);\r\n        div.style.left = divStyle.left;\r\n        div.style.transform = divStyle.transform;\r\n        div.style.transitionDuration = options.animationDuration + 'ms';\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n\r\n    setSvg(options: NeedleOptions): void {\r\n        let svg = this.element.querySelector('svg');\r\n        let svgStyle = this.common.getNeedleInnerStyle(options.radius);\r\n        svg.style.width = svgStyle.width;\r\n        svg.style.height = svgStyle.height;\r\n        // try {\r\n        //     svg.setAttributeNS('http://www.w3.org/2000/svg', 'xmlns', window.location.host);\r\n        //     svg.setAttributeNS('http://www.w3.org/1999/xlink', 'xmlns:xlink', window.location.host);\r\n        //     svg.setAttributeNS('http://www.w3.org/2000/svg', 'xml:space', 'preserve');\r\n        // }\r\n        // catch (e) {\r\n        //     // console.log(e);\r\n        // }\r\n        let path = svg.querySelector('path');\r\n        path.setAttributeNS(null, 'fill', options.color);\r\n        path.style.transitionDuration = options.animationDuration + 'ms';\r\n    }\r\n}","import { RangeOptions, CircleOptions, JsonToHtmlElement, EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Edges } from './edges';\r\n\r\nexport class Range {\r\n    private element: any;\r\n    private options: RangeOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    constructor(element: any, options?: RangeOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.minMaxVal.max = this.common.normalizeByPercentage(this.options.minMaxVal.max, portionToHide);\r\n            this.options.minMaxVal.min = this.common.normalizeByPercentage(this.options.minMaxVal.min, portionToHide);\r\n            this.options.minMaxVal.value = this.common.normalizeByPercentage(this.options.minMaxVal.value, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-range': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        this.updateOptions(false);\r\n\r\n        \r\n\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        \r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: RangeOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setTitle(this.options);\r\n        this.setCircle();\r\n        this.setEdges();\r\n    }\r\n\r\n    setTitle(options: RangeOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        if (!h4) return;\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        h4.style.top = 'calc(50% - ' + (options.title.lineHeight / 2) + 'px)';\r\n    }\r\n\r\n    setWrap(options: RangeOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): RangeOptions {\r\n        return {\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            colors: this.common.getDefaultColors(),\r\n            strokeWidth: 6,\r\n            animationDuration: 500,\r\n            radius: 88,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            hideBottom: true,\r\n            highlight: false\r\n        } as RangeOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        \r\n        this.circleOptions.fromDegree = this.options.minMaxVal.min;\r\n        this.circleOptions.toDegree = this.options.minMaxVal.max;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        \r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n}","import { SpinnerOptions, JsonToHtmlElement, RGBA, InnerText, CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\n\r\nexport class Spinner {\r\n    private element: any;\r\n    private options: SpinnerOptions;\r\n    private circleOptions: CircleOptions;\r\n    private common: Common;\r\n    private circle: Circle;\r\n    constructor(element: any, options?: SpinnerOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): SpinnerOptions {\r\n        return {\r\n            colors: this.common.getDefaultColors(),\r\n            activeDegree: 10,\r\n            radius: 88,\r\n            strokeWidth: 6,\r\n            rotationSpeed: 5000,\r\n            animationDuration: 500,\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            highlight: false\r\n        } as SpinnerOptions;\r\n    }\r\n\r\n    public update(options: SpinnerOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setTitle(this.options);\r\n        this.setDiv(this.options);\r\n        this.setCircle();\r\n    }\r\n\r\n    setTitle(options: SpinnerOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        // h4.style.top = ((options.radius) - (options.title.fontSize / 2)) + 'px';\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        // setTimeout(() => {\r\n        //     let h = parseInt(getComputedStyle(h4).height.replace('px', ''));\r\n        //     if (!isNaN(h))\r\n        //         h4.style.top = ((options.radius) - (h / 2)) + 'px';\r\n        // }, 10);\r\n    }\r\n\r\n    setDiv(options: SpinnerOptions) {\r\n        let div = this.element.querySelector('div[data-spinner]');\r\n        let dim = options.radius * 2 + 'px';\r\n        div.style.width = dim;\r\n        div.style.height = dim;\r\n        div.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        \r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n        \r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative;`,\r\n                'data-spinner': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.setCircle();\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        this.circleOptions.fromDegree = -this.options.activeDegree / 2;\r\n        this.circleOptions.toDegree = this.options.activeDegree / 2;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle) {\r\n            this.circle.update(this.circleOptions);\r\n        }\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n}","import { TimerOptions, JsonToHtmlElement, CircleOptions, EdgesOptions } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Edges } from './edges';\r\n\r\nexport class Timer {\r\n    private element: any;\r\n    private options: TimerOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    private fullSeconds: number;\r\n    private isRunning: boolean;\r\n    private lastInterval: number;\r\n    constructor(element: any, options?: TimerOptions) {\r\n        this.isRunning = true;\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n        if (typeof this.options.percentage === 'number') {\r\n            if (this.options.percentage > 100)\r\n                this.options.percentage = 100;\r\n            else if (this.options.percentage < 0)\r\n                this.options.percentage = 0;\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let currentSeconds = this.common.getSecondsFromTime(this.options.time);\r\n        this.fullSeconds = currentSeconds * 100 / this.options.percentage;\r\n\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': 'position: absolute;z-index: 10;text-align: center;width: 100%;top: 50%;transform: translateY(-50%);transition-property: color;left: 0; margin: 0;'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-clock': ''\r\n                    },\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-number': ''\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            children: [\r\n                                {\r\n                                    type: '#text',\r\n                                    text: ':'\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-number': ''\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            children: [\r\n                                {\r\n                                    type: '#text',\r\n                                    text: ':'\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-number': ''\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-text': ''\r\n                    }\r\n                }\r\n            ]\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative;`,\r\n                'data-spinner': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n\r\n        this.lastInterval = Date.now();\r\n        setTimeout(() => {\r\n            this.updateTimer();\r\n        }, 1000);\r\n    }\r\n\r\n    public update(options: TimerOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updatePercentage();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updatePercentage() {\r\n        this.options.percentage = this.common.getSecondsFromTime(this.options.time) / this.fullSeconds * 100;\r\n        if (isNaN(this.options.percentage) || this.options.percentage < 0)\r\n            this.options.percentage = 0;\r\n    }\r\n\r\n    updateTimer() {\r\n        if (!this.isRunning) return;\r\n        this.updatePercentage();\r\n        if (this.common.decreaseTime(this.options.time)) {\r\n            // TODO time is up!\r\n            // this.status = 'Time is up!';\r\n            // return this.mode = '';\r\n        }\r\n        else if (this.element.parentElement) { // check if element is still in DOM\r\n            const now = Date.now();\r\n            const accurate = 1000 + (this.lastInterval - now);\r\n            setTimeout(() => {\r\n                this.updateTimer();\r\n            }, accurate + 1000);\r\n            this.lastInterval = now;\r\n        }\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap) {\r\n            this.setWrap(this.options);\r\n            this.setTitle(this.options);\r\n        }\r\n        this.setCircle();\r\n        this.setEdges();\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options, this.edgesOptions);\r\n        this.edgesOptions.minMaxVal = {\r\n            min: this.circleOptions.fromDegree,\r\n            max: this.circleOptions.toDegree,\r\n            value: this.options.percentage\r\n        }\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n\r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n\r\n    setWrap(options: TimerOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    setTitle(options: TimerOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        h4.style.color = options.percentage == 0 ? options.colors.active : options.colors.default;\r\n        // h4.style.top = ((options.radius) - (options.title.fontSize / 2)) + 'px';\r\n        h4.style.top = '50%';\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        let spans = h4.querySelectorAll('[data-clock] span[data-number]');\r\n        spans.forEach((element: any) => {\r\n            element.style.color = options.colors.default;\r\n        });\r\n        if (options.percentage > 0) {\r\n            h4.querySelector('[data-clock]').style.display = 'block';\r\n            spans[0].textContent = this.common.padWithZiro(options.time.hours.toString());\r\n            spans[1].textContent = this.common.padWithZiro(options.time.minutes.toString());\r\n            spans[2].textContent = this.common.padWithZiro(options.time.seconds.toString());\r\n            h4.querySelector('[data-text]').textContent = '';\r\n        }\r\n        else {\r\n            h4.querySelector('[data-clock]').style.display = 'none';\r\n            h4.querySelector('[data-text]').textContent = options.title.text;\r\n        }\r\n        // setTimeout(() => {\r\n        //     let h = parseInt(getComputedStyle(h4).height.replace('px', ''));\r\n        //     if (!isNaN(h))\r\n        //         h4.style.top = ((options.radius) - (h / 2)) + 'px';\r\n        // }, 10);\r\n    }\r\n\r\n    getDefaultOptions(): TimerOptions {\r\n        return {\r\n            colors: this.common.getDefaultColors(),\r\n            radius: 88,\r\n            strokeWidth: 6,\r\n            animationDuration: 500,\r\n            title: {\r\n                text: 'time is up!',\r\n                fontSize: 18,\r\n                fontWeight: 'bold',\r\n                letterSpacing: '1px'\r\n            },\r\n            time: {\r\n                hours: 3,\r\n                minutes: 24,\r\n                seconds: 42\r\n            },\r\n            percentage: 100,\r\n            showEdges: true\r\n        } as TimerOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        this.circleOptions.fromDegree = 50;\r\n        this.circleOptions.toDegree = this.options.percentage + 50;\r\n\r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n\r\n    pause() {\r\n        this.isRunning = false;\r\n    }\r\n\r\n    play() {\r\n        this.isRunning = true;\r\n    }\r\n}","import { TuneOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, IconOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\nimport { Icon } from './icon';\r\n\r\nexport class Tune {\r\n    private element: any;\r\n    private options: TuneOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    private iconOptions: IconOptions;\r\n    private icon: Icon;\r\n    constructor(element: any, options?: TuneOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        // this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        // if we're hiding bottom we should take thoes values in to considuration\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.needleOptions.minMaxVal.max = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.max, portionToHide);\r\n            this.options.needleOptions.minMaxVal.min = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.min, portionToHide);\r\n            this.options.needleOptions.minMaxVal.value = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.value, portionToHide);\r\n            if (this.options.iconOptions && typeof this.options.iconOptions.degree === 'number')\r\n                this.options.iconOptions.degree = this.common.normalizeByPercentage(this.options.iconOptions.degree, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-tune': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.needle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        innerElem.appendChild(this.icon.getElement());\r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: TuneOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircle();\r\n        this.setNeedle();\r\n        this.setEdges();\r\n        this.setIcon();\r\n    }\r\n\r\n    setWrap(options: TuneOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): TuneOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500;\r\n        return {\r\n            needleOptions: {\r\n                minMaxVal: {\r\n                    min: 30,\r\n                    max: 70,\r\n                    value: 55\r\n                },\r\n                color: colors.active,\r\n                scale: 1.125,\r\n                radius: defRadius,\r\n                animationDuration: animationDuration,\r\n                disabled: false\r\n            },\r\n            iconOptions: {\r\n                animationDuration: animationDuration,\r\n                degree: 50,\r\n                radius: defRadius,\r\n\t\t\t\tradiusOffset: 0,\r\n                src: '',\r\n                dimensions: {\r\n                    width: 25,\r\n                    height: 25\r\n                },\r\n                top: 0,\r\n                left: 0,\r\n                opacity: 1\r\n            },\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            radius: defRadius,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            // title: this.common.setInnerTextDefaults(),\r\n            hideBottom: true,\r\n            backgroundColor: '#ffffff',\r\n            hollowEdgesBgColor: '#ffffff'\r\n        } as TuneOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        \r\n        this.circleOptions.fromDegree = this.options.needleOptions.minMaxVal.min;\r\n        this.circleOptions.toDegree = this.options.needleOptions.minMaxVal.max;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n\r\n    setNeedle() {\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (!this.options.needleOptions.color)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, this.options.hollowEdges) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n        else if (this.options.hideBottom) {\r\n            if (this.options.needleOptions.minMaxVal.value >= 83.34 || this.options.needleOptions.minMaxVal.value <= 16.67)\r\n                this.needleOptions.color = this.options.colors.inactive;\r\n        }\r\n        \r\n        if (this.needle) {\r\n            this.needle.update(this.needleOptions);\r\n        }\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        this.edgesOptions.backgroundColor = this.options.hollowEdgesBgColor;\r\n        \r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n\r\n    setIcon() {\r\n        this.iconOptions = this.common.extend(this.options.iconOptions, this.iconOptions);\r\n        \r\n        if (this.icon)\r\n            this.icon.update(this.iconOptions);\r\n        else\r\n            this.icon = new Icon(this.iconOptions);\r\n        let image = this.element.querySelector('[data-icon]');\r\n        if (image) {\r\n            if (!this.options.showIcon || !this.iconOptions.src) \r\n                image.style.display = 'none';\r\n            else\r\n                image.style.display = 'inline-block';\r\n        }\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}