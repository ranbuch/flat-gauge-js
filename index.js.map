{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.ts","src/ampm.ts","src/circle.ts","src/common.ts","src/edges.ts","src/icon.ts","src/interfaces.ts","src/multitune.ts","src/needle.ts","src/range.ts","src/spinner.ts","src/timer.ts","src/tune.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export { AmPm } from \"./src/ampm\";\r\nexport { Circle } from \"./src/circle\";\r\nexport { MultiTune } from \"./src/multitune\";\r\nexport { Range } from \"./src/range\";\r\nexport { Spinner } from \"./src/spinner\";\r\nexport { Timer } from \"./src/timer\";\r\nexport { Tune } from \"./src/tune\";\r\nexport { AmPmOptions, CircleOptions, ColorPalette, EdgesOptions, FromTo, FromToString, IconOptions, InnerText, JsonToHtmlElement, MinMaxVal, MultituneOptions, NeedleOptions, NumberData, RangeOptions, RGBA, SideState, SpinnerOptions, Time, TimerOptions, TuneOptions } from \"./src/interfaces\";","import { AmPmOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, NumberData, FromTo } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\n\r\nexport class AmPm {\r\n    private element: any;\r\n    private options: AmPmOptions;\r\n    private common: Common;\r\n    private circleOptionsAm: CircleOptions;\r\n    private circleAm: Circle;\r\n    private circleOptionsPm: CircleOptions;\r\n    private circlePm: Circle;\r\n    private edgesOptionsAm: EdgesOptions;\r\n    private edgesAm: Edges;\r\n    private edgesOptionsPm: EdgesOptions;\r\n    private edgesPm: Edges;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    // private amNumbers: Array<NumberData>;\r\n    // private pmNumbers: Array<NumberData>;\r\n    private minMaxValAm: FromTo;\r\n    private minMaxValPm: FromTo;\r\n    private lower: Array<NumberData>;\r\n    private higher: Array<NumberData>;\r\n\r\n    constructor(element: any, options?: AmPmOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.setMinutes();\r\n\r\n        this.init();\r\n    }\r\n\r\n    setMinutes() {\r\n        let arrFrom = this.options.fromTo.from.split(':');\r\n        let arrTo = this.options.fromTo.to.split(':');\r\n        let fromMinutes = 0, toMinutes = 0, from = null, to = null;\r\n\r\n        if (parseInt(arrFrom[0]) <= 12 || parseInt(arrTo[0]) <= 12) {\r\n            fromMinutes = this.common.getMinutesFromHour(this.options.fromTo.from);\r\n        }\r\n\r\n        if (parseInt(arrFrom[0]) >= 12 || parseInt(arrTo[0]) >= 12) {\r\n            toMinutes = this.common.getMinutesFromHour(this.options.fromTo.to);\r\n        }\r\n        \r\n        let max = 60 * 12;\r\n        if (fromMinutes > 0) {\r\n            from = this.common.getMinutesFromStart(this.options.fromTo.from, 0);\r\n            to = this.common.getMinutesFromStart(this.options.fromTo.to, 0);\r\n                \r\n            this.minMaxValAm = {\r\n                from: from / max * 100,\r\n                to: Math.min(to / max * 100, 100)\r\n            } as FromTo;\r\n        }\r\n\r\n        if (toMinutes > 0) {\r\n            from = this.common.getMinutesFromStart(this.options.fromTo.from, 60 * 12);\r\n            to = this.common.getMinutesFromStart(this.options.fromTo.to, 60 * 12);\r\n            \r\n            this.minMaxValPm = {\r\n                from: from / max * 100,\r\n                to: Math.min(to / max * 100, 100)\r\n            } as FromTo;\r\n        }\r\n        \r\n        this.lower = [];\r\n        this.higher = [];\r\n\r\n        this.lower.push({\r\n            number: '00',\r\n            isActive: this.common.isHourInRange(this.minMaxValAm, 0),\r\n            remainder: this.common.getRemainder(this.minMaxValAm, 0)\r\n        });\r\n        for (let i = 1; i < 24; i++) {\r\n            if (i < 12) {\r\n                this.lower.push({\r\n                    number: i.toString(),\r\n                    isActive: this.common.isHourInRange(this.minMaxValAm, i),\r\n                    remainder: this.common.getRemainder(this.minMaxValAm, i)\r\n                });\r\n            }\r\n            else {\r\n                this.higher.push({\r\n                    number: i.toString(),\r\n                    isActive: this.common.isHourInRange(this.minMaxValPm, i - 12),\r\n                    remainder: this.common.getRemainder(this.minMaxValAm, i - 12)\r\n                });\r\n            }\r\n        }\r\n\r\n        this.setNeedle();\r\n        setTimeout(() => {\r\n            this.setMinutes();\r\n        }, 60000);\r\n    }\r\n\r\n    setNeedle() {\r\n        \r\n        let now = this.common.getHoursAndMinutesLT(new Date());\r\n\r\n        let isAm = now.indexOf('AM') > -1;\r\n\r\n        let relevantHours = isAm ? this.lower : this.higher;\r\n\r\n        // let diameterForNeedle = isAm ? (this.options.radius * 2) - 20 : this.options.radius * 2;\r\n\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (this.edgesOptionsAm && this.edgesOptionsPm)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, (isAm ? this.edgesOptionsAm.hollowEdges : this.edgesOptionsPm.hollowEdges)) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n\r\n        for (let i = 0; i < relevantHours.length; i++) {\r\n            if (relevantHours[i].isActive) {\r\n                let current = (i * (100 / 12)) + relevantHours[i].remainder;\r\n                if (this.needleOptions.minMaxVal.min === null)\r\n                    this.needleOptions.minMaxVal.min = current;\r\n                this.needleOptions.minMaxVal.max = current;\r\n            }\r\n        }\r\n\r\n        if (this.needle)\r\n            this.needle.update(this.needleOptions);\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n            \r\n            // this.needle = {\r\n            //     minMaxVal: {\r\n            //         min: null,\r\n            //         max: null,\r\n            //         value: this.piService.getCurrentTimePercentage()\r\n            //     },\r\n            //     color: null\r\n            // };\r\n        \r\n        \r\n\r\n        // this.needleStyleInner = this.common.getNeedleInnerStyle(this.diameter);\r\n        // this.needleStyle = this.piService.getStyleByPercentage(this.diameter, this.niddle.minMaxVal.value, isAm);\r\n        // this.needle.color = this.piService.getColor(this.niddle);\r\n    }\r\n\r\n    // initNumbers(numbers: Array<NumberData>) {\r\n    //     numbers.push({\r\n    //         number: '00',\r\n    //         isActive: this.common.isHourInRange(this.minMaxValAm, 0),\r\n    //         remainder: this.common.getRemainder(this.minMaxValAm, 0)\r\n    //     });\r\n    //     numbers.push({\r\n\r\n    //     });\r\n    //     // this.amNumbers.\r\n    // }\r\n\r\n    init() {\r\n        // this.amNumbers = [];\r\n        // this.initNumbers(this.amNumbers);\r\n\r\n        let innerElem = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': 'position: relative;',\r\n                'data-ampm': ''\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-am-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-pm-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-needle-wrap': '',\r\n                        'style': 'position: absolute'\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        let amWrap = {\r\n            type: 'div',\r\n            attrs: {\r\n                style: 'position: absolute;height: 60px;top: 65px;left: 105px;color: #CBCBCB;font-size: 16px;z-index: 30',\r\n                'data-am-numbers': ''\r\n            },\r\n            children: []\r\n        } as JsonToHtmlElement;\r\n        for (let i = 0; i < this.lower.length; i++) {\r\n            amWrap.children.push({\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `height: 100%;position: absolute;width: 20px;left: 0;top: 0;transform-origin: bottom center;text-align: center;transform: rotate(${i * 30}deg);`,\r\n                    'data-num': i\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'span',\r\n                        attrs: {\r\n                            'style': `transform: rotate(-${i * 30}deg);display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: '#text',\r\n                                text: this.lower[i].number\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        let pmWrap = {\r\n            type: 'div',\r\n            attrs: {\r\n                style: 'position: absolute;height: 110px;color: #CBCBCB;font-size: 16px;',\r\n                'data-pm-numbers': ''\r\n            },\r\n            children: []\r\n        } as JsonToHtmlElement;\r\n        for (let i = 0; i < this.higher.length; i++) {\r\n            pmWrap.children.push({\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `height: 100%;position: absolute;width: 20px;left: 0;top: 0;transform-origin: bottom center;text-align: center;transform: rotate(${i * 30}deg);`,\r\n                    'data-num': i\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'span',\r\n                        attrs: {\r\n                            'style': `transform: rotate(-${i * 30}deg);display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: '#text',\r\n                                text: this.higher[i].number\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.common.jsonToHtml(amWrap));\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.circleAm.getElement());\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.edgesAm.getLeftElement());\r\n        innerElem.querySelector('[data-am-wrap]').appendChild(this.edgesAm.getRightElement());\r\n\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.common.jsonToHtml(pmWrap));\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.circlePm.getElement());\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.edgesPm.getLeftElement());\r\n        innerElem.querySelector('[data-pm-wrap]').appendChild(this.edgesPm.getRightElement());\r\n\r\n        \r\n        innerElem.querySelector('[data-needle-wrap]').appendChild(this.needle.getElement());\r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    setNumbers() {\r\n        let pmNumbers = this.element.querySelector('[data-pm-numbers]');\r\n        if (!pmNumbers) return;\r\n        pmNumbers.style.left = (((this.options.radius * 2) / 1.67) - 30) + 'px';\r\n        pmNumbers.style.top = '-20px';\r\n    }\r\n\r\n    setCircles() {\r\n        let setCircle = (prefix: string) => {\r\n            this['circleOptions' + prefix] = this.common.extend(this.options, this['circleOptions' + prefix], true);\r\n        \r\n            this['circleOptions' + prefix].fromDegree = this.options.needleOptions.minMaxVal.min;\r\n            this['circleOptions' + prefix].toDegree = this.options.needleOptions.minMaxVal.max;\r\n            \r\n            this['circleOptions' + prefix].backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!this['circleOptions' + prefix].backgroundColor)\r\n                this['circleOptions' + prefix].backgroundColor = '#fff';\r\n\r\n            if (prefix == 'Am')\r\n                this['circleOptions' + prefix].radius = this.options.radius - (this.options.strokeWidth);\r\n\r\n            if (this['circle' + prefix]) {\r\n                this['circle' + prefix].update(this['circleOptions' + prefix]);\r\n            }\r\n            else\r\n                this['circle' + prefix] = new Circle(this['circleOptions' + prefix]);\r\n        };\r\n\r\n        setCircle('Am');\r\n        setCircle('Pm');\r\n    }\r\n\r\n    setEdges() {\r\n        let setEdge = (prefix: string) => {\r\n            this['edgesOptions' + prefix] = this.common.extend(this.options.needleOptions, this['edgesOptions' + prefix], true);\r\n            this['edgesOptions' + prefix].strokeWidth = this.options.strokeWidth;\r\n            this['edgesOptions' + prefix].color = this.options.colors.active;\r\n            this['edgesOptions' + prefix].hollowEdges = this.options['hollowEdges' +  + prefix];\r\n            \r\n            if (this['edges' + prefix])\r\n                this['edges' + prefix].update(this['edgesOptions' + prefix]);\r\n            else\r\n                this['edges' + prefix] = new Edges(this['edgesOptions' + prefix]);\r\n            let left = this.element.querySelector('[data-left-edge]');\r\n            let right = this.element.querySelector('[data-right-edge]');\r\n            if (left && right) {\r\n                if (!this.options['showEdges' + prefix]) {\r\n                    left.style.display = 'none';\r\n                    right.style.display = 'none';\r\n                }\r\n                else {\r\n                    left.style.display = 'inline-block';\r\n                    right.style.display = 'inline-block';\r\n                }\r\n            }\r\n        }\r\n\r\n        setEdge('Am');\r\n        setEdge('Pm');\r\n    }\r\n\r\n    public update(options: AmPmOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircles();\r\n        this.setNeedle();\r\n        this.setNumbers();\r\n        this.setEdges();\r\n        this.setNeedle();\r\n    }\r\n\r\n    setWrap(options: AmPmOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n        let topLeftDim = (options.radius / 3.5) + 'px';\r\n\r\n        let amWrap = wrap.querySelector('[data-am-wrap]');\r\n        amWrap.style.top = ((options.radius / 3.5) + (options.strokeWidth * 2)) + 'px';\r\n        amWrap.style.left = ((options.radius / 3.5) + (options.strokeWidth * 2)) + 'px';\r\n        amWrap.style.zIndex = '20';\r\n        // let amCircle = amWrap.querySelector('[data-circle]')\r\n        let amNumbers = amWrap.querySelector('[data-am-numbers');\r\n        amNumbers.style.top = (options.strokeWidth * 3) + 'px';\r\n        amNumbers.style.left = (options.radius - options.strokeWidth * 3) + 'px';\r\n        \r\n        let pmWrap = wrap.querySelector('[data-pm-wrap]');\r\n        // let pmCircle = pmWrap.querySelector('[data-circle]')\r\n        pmWrap.style.top = topLeftDim;\r\n        pmWrap.style.left = topLeftDim;\r\n        \r\n\r\n        \r\n        let nWrap = wrap.querySelector('[data-needle-wrap]');\r\n        nWrap.style.top = topLeftDim;\r\n        nWrap.style.left = ((options.radius / 3.5) + options.radius) + 'px';\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    getDefaultOptions(): AmPmOptions {\r\n        let animationDuration = 500, radius = 88;\r\n        let colors = this.common.getDefaultColors();\r\n        return {\r\n            fromTo: {\r\n                from: '3:52',\r\n                to: '14:20'\r\n            },\r\n            radius: radius,\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            needleOptions: {\r\n                animationDuration: animationDuration,\r\n                color: colors.active,\r\n                radius: radius,\r\n                scale: 1.125,\r\n                minMaxVal: {\r\n                    max: 3,\r\n                    min: 14,\r\n                    value: 14\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n","import { CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Circle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: CircleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.injectCss();\r\n\r\n        this.init();\r\n    }\r\n\r\n    injectCss(): void {\r\n        let className = '_all-gauge-js-circle-style';\r\n        if (document.querySelector('.' + className)) return;\r\n\r\n        let style = `@keyframes allGaugeRotatingCircle {\r\n            from {\r\n                transform: rotate(0deg);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }`;\r\n\r\n        let sheet = document.createElement('style');\r\n        sheet.innerHTML = style;\r\n        sheet.className = className;\r\n        document.body.appendChild(sheet);\r\n    }\r\n\r\n    public update(options: CircleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setSvg(this.options);\r\n        this.setElements(this.options);\r\n    }\r\n\r\n    setSvg(options: CircleOptions): void {\r\n        let startAngle = (options.fromDegree - 50) * 3.6, endAngle = (options.toDegree - 50) * 3.6;\r\n        let d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n\r\n        let svg = this.element.querySelector('svg');\r\n        let dim = options.radius * 2;\r\n        svg.style.transitionDuration = options.animationDuration;\r\n        svg.style.width = dim + 'px';\r\n        svg.style.height = dim + 'px';\r\n        svg.style.animation = `allGaugeRotatingCircle ${options.rotationSpeed}ms linear infinite`;\r\n        svg.setAttributeNS(null, 'width', dim + 'px');\r\n        svg.setAttributeNS(null, 'height', dim + 'px');\r\n        let path = svg.querySelector('[data-arc]');\r\n        path.setAttributeNS(null, 'stroke', options.colors.active);\r\n        path.setAttributeNS(null, 'stroke-width', options.strokeWidth);\r\n        path.setAttributeNS(null, 'd', d);\r\n        path.style.strokeWidth = options.strokeWidth + 'px';\r\n        path.style.transitionDuration = options.animationDuration;\r\n\r\n        let concealer = svg.querySelector('[data-concealer]');\r\n        if (options.hideBottom) {\r\n            startAngle = (33.334) * 3.6, endAngle = (66.667) * 3.6;\r\n            d = this.describeArc(options.radius, options.radius, options.radius - (options.strokeWidth / 2), startAngle, endAngle);\r\n            concealer.setAttributeNS(null, 'stroke-width', options.strokeWidth + 2);\r\n            concealer.setAttributeNS(null, 'd', d);\r\n            concealer.style.strokeWidth = (options.strokeWidth + 2) + 'px';\r\n            concealer.style.display = '';\r\n            let bgColor = options.backgroundColor;\r\n            if (!bgColor)\r\n                bgColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!bgColor)\r\n                bgColor = '#ffffff';\r\n            concealer.setAttributeNS(null, 'stroke', bgColor);\r\n        }\r\n        else\r\n            concealer.style.display = 'none';\r\n    }\r\n\r\n    setElements(options: CircleOptions): void {\r\n        // let circle = this.element.querySelector('div[data-circle]');\r\n        let circle = this.element.children[0];\r\n        let dim = this.options.radius * 2 + 'px';\r\n        circle.style.width = dim;\r\n        circle.style.height = dim;\r\n        circle.style.transitionDuration = options.animationDuration;\r\n\r\n        let c1 = circle.querySelector('[data-c1]');\r\n        c1.style.width = dim;\r\n        c1.style.height = dim;\r\n        c1.style.backgroundColor = this.options.colors.inactive;\r\n        c1.style.transitionDuration = options.animationDuration;\r\n        \r\n        let c3 = circle.querySelector('[data-c3]');\r\n        dim = ((options.radius * 2) - (options.strokeWidth * 2)) + 'px';\r\n        c3.style.width = dim;\r\n        c3.style.height = dim;\r\n        c3.style.top = options.strokeWidth + 'px';\r\n        c3.style.left = options.strokeWidth + 'px';\r\n        c3.style.backgroundColor = options.backgroundColor;\r\n        c3.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml({\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative; margin: auto; display: block;`,\r\n                'data-circle': 'true'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c1': '',\r\n                                'style': `position: absolute;top: 0; left: 0; z-index: 1; border-radius: 50%;`\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'svg',\r\n                            attrs: {\r\n                                'style': `position: absolute; top: 0;left: 0; z-index: 2; border-radius: unset;`\r\n                            },\r\n                            children: [\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-arc': ''\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: 'path',\r\n                                    attrs: {\r\n                                        'fill': 'none',\r\n                                        'data-concealer': ''\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-c3': '',\r\n                                'style': `position: absolute; z-index: 3; border-radius: 50%;`\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): any {\r\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    describeArc(x: number, y: number, radius: number, startAngle: number, endAngle: number): any {\r\n        var start = this.polarToCartesian(x, y, radius, endAngle);\r\n        var end = this.polarToCartesian(x, y, radius, startAngle);\r\n        var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n        var d = [\r\n            \"M\", start.x, start.y,\r\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n        ].join(\" \");\r\n        return d;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","import { JsonToHtmlElement, RGBA, InnerText, ColorPalette, MinMaxVal, FromTo, Time, SideState } from './interfaces';\r\n\r\nexport class Common {\r\n    static NameSpaceElements: Array<string> = ['svg', 'path', 'g'];\r\n    static xmlns: string = \"http://www.w3.org/2000/svg\";\r\n    // static needleWidthHeightRatio: number = 9.107127839547825;\r\n    static needleWidthHeightRatio: number = 8.69322239126;\r\n    extend(src: any, dest: any, copy?: boolean): any {\r\n        for (let i in src) {\r\n            if (typeof src[i] === 'object') {\r\n                if (dest && dest[i])\r\n                    src[i] = this.extend(src[i], dest[i]);\r\n            }\r\n            else if (typeof dest === 'object' && typeof dest[i] !== 'undefined') {\r\n                src[i] = dest[i];\r\n            }\r\n        }\r\n        if (copy)\r\n            return JSON.parse(JSON.stringify(src));\r\n        return src;\r\n    }\r\n\r\n    jsonToHtml(obj: JsonToHtmlElement): any {\r\n        let elm = null, isNsElem = Common.NameSpaceElements.filter(x => x == obj.type).length > 0;\r\n        if (isNsElem)\r\n            elm = document.createElementNS(Common.xmlns, obj.type);\r\n        else\r\n            elm = document.createElement(obj.type);\r\n        for (var i in obj.attrs) {\r\n            if (isNsElem)\r\n                elm.setAttributeNS(null, i, obj.attrs[i]);\r\n            else\r\n                elm.setAttribute(i, obj.attrs[i]);\r\n        }\r\n        for (let i in obj.children) {\r\n            let newElem = null;\r\n            if (obj.children[i].type == '#text')\r\n                newElem = document.createTextNode(obj.children[i].text);\r\n            else\r\n                newElem = this.jsonToHtml(obj.children[i]);\r\n            if ((newElem && newElem.tagName && newElem.tagName.toLowerCase() !== 'undefined') || newElem.nodeType == 3)\r\n                elm.appendChild(newElem);\r\n        }\r\n        return elm;\r\n    }\r\n\r\n    isHex(str: string): boolean {\r\n        return str.indexOf('#') > -1;\r\n    }\r\n\r\n    isRgba(str: string) {\r\n        return str.split(',').length > 3;\r\n    }\r\n\r\n    toRgbObj(rgba: string): RGBA {\r\n        let arr = rgba.split(',').map((item) => {\r\n            return parseInt(item, 10);\r\n        });\r\n        return {\r\n            Red: arr[0],\r\n            Green: arr[1],\r\n            Blue: arr[2],\r\n            Alpha: arr[3]\r\n        };\r\n    }\r\n\r\n    RgbObjToString(rgba: RGBA): string {\r\n        let ans = '(' + rgba.Red + ',' + rgba.Green + ',' + rgba.Blue;\r\n        if (rgba.Alpha)\r\n            ans += ',' + rgba.Alpha\r\n        ans += ')';\r\n        return ans;\r\n    }\r\n\r\n    hexToRgb(hex: string): RGBA {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m: string, r: string, g: string, b: string) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            Red: parseInt(result[1], 16),\r\n            Green: parseInt(result[2], 16),\r\n            Blue: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    setInnerTextDefaults(innerText?: InnerText): InnerText {\r\n        if (!innerText)\r\n            innerText = {\r\n                text: ''\r\n            };\r\n        if (!innerText.text)\r\n            innerText.text = '';\r\n        if (!innerText.fontSize)\r\n            innerText.fontSize = 18;\r\n        if (!innerText.lineHeight)\r\n            innerText.lineHeight = innerText.fontSize;\r\n        if (!innerText.fontFamily)\r\n            innerText.fontFamily = 'Arial,Utkal,sans-serif';\r\n        if (!innerText.fontWeight)\r\n            innerText.fontWeight = 'normal';\r\n        if (!innerText.letterSpacing)\r\n            innerText.letterSpacing = '0';\r\n        return innerText;\r\n    }\r\n\r\n    getComputedStyleByParentRec(elem: any, cssProp: string): string {\r\n        if (!elem) return null;\r\n        let css = getComputedStyle(elem) as any;\r\n        let val = css[cssProp];\r\n        if (val && val != 'rgba(0, 0, 0, 0)') return val;\r\n        return this.getComputedStyleByParentRec(elem.parentElement, cssProp);\r\n    }\r\n\r\n    // odd strokeWidth is not supported\r\n    fixStrokeWidth(sw: number): number {\r\n        if (sw % 2 == 1)\r\n            console.warn('all-gauge: stroke-width \"' + sw + '\" is not supported (odd), changed to \"' + (++sw)) + '\"';\r\n        return sw;\r\n    }\r\n\r\n    // odd radius is not supported\r\n    fixRadius(r: number): number {\r\n        if (r % 2 == 1)\r\n            console.warn('all-gauge: radius \"' + r + '\" is not supported (odd), changed to \"' + (++r)) + '\"';\r\n        return r;\r\n    }\r\n\r\n    getDefaultColors(): ColorPalette {\r\n        return {\r\n            active: '#4CCEAD',\r\n            default: '#505050',\r\n            inactive: '#ededed'\r\n        };\r\n    }\r\n\r\n    getNeedleInnerStyle(radius: number): any {\r\n        return {\r\n            'height': (radius + 20) + 'px',\r\n            'width': (radius / Common.needleWidthHeightRatio) + 'px'\r\n        };\r\n    }\r\n\r\n    getNeedleStyle(radius: number, arcNeedlePercentage: number, scale: number) {\r\n        if (typeof scale !== 'number')\r\n            scale = 1.125;\r\n        let deg = (arcNeedlePercentage - 50) * 3.6;\r\n        return {\r\n            'left': 'calc(50% - ' + ((radius / Common.needleWidthHeightRatio)) / 2 + 'px',\r\n            'transform': 'rotate(' + deg + 'deg) scale(' + scale + ')'\r\n        };\r\n    }\r\n\r\n    isInRange(minMaxVal: MinMaxVal, sides: SideState) {\r\n        switch (sides) {\r\n            case SideState.Both: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n            case SideState.None: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Left: {\r\n                return (minMaxVal.min < minMaxVal.value && minMaxVal.max >= minMaxVal.value);\r\n            }\r\n            case SideState.Right: {\r\n                return (minMaxVal.min <= minMaxVal.value && minMaxVal.max > minMaxVal.value);\r\n            }\r\n        }    \r\n    }\r\n\r\n    normalizeByPercentage(value: number, percentage: number, mid?: number, max?: number): number {\r\n        if (typeof mid === 'undefined')\r\n            mid = 50;\r\n        if (typeof max === 'undefined')\r\n            max = mid * 2;\r\n        let rel = null;\r\n\r\n        if (value > mid) {\r\n            percentage /= 2;\r\n            rel = Math.abs(mid - value);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value * (1 - percentage);\r\n        }\r\n        else {\r\n            if (value == 0.0)\r\n                value = 0.001;\r\n            rel = Math.abs(value - mid);\r\n            rel = rel / mid;\r\n            percentage *= rel;\r\n            return value + (mid * (percentage));\r\n        }\r\n    }\r\n\r\n    getRemainder(range: FromTo, hour: number) {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) {\r\n            return current - range.from;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isHourInRange(range: FromTo, hour: number): boolean {\r\n        let current = 100 / 12 * hour;\r\n        if (current >= range.from && current <= range.to) return true;\r\n        return false;\r\n    }\r\n\r\n    getMinutesFromHour(hour: string) {\r\n        let arr = hour.split(':');\r\n        return parseInt(arr[0].trim()) * 60 + parseInt(arr[1].trim());\r\n    }\r\n\r\n    getMinutesFromStart(hour: string, start = 0) {\r\n        let arr = hour.split(':');\r\n        return Math.max((parseInt(arr[0].trim()) * 60 + (parseInt(arr[1].trim()))) - start, 0);\r\n    }\r\n\r\n    getHoursAndMinutesLT(date: Date): string {\r\n        let hours = date.getHours();\r\n        hours = (hours + 24 - 2) % 24;\r\n        let mid = 'am';\r\n        if (hours == 0) { //At 00 hours we need to show 12 am\r\n            hours = 12;\r\n        }\r\n        else if (hours > 12) {\r\n            hours = hours % 12;\r\n            mid = 'pm';\r\n        }\r\n        return hours + ':' + date.getMinutes() + ' ' + mid;\r\n    }\r\n\r\n    getSecondsFromTime(timer: Time): number {\r\n        let hours = 0;\r\n        hours += timer.hours * 3600;\r\n        hours += timer.minutes * 60;\r\n        hours += timer.seconds;\r\n        return hours;\r\n    }\r\n\r\n    setTimeToZero(timer: Time): void {\r\n        timer.hours = 0;\r\n        timer.minutes = 0;\r\n        timer.seconds = 0;\r\n    }\r\n\r\n    decreaseTime(timer: Time): boolean {\r\n        if (timer.seconds > 0) {\r\n            if (--timer.seconds < 0) {\r\n                timer.seconds = 59;\r\n                if (--timer.minutes < 0) {\r\n                    timer.minutes = 59;\r\n                    if (--timer.hours < 0) {\r\n                        this.setTimeToZero(timer);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (timer.minutes > 0) {\r\n            timer.seconds = 59;\r\n            if (--timer.minutes < 0) {\r\n                timer.minutes = 59;\r\n                if (--timer.hours < 0) {\r\n                    this.setTimeToZero(timer);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (timer.hours > 0) {\r\n            timer.minutes = 59;\r\n            if (--timer.hours < 0) {\r\n                this.setTimeToZero(timer);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.isTimeZero(timer)) {\r\n            this.setTimeToZero(timer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTimeZero(timer: Time): boolean {\r\n        if (timer.hours <= 0 && timer.minutes <= 0 && timer.seconds <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    padWithZiro(text: string) {\r\n        if (String(text).length < 2)\r\n            text = '0' + text;\r\n        return text;\r\n    }\r\n\r\n    getSideStateByString(state: string): SideState {\r\n        if (!state) return SideState.None;\r\n        switch (state.toLowerCase()) {\r\n            case 'left':\r\n                return SideState.Left;\r\n            case 'right':\r\n                return SideState.Right;\r\n            case 'both':\r\n                return SideState.Both;\r\n            case 'none':\r\n                return SideState.None;\r\n            default:\r\n                return SideState.None\r\n        }\r\n    }\r\n}","import { EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Edges {\r\n    private leftElement: any;\r\n    private rightElement: any;\r\n    private common: Common;\r\n\r\n    static AddToEdge: number = 4;\r\n    static AddToEdgeHeight: number = 4;\r\n\r\n    constructor(private options?: EdgesOptions) {\r\n        this.common = new Common();\r\n\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        this.options = this.common.extend(defaultOptions, options);\r\n        \r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): EdgesOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500;\r\n        return {\r\n            color: colors.active,\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            radius: defRadius,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            hollowEdges: SideState.None,\r\n            backgroundColor: '#ffffff'\r\n        } as EdgesOptions;\r\n    }\r\n\r\n    init() {\r\n        this.leftElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-left-edge': ''\r\n                }\r\n            });\r\n\r\n        this.rightElement = this.common.jsonToHtml(\r\n            {\r\n                type: 'span',\r\n                attrs: {\r\n                    'style': `display: inline-block;width: ${Edges.AddToEdge}px;position: absolute;z-index: 5;box-sizing: initial;box-sizing: border-box;transition-property: background-color;`,\r\n                    'data-right-edge': ''\r\n                }\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: EdgesOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions() {\r\n        this.setSpans(this.options);\r\n    }\r\n\r\n    setSpans(options: EdgesOptions) {\r\n        let height = (options.strokeWidth + Edges.AddToEdge + Edges.AddToEdgeHeight) + 'px';\r\n        let top = 'calc(50% - ' + ((options.strokeWidth / 2) + (Edges.AddToEdge / 2) + (Edges.AddToEdgeHeight / 2)) + 'px)';\r\n        let leftStyle = 'calc(50% - ' + (Edges.AddToEdge / 2) + 'px)';\r\n\r\n        // let bgColor = this.common.getComputedStyleByParentRec(this.leftElement, 'backgroundColor');\r\n        // if (!bgColor)\r\n        let bgColor = this.options.backgroundColor;\r\n\r\n        let left = this.leftElement;\r\n        left.style.height = height;\r\n        left.style.top = top;\r\n        left.style.left = leftStyle;\r\n        left.style.backgroundColor = options.color;\r\n        left.style.transitionDuration = options.animationDuration + 'ms';\r\n        // left.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Left || options.hollowEdges == SideState.Both) {\r\n            left.style.border = 'solid 1px ' + options.color;\r\n            left.style.backgroundColor = bgColor;\r\n            // left.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // left.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let right = this.rightElement;\r\n        right.style.height = height;\r\n        right.style.top = top;\r\n        right.style.left = leftStyle;\r\n        right.style.backgroundColor = options.color;\r\n        right.style.transitionDuration = options.animationDuration + 'ms';\r\n        // right.style.transitionDuration = '0ms';\r\n        if (options.hollowEdges == SideState.Right || options.hollowEdges == SideState.Both) {\r\n            right.style.border = 'solid 1px ' + options.color;\r\n            right.style.backgroundColor = bgColor;\r\n            // right.style.height = (options.strokeWidth + (Edges.AddToEdge * 2 - 2)) + 'px';\r\n            // right.style.top = 'calc(50% - ' + ((options.strokeWidth / 2) + Edges.AddToEdge + 1) + 'px)';\r\n        }\r\n\r\n        let scalar = options.radius - (options.strokeWidth / 2), xVectorLeft, yVectorLeft, xVectorRight, yVectorRight;\r\n        let degLeft = (options.minMaxVal.min - 50) * 3.6;\r\n        let degRight = (options.minMaxVal.max - 50) * 3.6;\r\n        xVectorLeft = Math.sin(degLeft * (Math.PI / 180)) * scalar;\r\n        yVectorLeft = -Math.cos(degLeft * (Math.PI / 180)) * scalar;\r\n        left.style.transform = `translate3d(${xVectorLeft}px, ${yVectorLeft}px, 0) rotate(${degLeft}deg)`;\r\n        xVectorRight = Math.sin(degRight * (Math.PI / 180)) * scalar;\r\n        yVectorRight = -Math.cos(degRight * (Math.PI / 180)) * scalar;\r\n        right.style.transform = `translate3d(${xVectorRight}px, ${yVectorRight}px, 0) rotate(${degRight}deg)`;\r\n    }\r\n\r\n    public getLeftElement(): any {\r\n        return this.leftElement;\r\n    }\r\n\r\n    public getRightElement(): any {\r\n        return this.rightElement;\r\n    }\r\n}","import { IconOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Icon {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: IconOptions) {\r\n        this.common = new Common();\r\n\r\n        this.options = options;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml(\r\n            {\r\n                type: 'img',\r\n                attrs: {\r\n                    'style': 'position: absolute;z-index: 15;display: inline-block;',\r\n                    'data-icon': ''\r\n                }\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: IconOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions() {\r\n        this.setImage(this.options);\r\n    }\r\n\r\n    setImage(options: IconOptions) {\r\n        let image = this.element;\r\n        image.style.width = options.dimensions.width + 'px';\r\n        image.style.height = options.dimensions.height + 'px';\r\n        if (typeof options.top === 'undefined')\r\n            options.top = 0;\r\n        if (typeof options.left === 'undefined')\r\n            options.left = 0;\r\n      \r\n\t    let deg = (options.degree - 50) * 3.6;\r\n\t    let scalar = options.radius + options.radiusOffset;\r\n\t\r\n        let xVector = Math.sin(deg * (Math.PI / 180)) * scalar;\r\n        let yVector = -Math.cos(deg * (Math.PI / 180)) * scalar;\r\n\r\n        image.style.left = ((options.dimensions.width / -2) + options.radius + xVector) + 'px';\r\n        image.style.top = ((options.dimensions.height / -2) + options.radius + yVector) + 'px';\r\n       \r\n        image.style.transitionDuration = '0ms';\r\n        image.style.opacity = options.opacity;\r\n        image.src = options.src;\r\n        if (options.src)\r\n            image.style.display = 'inline-block';\r\n        else\r\n            image.style.display = 'none';\r\n\r\n        image.style.transform = `rotate(${deg}deg)`;\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n}","export interface ColorPalette {\r\n    default: string;\r\n    active: string;\r\n    inactive: string;\r\n}\r\n\r\nexport interface CircleOptions {\r\n    colors?: ColorPalette;\r\n    fromDegree?: number;\r\n    toDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    animationDuration?: number;\r\n    backgroundColor?: string;\r\n    hideBottom: boolean;\r\n}\r\n\r\nexport interface SpinnerOptions {\r\n    colors?: ColorPalette;\r\n    activeDegree?: number;\r\n    radius?: number;\r\n    strokeWidth?: number;\r\n    rotationSpeed?: number;\r\n    title?: InnerText;\r\n    animationDuration?: number;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport interface InnerText {\r\n    text: string;\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    lineHeight?: number;\r\n    fontWeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport interface JsonToHtmlElement {\r\n    type: string;\r\n    text?: string;\r\n    attrs?: any;\r\n    children?: Array<JsonToHtmlElement>;\r\n}\r\n\r\nexport interface RGBA {\r\n    Red: number;\r\n    Green: number;\r\n    Blue: number;\r\n    Alpha?: number;\r\n}\r\n\r\nexport interface MinMaxVal {\r\n    min: number;\r\n    max: number;\r\n    value?: number;\r\n}\r\n\r\nexport interface NeedleOptions {\r\n    color: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    scale: number;\r\n    animationDuration?: number;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport interface TuneOptions {\r\n    needleOptions?: NeedleOptions;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    // title?: InnerText;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n}\r\n\r\n// export interface MinMaxEdge {\r\n//     minMaxVal: MinMaxVal;\r\n//     leftEdges?: SinngleSideState;\r\n//     rightEdges?: SinngleSideState;\r\n//     bgColor: string;\r\n// }\r\n\r\nexport interface MultituneOptions {\r\n    needleOptions: NeedleOptions;\r\n    segments: Array<MinMaxVal>;\r\n    iconOptions?: IconOptions;\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    showIcon: boolean;\r\n    hideBottom: boolean;\r\n    backgroundColor?: string;\r\n    hollowEdgesBgColor?: string;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface RangeOptions {\r\n    colors?: ColorPalette;\r\n    minMaxVal: MinMaxVal;\r\n    strokeWidth?: number;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    hollowEdges?: SideState;\r\n    hideBottom: boolean;\r\n    title?: InnerText;\r\n    highlight?: boolean;\r\n}\r\n\r\nexport enum SideState {\r\n    None,\r\n    Left,\r\n    Right,\r\n    Both,\r\n}\r\n\r\n// export enum SinngleSideState {\r\n//     None,\r\n//     Hollow,\r\n//     Full,\r\n// }\r\n\r\nexport interface EdgesOptions {\r\n    color: string;\r\n    backgroundColor?: string;\r\n    minMaxVal: MinMaxVal;\r\n    radius: number;\r\n    strokeWidth: number;\r\n    animationDuration?: number;\r\n    hollowEdges?: SideState;\r\n}\r\n\r\nexport interface IconOptions {\r\n    degree: number;\r\n    radius: number;\r\n\tradiusOffset?: number;\r\n    animationDuration?: number;\r\n    src: string;\r\n    dimensions: {\r\n        width: number;\r\n        height: number;\r\n    },\r\n    top?: number;\r\n    left?: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface NumberData {\r\n        number: string;\r\n        isActive: boolean;\r\n        remainder: number;\r\n    }\r\n\r\nexport interface AmPmOptions {\r\n    fromTo: FromToString;\r\n    needleOptions?: NeedleOptions;\r\n    colors?: ColorPalette;\r\n    radius: number;\r\n    minMaxValAm?: MinMaxVal;\r\n    minMaxValPm?: MinMaxVal;\r\n    animationDuration?: number;\r\n    strokeWidth?: number;\r\n    hollowEdgesAm?: SideState;\r\n    hollowEdgesPm?: SideState;\r\n}\r\n\r\nexport interface FromTo {\r\n        from: number;\r\n        to: number;\r\n    }\r\n\r\nexport interface FromToString {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\nexport interface Time {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number,\r\n}\r\n\r\nexport interface TimerOptions {\r\n    colors?: ColorPalette;\r\n    strokeWidth?: number;\r\n    time: Time;\r\n    animationDuration?: number;\r\n    radius: number;\r\n    showEdges: boolean;\r\n    title?: InnerText;\r\n    percentage?: number;\r\n}","import { MultituneOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, IconOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\nimport { Icon } from './icon';\r\n\r\nexport class MultiTune {\r\n    private element: any;\r\n    private options: MultituneOptions;\r\n    private common: Common;\r\n    private circlesOptions: Array<CircleOptions>;\r\n    private circles: Array<Circle>;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    private iconOptions: IconOptions;\r\n    private icon: Icon;\r\n    constructor(element: any, options?: MultituneOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        // if we're hiding bottom we should take thoes values in to considuration\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.needleOptions.minMaxVal.max = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.max, portionToHide);\r\n            this.options.needleOptions.minMaxVal.min = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.min, portionToHide);\r\n            this.options.needleOptions.minMaxVal.value = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.value, portionToHide);\r\n            if (this.options.iconOptions && typeof this.options.iconOptions.degree === 'number')\r\n                this.options.iconOptions.degree = this.common.normalizeByPercentage(this.options.iconOptions.degree, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-multi-tune': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.updateOptions(false);\r\n\r\n        // this.extractEdgesFromCircles();\r\n\r\n        for (let i = 0; i < this.circles.length; i++) {\r\n            let c =  this.circles[i].getElement();\r\n            innerElem.appendChild(c);\r\n            if (i == 1) {\r\n                c.style.position = 'absolute';\r\n                c.style.top= '0';\r\n            }\r\n            // innerElem.appendChild(this.edges[i].getLeftElement());\r\n            // innerElem.appendChild(this.edges[i].getRightElement());\r\n        }\r\n        \r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        innerElem.appendChild(this.needle.getElement());\r\n        innerElem.appendChild(this.icon.getElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: MultituneOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    // extractEdgesFromCircles() {\r\n    // this.edges = [];\r\n    // this.edgesOptions = [];\r\n    // for (let i = 0; i < this.circles.length; i++) {\r\n    //     this.edgesOptions[i].hollowEdges = SideState.Both;\r\n    //     this.edgesOptions[i] = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n    //     this.edgesOptions = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n    //     this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n    //     this.edgesOptions.color = this.options.colors.active;\r\n    //     this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n    //     this.edgesOptions.backgroundColor = this.options.hollowEdgesBgColor;\r\n\r\n    // }\r\n    // this.circles.forEach((c) => {\r\n\r\n\r\n\r\n\r\n    //     this.edges = new Edges(this.edgesOptions);\r\n    //     this.edgesOptions.push({\r\n\r\n    //     });\r\n    //     innerElem.appendChild(c.getElement());\r\n    // });\r\n    // }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircles();\r\n        this.setNeedle();\r\n        this.setEdges();\r\n        this.setIcon();\r\n    }\r\n\r\n    setWrap(options: MultituneOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): MultituneOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500, bgColor = '#ffffff';\r\n        return {\r\n            needleOptions: {\r\n                minMaxVal: {\r\n                    min: 30,\r\n                    max: 70,\r\n                    value: 55\r\n                },\r\n                color: colors.active,\r\n                scale: 1.125,\r\n                radius: defRadius,\r\n                animationDuration: animationDuration,\r\n                disabled: false\r\n            },\r\n            segments: [\r\n                {\r\n                    // minMaxVal: {\r\n                    min: 0,\r\n                    max: 37.5\r\n                    // }\r\n                    // ,\r\n                    // leftEdges: SinngleSideState.None,\r\n                    // rightEdges: SinngleSideState.Hollow,\r\n                    // bgColor: bgColor\r\n                },\r\n                {\r\n                    // minMaxVal: {\r\n                    min: 62.5,\r\n                    max: 100\r\n                    // },\r\n                    // leftEdges: SinngleSideState.Hollow,\r\n                    // rightEdges: SinngleSideState.None,\r\n                    // bgColor: bgColor\r\n                }\r\n            ],\r\n            iconOptions: {\r\n                animationDuration: animationDuration,\r\n                degree: 50,\r\n                radius: defRadius,\r\n                radiusOffset: 0,\r\n                src: '',\r\n                dimensions: {\r\n                    width: 25,\r\n                    height: 25\r\n                },\r\n                top: 0,\r\n                left: 0,\r\n                opacity: 1\r\n            },\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            radius: defRadius,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            hideBottom: true,\r\n            backgroundColor: bgColor,\r\n            hollowEdgesBgColor: bgColor\r\n        } as MultituneOptions;\r\n    }\r\n\r\n    setCircles() {\r\n        let exist = true;\r\n        if (!(this.circles instanceof Array)) {\r\n            exist = false;\r\n            this.circles = [];\r\n            this.circlesOptions = [];\r\n        }\r\n        for (let i = 0; i < this.options.segments.length; i++) {\r\n            if (exist)\r\n                this.circlesOptions[i] = this.common.extend(this.options, this.circlesOptions[i]);\r\n            else\r\n                this.circlesOptions[i] = this.common.extend(this.options, {});\r\n            \r\n\r\n            if (i == 0) {\r\n                this.circlesOptions[i].fromDegree = 0;\r\n                this.circlesOptions[i].toDegree = this.options.needleOptions.minMaxVal.min;\r\n            }\r\n            if (i == 1) {\r\n                this.circlesOptions[i].fromDegree = this.options.needleOptions.minMaxVal.max;\r\n                this.circlesOptions[i].toDegree = 100;\r\n            }\r\n            \r\n\r\n            this.circlesOptions[i].backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n            if (!this.circlesOptions[i].backgroundColor)\r\n                this.circlesOptions[i].backgroundColor = '#fff';\r\n\r\n            if (exist)\r\n                this.circles[i].update(this.circlesOptions[i]);\r\n            else\r\n                this.circles[i] = new Circle(this.circlesOptions[i]);\r\n        }\r\n    }\r\n\r\n    setNeedle() {\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (!this.options.needleOptions.color)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, this.options.hollowEdges) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n        else if (this.options.hideBottom) {\r\n            if (this.options.needleOptions.minMaxVal.value >= 83.34 || this.options.needleOptions.minMaxVal.value <= 16.67)\r\n                this.needleOptions.color = this.options.colors.inactive;\r\n        }\r\n\r\n        if (this.needle) {\r\n            this.needle.update(this.needleOptions);\r\n        }\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        this.edgesOptions.backgroundColor = this.options.hollowEdgesBgColor;\r\n\r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n\r\n    setIcon() {\r\n        this.iconOptions = this.common.extend(this.options.iconOptions, this.iconOptions);\r\n\r\n        if (this.icon)\r\n            this.icon.update(this.iconOptions);\r\n        else\r\n            this.icon = new Icon(this.iconOptions);\r\n        let image = this.element.querySelector('[data-icon]');\r\n        if (image) {\r\n            if (!this.options.showIcon || !this.iconOptions.src)\r\n                image.style.display = 'none';\r\n            else\r\n                image.style.display = 'inline-block';\r\n        }\r\n    }\r\n}","import { NeedleOptions } from './interfaces';\r\nimport { Common } from './common';\r\n\r\nexport class Needle {\r\n    private element: any;\r\n    private common: Common;\r\n    constructor(private options: NeedleOptions) {\r\n        this.common = new Common();\r\n\r\n        this.options = options;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.element = this.common.jsonToHtml(\r\n            {\r\n                type: 'div',\r\n                attrs: {\r\n                    'style': 'position: absolute;z-index: 40;transform-origin: 50% 85%;transform: scale(1.125);transition-duration: .5s; top: -4px;',\r\n                    'data-needle': ''\r\n                },\r\n                children: [\r\n                    {\r\n                        type: 'svg',\r\n                        attrs: {\r\n                            'version': '1.1',\r\n                            // 'xmlns': 'http://www.w3.org/2000/svg',\r\n                            // 'xmlns:xlink': 'http://www.w3.org/1999/xlink',\r\n                            'x': '0px',\r\n                            'y': '0px',\r\n                            'viewBox': '0 0 11.5 103.8',\r\n                            // 'xml:space': 'preserve',\r\n                            'style': `enable-background:new 0 0 11.5 103.8;position: relative; margin: auto; display: block;`\r\n                        },\r\n                        children: [\r\n                            {\r\n                                type: 'g',\r\n                                children: [\r\n                                    {\r\n                                        type: 'path',\r\n                                        attrs: {\r\n                                            'd': 'M10.4,95.6c-0.4-0.9-1-1.6-1.7-2.1L5.7,1.3L2.8,93.5c-1.9,1.3-2.6,3.8-1.7,6c1.1,2.5,4,3.8,6.6,2.7C10.2,101.1,11.4,98.2,10.4,95.6z'\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    public update(options: NeedleOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setDiv(this.options);\r\n        this.setSvg(this.options);\r\n    }\r\n\r\n    setDiv(options: NeedleOptions): void {\r\n        let div = this.element;\r\n        let divStyle = this.common.getNeedleStyle(options.radius, options.minMaxVal.value, options.scale);\r\n        div.style.left = divStyle.left;\r\n        div.style.transform = divStyle.transform;\r\n        div.style.transitionDuration = options.animationDuration + 'ms';\r\n    }\r\n\r\n    public getElement(): any {\r\n        return this.element;\r\n    }\r\n\r\n    setSvg(options: NeedleOptions): void {\r\n        let svg = this.element.querySelector('svg');\r\n        let svgStyle = this.common.getNeedleInnerStyle(options.radius);\r\n        svg.style.width = svgStyle.width;\r\n        svg.style.height = svgStyle.height;\r\n        // try {\r\n        //     svg.setAttributeNS('http://www.w3.org/2000/svg', 'xmlns', window.location.host);\r\n        //     svg.setAttributeNS('http://www.w3.org/1999/xlink', 'xmlns:xlink', window.location.host);\r\n        //     svg.setAttributeNS('http://www.w3.org/2000/svg', 'xml:space', 'preserve');\r\n        // }\r\n        // catch (e) {\r\n        //     // console.log(e);\r\n        // }\r\n        let path = svg.querySelector('path');\r\n        path.setAttributeNS(null, 'fill', options.color);\r\n        path.style.transitionDuration = options.animationDuration + 'ms';\r\n    }\r\n}","import { RangeOptions, CircleOptions, JsonToHtmlElement, EdgesOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Edges } from './edges';\r\n\r\nexport class Range {\r\n    private element: any;\r\n    private options: RangeOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    constructor(element: any, options?: RangeOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.minMaxVal.max = this.common.normalizeByPercentage(this.options.minMaxVal.max, portionToHide);\r\n            this.options.minMaxVal.min = this.common.normalizeByPercentage(this.options.minMaxVal.min, portionToHide);\r\n            this.options.minMaxVal.value = this.common.normalizeByPercentage(this.options.minMaxVal.value, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-range': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        this.updateOptions(false);\r\n\r\n        \r\n\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        \r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: RangeOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setTitle(this.options);\r\n        this.setCircle();\r\n        this.setEdges();\r\n    }\r\n\r\n    setTitle(options: RangeOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        if (!h4) return;\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        h4.style.top = 'calc(50% - ' + (options.title.lineHeight / 2) + 'px)';\r\n    }\r\n\r\n    setWrap(options: RangeOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): RangeOptions {\r\n        return {\r\n            minMaxVal: {\r\n                min: 30,\r\n                max: 70,\r\n                value: 55\r\n            },\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            colors: this.common.getDefaultColors(),\r\n            strokeWidth: 6,\r\n            animationDuration: 500,\r\n            radius: 88,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            hideBottom: true,\r\n            highlight: false\r\n        } as RangeOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        \r\n        this.circleOptions.fromDegree = this.options.minMaxVal.min;\r\n        this.circleOptions.toDegree = this.options.minMaxVal.max;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        \r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n}","import { SpinnerOptions, JsonToHtmlElement, RGBA, InnerText, CircleOptions } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\n\r\nexport class Spinner {\r\n    private element: any;\r\n    private options: SpinnerOptions;\r\n    private circleOptions: CircleOptions;\r\n    private common: Common;\r\n    private circle: Circle;\r\n    constructor(element: any, options?: SpinnerOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n        if (this.options.activeDegree == 100)\r\n            this.options.activeDegree = 99.9999;\r\n\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        this.init();\r\n    }\r\n\r\n    getDefaultOptions(): SpinnerOptions {\r\n        return {\r\n            colors: this.common.getDefaultColors(),\r\n            activeDegree: 10,\r\n            radius: 88,\r\n            strokeWidth: 6,\r\n            rotationSpeed: 5000,\r\n            animationDuration: 500,\r\n            title: {\r\n                text: '',\r\n                fontWeight: 'bold'\r\n            },\r\n            highlight: false\r\n        } as SpinnerOptions;\r\n    }\r\n\r\n    public update(options: SpinnerOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        if (this.options.activeDegree == 100)\r\n            this.options.activeDegree = 99.9999;\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.updateOptions();\r\n    }\r\n\r\n    updateOptions(): void {\r\n        this.setTitle(this.options);\r\n        this.setDiv(this.options);\r\n        this.setCircle();\r\n    }\r\n\r\n    setTitle(options: SpinnerOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        h4.style.color = options.highlight ? options.colors.active : options.colors.default;\r\n        // h4.style.top = ((options.radius) - (options.title.fontSize / 2)) + 'px';\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        h4.textContent = options.title.text;\r\n        // setTimeout(() => {\r\n        //     let h = parseInt(getComputedStyle(h4).height.replace('px', ''));\r\n        //     if (!isNaN(h))\r\n        //         h4.style.top = ((options.radius) - (h / 2)) + 'px';\r\n        // }, 10);\r\n    }\r\n\r\n    setDiv(options: SpinnerOptions) {\r\n        let div = this.element.querySelector('div[data-spinner]');\r\n        let dim = options.radius * 2 + 'px';\r\n        div.style.width = dim;\r\n        div.style.height = dim;\r\n        div.style.transitionDuration = options.animationDuration;\r\n    }\r\n\r\n    init() {\r\n        \r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': `position: absolute; z-index: 10; text-align: center; width: 100%; transition-property: color; margin: 0;top: 50%;left: 0;transform: translateY(-50%);`\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n        \r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative;`,\r\n                'data-spinner': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.setCircle();\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions();\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        this.circleOptions.fromDegree = -this.options.activeDegree / 2;\r\n        this.circleOptions.toDegree = this.options.activeDegree / 2;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle) {\r\n            this.circle.update(this.circleOptions);\r\n        }\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n}","import { TimerOptions, JsonToHtmlElement, CircleOptions, EdgesOptions } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Edges } from './edges';\r\n\r\nexport class Timer {\r\n    private element: any;\r\n    private options: TimerOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    private fullSeconds: number;\r\n    constructor(element: any, options?: TimerOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n        if (this.options.percentage >= 100)\r\n            this.options.percentage = 99.999;\r\n    }\r\n\r\n    init() {\r\n        let currentSeconds = this.common.getSecondsFromTime(this.options.time);\r\n        this.fullSeconds = currentSeconds * 100 / this.options.percentage;\r\n\r\n        let h4 = {\r\n            type: 'h4',\r\n            attrs: {\r\n                'style': 'position: absolute;z-index: 10;text-align: center;width: 100%;top: 50%;transform: translateY(-50%);transition-property: color;left: 0; margin: 0;'\r\n            },\r\n            children: [\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-clock': ''\r\n                    },\r\n                    children: [\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-number': ''\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            children: [\r\n                                {\r\n                                    type: '#text',\r\n                                    text: ':'\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-number': ''\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            children: [\r\n                                {\r\n                                    type: '#text',\r\n                                    text: ':'\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'span',\r\n                            attrs: {\r\n                                'data-number': ''\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'div',\r\n                    attrs: {\r\n                        'data-text': ''\r\n                    }\r\n                }\r\n            ]\r\n        } as JsonToHtmlElement;\r\n        let h4Elem = this.common.jsonToHtml(h4) as any;\r\n\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'style': `position: relative;`,\r\n                'data-spinner': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.appendChild(h4Elem);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n\r\n        setTimeout(() => {\r\n            this.updateTimer();\r\n        }, 1000);\r\n    }\r\n\r\n    public update(options: TimerOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        // this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updatePercentage() {\r\n        this.options.percentage = this.common.getSecondsFromTime(this.options.time) / this.fullSeconds * 100;\r\n    }\r\n\r\n    updateTimer() {\r\n        this.updatePercentage();\r\n        if (this.common.decreaseTime(this.options.time)) {\r\n            // TODO time is up!\r\n            // this.status = 'Time is up!';\r\n            // return this.mode = '';\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                this.updateTimer();\r\n            }, 1000);\r\n        }\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap) {\r\n            this.setWrap(this.options);\r\n            this.setTitle(this.options);\r\n        }\r\n        this.setCircle();\r\n        this.setEdges();\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options, this.edgesOptions);\r\n        this.edgesOptions.minMaxVal = {\r\n            min: this.circleOptions.fromDegree,\r\n            max: this.circleOptions.toDegree,\r\n            value: this.options.percentage\r\n        }\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n\r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n\r\n    setWrap(options: TimerOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    setTitle(options: TimerOptions) {\r\n        let h4 = this.element.querySelector('h4');\r\n        h4.style.color = options.percentage == 0 ? options.colors.active : options.colors.default;\r\n        // h4.style.top = ((options.radius) - (options.title.fontSize / 2)) + 'px';\r\n        h4.style.top = '50%';\r\n        h4.style.transitionDuration = options.animationDuration + 'ms';\r\n        h4.style.fontSize = options.title.fontSize + 'ms';\r\n        h4.style.fontFamily = options.title.fontFamily;\r\n        h4.style.fontWeight = options.title.fontWeight;\r\n        h4.style.letterSpacing = options.title.letterSpacing;\r\n        h4.style.lineHeight = options.title.lineHeight + 'px';\r\n        let spans = h4.querySelectorAll('[data-clock] span[data-number]');\r\n        spans.forEach((element: any) => {\r\n            element.style.color = options.colors.default;\r\n        });\r\n        if (options.percentage > 0) {\r\n            h4.querySelector('[data-clock]').style.display = 'block';\r\n            spans[0].textContent = this.common.padWithZiro(options.time.hours.toString());\r\n            spans[1].textContent = this.common.padWithZiro(options.time.minutes.toString());\r\n            spans[2].textContent = this.common.padWithZiro(options.time.seconds.toString());\r\n            h4.querySelector('[data-text]').textContent = '';\r\n        }\r\n        else {\r\n            h4.querySelector('[data-clock]').style.display = 'none';\r\n            h4.querySelector('[data-text]').textContent = options.title.text;\r\n        }\r\n        // setTimeout(() => {\r\n        //     let h = parseInt(getComputedStyle(h4).height.replace('px', ''));\r\n        //     if (!isNaN(h))\r\n        //         h4.style.top = ((options.radius) - (h / 2)) + 'px';\r\n        // }, 10);\r\n    }\r\n\r\n    getDefaultOptions(): TimerOptions {\r\n        return {\r\n            colors: this.common.getDefaultColors(),\r\n            radius: 88,\r\n            strokeWidth: 6,\r\n            animationDuration: 500,\r\n            title: {\r\n                text: 'time is up!',\r\n                fontSize: 18,\r\n                fontWeight: 'bold',\r\n                letterSpacing: '1px'\r\n            },\r\n            time: {\r\n                hours: 3,\r\n                minutes: 24,\r\n                seconds: 42\r\n            },\r\n            percentage: 99.999,\r\n            showEdges: true\r\n        } as TimerOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        this.circleOptions.fromDegree = 50;\r\n        this.circleOptions.toDegree = this.options.percentage + 50;\r\n\r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n}","import { TuneOptions, CircleOptions, NeedleOptions, JsonToHtmlElement, EdgesOptions, IconOptions, SideState } from './interfaces';\r\nimport { Common } from './common';\r\nimport { Circle } from './circle';\r\nimport { Needle } from './needle';\r\nimport { Edges } from './edges';\r\nimport { Icon } from './icon';\r\n\r\nexport class Tune {\r\n    private element: any;\r\n    private options: TuneOptions;\r\n    private common: Common;\r\n    private circleOptions: CircleOptions;\r\n    private circle: Circle;\r\n    private needleOptions: NeedleOptions;\r\n    private needle: Needle;\r\n    private edgesOptions: EdgesOptions;\r\n    private edges: Edges;\r\n    private iconOptions: IconOptions;\r\n    private icon: Icon;\r\n    constructor(element: any, options?: TuneOptions) {\r\n        this.element = element;\r\n        this.common = new Common();\r\n        // set default options\r\n        let defaultOptions = this.getDefaultOptions();\r\n\r\n        // override defaults with user options\r\n        this.options = this.common.extend(defaultOptions, options);\r\n\r\n        this.fixOptions();\r\n\r\n        this.init();\r\n    }\r\n\r\n    fixOptions() {\r\n        // this.options.title = this.common.setInnerTextDefaults(this.options.title);\r\n        this.options.strokeWidth = this.common.fixStrokeWidth(this.options.strokeWidth);\r\n        this.options.radius = this.common.fixRadius(this.options.radius);\r\n\r\n        // if we're hiding bottom we should take thoes values in to considuration\r\n        if (this.options.hideBottom) {\r\n            let portionToHide = 0.3334;\r\n            this.options.needleOptions.minMaxVal.max = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.max, portionToHide);\r\n            this.options.needleOptions.minMaxVal.min = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.min, portionToHide);\r\n            this.options.needleOptions.minMaxVal.value = this.common.normalizeByPercentage(this.options.needleOptions.minMaxVal.value, portionToHide);\r\n            if (this.options.iconOptions && typeof this.options.iconOptions.degree === 'number')\r\n                this.options.iconOptions.degree = this.common.normalizeByPercentage(this.options.iconOptions.degree, portionToHide);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        let obj = {\r\n            type: 'div',\r\n            attrs: {\r\n                'data-tune': ''\r\n            }\r\n        } as JsonToHtmlElement;\r\n\r\n        let innerElem = this.common.jsonToHtml(obj);\r\n\r\n        this.updateOptions(false);\r\n\r\n        innerElem.appendChild(this.circle.getElement());\r\n        innerElem.appendChild(this.needle.getElement());\r\n        innerElem.appendChild(this.edges.getLeftElement());\r\n        innerElem.appendChild(this.edges.getRightElement());\r\n        innerElem.appendChild(this.icon.getElement());\r\n        \r\n\r\n        this.element.appendChild(innerElem);\r\n\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    public update(options: TuneOptions): void {\r\n        this.options = this.common.extend(this.options, options);\r\n        this.fixOptions();\r\n        this.updateOptions(true);\r\n    }\r\n\r\n    updateOptions(setWrap?: boolean): void {\r\n        if (setWrap)\r\n            this.setWrap(this.options);\r\n        this.setCircle();\r\n        this.setNeedle();\r\n        this.setEdges();\r\n        this.setIcon();\r\n    }\r\n\r\n    setWrap(options: TuneOptions) {\r\n        let wrap = this.element;\r\n        let dim = (options.radius * 2) + 'px';\r\n        wrap.style.width = dim;\r\n        wrap.style.height = dim;\r\n        wrap.style.position = 'relative';\r\n    }\r\n\r\n    getDefaultOptions(): TuneOptions {\r\n        let colors = this.common.getDefaultColors();\r\n        let defRadius = 88, animationDuration = 500;\r\n        return {\r\n            needleOptions: {\r\n                minMaxVal: {\r\n                    min: 30,\r\n                    max: 70,\r\n                    value: 55\r\n                },\r\n                color: colors.active,\r\n                scale: 1.125,\r\n                radius: defRadius,\r\n                animationDuration: animationDuration,\r\n                disabled: false\r\n            },\r\n            iconOptions: {\r\n                animationDuration: animationDuration,\r\n                degree: 50,\r\n                radius: defRadius,\r\n\t\t\t\tradiusOffset: 0,\r\n                src: '',\r\n                dimensions: {\r\n                    width: 25,\r\n                    height: 25\r\n                },\r\n                top: 0,\r\n                left: 0,\r\n                opacity: 1\r\n            },\r\n            colors: colors,\r\n            strokeWidth: 6,\r\n            animationDuration: animationDuration,\r\n            radius: defRadius,\r\n            showEdges: true,\r\n            showIcon: true,\r\n            hollowEdges: SideState.None,\r\n            // title: this.common.setInnerTextDefaults(),\r\n            hideBottom: true,\r\n            backgroundColor: '#ffffff',\r\n            hollowEdgesBgColor: '#ffffff'\r\n        } as TuneOptions;\r\n    }\r\n\r\n    setCircle() {\r\n        this.circleOptions = this.common.extend(this.options, this.circleOptions);\r\n        \r\n        this.circleOptions.fromDegree = this.options.needleOptions.minMaxVal.min;\r\n        this.circleOptions.toDegree = this.options.needleOptions.minMaxVal.max;\r\n        \r\n        this.circleOptions.backgroundColor = this.common.getComputedStyleByParentRec(this.element, 'backgroundColor');\r\n        if (!this.circleOptions.backgroundColor)\r\n            this.circleOptions.backgroundColor = '#fff';\r\n\r\n        if (this.circle)\r\n            this.circle.update(this.circleOptions);\r\n        else\r\n            this.circle = new Circle(this.circleOptions);\r\n    }\r\n\r\n    setNeedle() {\r\n        this.needleOptions = this.common.extend(this.options.needleOptions, this.needleOptions);\r\n        if (!this.options.needleOptions.color)\r\n            this.needleOptions.color = this.common.isInRange(this.options.needleOptions.minMaxVal, this.options.hollowEdges) ? this.options.colors.active : this.options.colors.default;\r\n        if (this.options.needleOptions.minMaxVal.value > 100 || this.options.needleOptions.minMaxVal.value < 0)\r\n            this.needleOptions.color = this.options.colors.inactive;\r\n        else if (this.options.hideBottom) {\r\n            if (this.options.needleOptions.minMaxVal.value >= 83.34 || this.options.needleOptions.minMaxVal.value <= 16.67)\r\n                this.needleOptions.color = this.options.colors.inactive;\r\n        }\r\n        \r\n        if (this.needle) {\r\n            this.needle.update(this.needleOptions);\r\n        }\r\n        else\r\n            this.needle = new Needle(this.needleOptions);\r\n    }\r\n\r\n    setEdges() {\r\n        this.edgesOptions = this.common.extend(this.options.needleOptions, this.edgesOptions);\r\n        this.edgesOptions.strokeWidth = this.options.strokeWidth;\r\n        this.edgesOptions.color = this.options.colors.active;\r\n        this.edgesOptions.hollowEdges = this.options.hollowEdges;\r\n        this.edgesOptions.backgroundColor = this.options.hollowEdgesBgColor;\r\n        \r\n        if (this.edges)\r\n            this.edges.update(this.edgesOptions);\r\n        else\r\n            this.edges = new Edges(this.edgesOptions);\r\n        let left = this.element.querySelector('[data-left-edge]');\r\n        let right = this.element.querySelector('[data-right-edge]');\r\n        if (left && right) {\r\n            if (!this.options.showEdges) {\r\n                left.style.display = 'none';\r\n                right.style.display = 'none';\r\n            }\r\n            else {\r\n                left.style.display = 'inline-block';\r\n                right.style.display = 'inline-block';\r\n            }\r\n        }\r\n    }\r\n\r\n    setIcon() {\r\n        this.iconOptions = this.common.extend(this.options.iconOptions, this.iconOptions);\r\n        \r\n        if (this.icon)\r\n            this.icon.update(this.iconOptions);\r\n        else\r\n            this.icon = new Icon(this.iconOptions);\r\n        let image = this.element.querySelector('[data-icon]');\r\n        if (image) {\r\n            if (!this.options.showIcon || !this.iconOptions.src) \r\n                image.style.display = 'none';\r\n            else\r\n                image.style.display = 'inline-block';\r\n        }\r\n    }\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJpbmRleC50cyIsInNyYy9hbXBtLnRzIiwic3JjL2NpcmNsZS50cyIsInNyYy9jb21tb24udHMiLCJzcmMvZWRnZXMudHMiLCJzcmMvaWNvbi50cyIsInNyYy9pbnRlcmZhY2VzLnRzIiwic3JjL211bHRpdHVuZS50cyIsInNyYy9uZWVkbGUudHMiLCJzcmMvcmFuZ2UudHMiLCJzcmMvc3Bpbm5lci50cyIsInNyYy90aW1lci50cyIsInNyYy90dW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDQUEscUJBQWtDO0FBQXpCLHNCQUFBLEFBQUk7QUFDYix1QkFBc0M7QUFBN0IsMEJBQUEsQUFBTTtBQUNmLDBCQUE0QztBQUFuQyxnQ0FBQSxBQUFTO0FBQ2xCLHNCQUFvQztBQUEzQix3QkFBQSxBQUFLO0FBQ2Qsd0JBQXdDO0FBQS9CLDRCQUFBLEFBQU87QUFDaEIsc0JBQW9DO0FBQTNCLHdCQUFBLEFBQUs7QUFDZCxxQkFBa0M7QUFBekIsc0JBQUEsQUFBSTtBQUNiLDJCQUFtUztBQUFyRixpQ0FBQSxBQUFTOzs7Ozs7QUNOdk4sdUJBQWtDO0FBQ2xDLHVCQUFrQztBQUNsQyx1QkFBa0M7QUFDbEMsc0JBQWdDO0FBRWhDO0FBcUJJLGtCQUFZLEFBQVksU0FBRSxBQUFxQjtBQUMzQyxBQUFJLGFBQUMsQUFBTyxVQUFHLEFBQU8sQUFBQztBQUN2QixBQUFJLGFBQUMsQUFBTSxTQUFHLElBQUksU0FBTSxBQUFFLEFBQUM7QUFDM0IsQUFBc0I7QUFDdEIsWUFBSSxBQUFjLGlCQUFHLEFBQUksS0FBQyxBQUFpQixBQUFFLEFBQUM7QUFFOUMsQUFBc0M7QUFDdEMsQUFBSSxhQUFDLEFBQU8sVUFBRyxBQUFJLEtBQUMsQUFBTSxPQUFDLEFBQU0sT0FBQyxBQUFjLGdCQUFFLEFBQU8sQUFBQyxBQUFDO0FBRTNELEFBQUksYUFBQyxBQUFVLEFBQUUsQUFBQztBQUVsQixBQUFJ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ZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImV4cG9ydCB7IEFtUG0gfSBmcm9tIFwiLi9zcmMvYW1wbVwiO1xyXG5leHBvcnQgeyBDaXJjbGUgfSBmcm9tIFwiLi9zcmMvY2lyY2xlXCI7XHJcbmV4cG9ydCB7IE11bHRpVHVuZSB9IGZyb20gXCIuL3NyYy9tdWx0aXR1bmVcIjtcclxuZXhwb3J0IHsgUmFuZ2UgfSBmcm9tIFwiLi9zcmMvcmFuZ2VcIjtcclxuZXhwb3J0IHsgU3Bpbm5lciB9IGZyb20gXCIuL3NyYy9zcGlubmVyXCI7XHJcbmV4cG9ydCB7IFRpbWVyIH0gZnJvbSBcIi4vc3JjL3RpbWVyXCI7XHJcbmV4cG9ydCB7IFR1bmUgfSBmcm9tIFwiLi9zcmMvdHVuZVwiO1xyXG5leHBvcnQgeyBBbVBtT3B0aW9ucywgQ2lyY2xlT3B0aW9ucywgQ29sb3JQYWxldHRlLCBFZGdlc09wdGlvbnMsIEZyb21UbywgRnJvbVRvU3RyaW5nLCBJY29uT3B0aW9ucywgSW5uZXJUZXh0LCBKc29uVG9IdG1sRWxlbWVudCwgTWluTWF4VmFsLCBNdWx0aXR1bmVPcHRpb25zLCBOZWVkbGVPcHRpb25zLCBOdW1iZXJEYXRhLCBSYW5nZU9wdGlvbnMsIFJHQkEsIFNpZGVTdGF0ZSwgU3Bpbm5lck9wdGlvbnMsIFRpbWUsIFRpbWVyT3B0aW9ucywgVHVuZU9wdGlvbnMgfSBmcm9tIFwiLi9zcmMvaW50ZXJmYWNlc1wiOyIsImltcG9ydCB7IEFtUG1PcHRpb25zLCBDaXJjbGVPcHRpb25zLCBOZWVkbGVPcHRpb25zLCBKc29uVG9IdG1sRWxlbWVudCwgRWRnZXNPcHRpb25zLCBOdW1iZXJEYXRhLCBGcm9tVG8gfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBDb21tb24gfSBmcm9tICcuL2NvbW1vbic7XHJcbmltcG9ydCB7IENpcmNsZSB9IGZyb20gJy4vY2lyY2xlJztcclxuaW1wb3J0IHsgTmVlZGxlIH0gZnJvbSAnLi9uZWVkbGUnO1xyXG5pbXBvcnQgeyBFZGdlcyB9IGZyb20gJy4vZWRnZXMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFtUG0ge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIG9wdGlvbnM6IEFtUG1PcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIHByaXZhdGUgY2lyY2xlT3B0aW9uc0FtOiBDaXJjbGVPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjaXJjbGVBbTogQ2lyY2xlO1xyXG4gICAgcHJpdmF0ZSBjaXJjbGVPcHRpb25zUG06IENpcmNsZU9wdGlvbnM7XHJcbiAgICBwcml2YXRlIGNpcmNsZVBtOiBDaXJjbGU7XHJcbiAgICBwcml2YXRlIGVkZ2VzT3B0aW9uc0FtOiBFZGdlc09wdGlvbnM7XHJcbiAgICBwcml2YXRlIGVkZ2VzQW06IEVkZ2VzO1xyXG4gICAgcHJpdmF0ZSBlZGdlc09wdGlvbnNQbTogRWRnZXNPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBlZGdlc1BtOiBFZGdlcztcclxuICAgIHByaXZhdGUgbmVlZGxlT3B0aW9uczogTmVlZGxlT3B0aW9ucztcclxuICAgIHByaXZhdGUgbmVlZGxlOiBOZWVkbGU7XHJcbiAgICAvLyBwcml2YXRlIGFtTnVtYmVyczogQXJyYXk8TnVtYmVyRGF0YT47XHJcbiAgICAvLyBwcml2YXRlIHBtTnVtYmVyczogQXJyYXk8TnVtYmVyRGF0YT47XHJcbiAgICBwcml2YXRlIG1pbk1heFZhbEFtOiBGcm9tVG87XHJcbiAgICBwcml2YXRlIG1pbk1heFZhbFBtOiBGcm9tVG87XHJcbiAgICBwcml2YXRlIGxvd2VyOiBBcnJheTxOdW1iZXJEYXRhPjtcclxuICAgIHByaXZhdGUgaGlnaGVyOiBBcnJheTxOdW1iZXJEYXRhPjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBhbnksIG9wdGlvbnM/OiBBbVBtT3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcbiAgICAgICAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xyXG4gICAgICAgIGxldCBkZWZhdWx0T3B0aW9ucyA9IHRoaXMuZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgLy8gb3ZlcnJpZGUgZGVmYXVsdHMgd2l0aCB1c2VyIG9wdGlvbnNcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICB0aGlzLnNldE1pbnV0ZXMoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TWludXRlcygpIHtcclxuICAgICAgICBsZXQgYXJyRnJvbSA9IHRoaXMub3B0aW9ucy5mcm9tVG8uZnJvbS5zcGxpdCgnOicpO1xyXG4gICAgICAgIGxldCBhcnJUbyA9IHRoaXMub3B0aW9ucy5mcm9tVG8udG8uc3BsaXQoJzonKTtcclxuICAgICAgICBsZXQgZnJvbU1pbnV0ZXMgPSAwLCB0b01pbnV0ZXMgPSAwLCBmcm9tID0gbnVsbCwgdG8gPSBudWxsO1xyXG5cclxuICAgICAgICBpZiAocGFyc2VJbnQoYXJyRnJvbVswXSkgPD0gMTIgfHwgcGFyc2VJbnQoYXJyVG9bMF0pIDw9IDEyKSB7XHJcbiAgICAgICAgICAgIGZyb21NaW51dGVzID0gdGhpcy5jb21tb24uZ2V0TWludXRlc0Zyb21Ib3VyKHRoaXMub3B0aW9ucy5mcm9tVG8uZnJvbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAocGFyc2VJbnQoYXJyRnJvbVswXSkgPj0gMTIgfHwgcGFyc2VJbnQoYXJyVG9bMF0pID49IDEyKSB7XHJcbiAgICAgICAgICAgIHRvTWludXRlcyA9IHRoaXMuY29tbW9uLmdldE1pbnV0ZXNGcm9tSG91cih0aGlzLm9wdGlvbnMuZnJvbVRvLnRvKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IG1heCA9IDYwICogMTI7XHJcbiAgICAgICAgaWYgKGZyb21NaW51dGVzID4gMCkge1xyXG4gICAgICAgICAgICBmcm9tID0gdGhpcy5jb21tb24uZ2V0TWludXRlc0Zyb21TdGFydCh0aGlzLm9wdGlvbnMuZnJvbVRvLmZyb20sIDApO1xyXG4gICAgICAgICAgICB0byA9IHRoaXMuY29tbW9uLmdldE1pbnV0ZXNGcm9tU3RhcnQodGhpcy5vcHRpb25zLmZyb21Uby50bywgMCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5taW5NYXhWYWxBbSA9IHtcclxuICAgICAgICAgICAgICAgIGZyb206IGZyb20gLyBtYXggKiAxMDAsXHJcbiAgICAgICAgICAgICAgICB0bzogTWF0aC5taW4odG8gLyBtYXggKiAxMDAsIDEwMClcclxuICAgICAgICAgICAgfSBhcyBGcm9tVG87XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodG9NaW51dGVzID4gMCkge1xyXG4gICAgICAgICAgICBmcm9tID0gdGhpcy5jb21tb24uZ2V0TWludXRlc0Zyb21TdGFydCh0aGlzLm9wdGlvbnMuZnJvbVRvLmZyb20sIDYwICogMTIpO1xyXG4gICAgICAgICAgICB0byA9IHRoaXMuY29tbW9uLmdldE1pbnV0ZXNGcm9tU3RhcnQodGhpcy5vcHRpb25zLmZyb21Uby50bywgNjAgKiAxMik7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLm1pbk1heFZhbFBtID0ge1xyXG4gICAgICAgICAgICAgICAgZnJvbTogZnJvbSAvIG1heCAqIDEwMCxcclxuICAgICAgICAgICAgICAgIHRvOiBNYXRoLm1pbih0byAvIG1heCAqIDEwMCwgMTAwKVxyXG4gICAgICAgICAgICB9IGFzIEZyb21UbztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5sb3dlciA9IFtdO1xyXG4gICAgICAgIHRoaXMuaGlnaGVyID0gW107XHJcblxyXG4gICAgICAgIHRoaXMubG93ZXIucHVzaCh7XHJcbiAgICAgICAgICAgIG51bWJlcjogJzAwJyxcclxuICAgICAgICAgICAgaXNBY3RpdmU6IHRoaXMuY29tbW9uLmlzSG91ckluUmFuZ2UodGhpcy5taW5NYXhWYWxBbSwgMCksXHJcbiAgICAgICAgICAgIHJlbWFpbmRlcjogdGhpcy5jb21tb24uZ2V0UmVtYWluZGVyKHRoaXMubWluTWF4VmFsQW0sIDApXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCAyNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChpIDwgMTIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG93ZXIucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiBpLnRvU3RyaW5nKCksXHJcbiAgICAgICAgICAgICAgICAgICAgaXNBY3RpdmU6IHRoaXMuY29tbW9uLmlzSG91ckluUmFuZ2UodGhpcy5taW5NYXhWYWxBbSwgaSksXHJcbiAgICAgICAgICAgICAgICAgICAgcmVtYWluZGVyOiB0aGlzLmNvbW1vbi5nZXRSZW1haW5kZXIodGhpcy5taW5NYXhWYWxBbSwgaSlcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWdoZXIucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiBpLnRvU3RyaW5nKCksXHJcbiAgICAgICAgICAgICAgICAgICAgaXNBY3RpdmU6IHRoaXMuY29tbW9uLmlzSG91ckluUmFuZ2UodGhpcy5taW5NYXhWYWxQbSwgaSAtIDEyKSxcclxuICAgICAgICAgICAgICAgICAgICByZW1haW5kZXI6IHRoaXMuY29tbW9uLmdldFJlbWFpbmRlcih0aGlzLm1pbk1heFZhbEFtLCBpIC0gMTIpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zZXROZWVkbGUoKTtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zZXRNaW51dGVzKCk7XHJcbiAgICAgICAgfSwgNjAwMDApO1xyXG4gICAgfVxyXG5cclxuICAgIHNldE5lZWRsZSgpIHtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgbm93ID0gdGhpcy5jb21tb24uZ2V0SG91cnNBbmRNaW51dGVzTFQobmV3IERhdGUoKSk7XHJcblxyXG4gICAgICAgIGxldCBpc0FtID0gbm93LmluZGV4T2YoJ0FNJykgPiAtMTtcclxuXHJcbiAgICAgICAgbGV0IHJlbGV2YW50SG91cnMgPSBpc0FtID8gdGhpcy5sb3dlciA6IHRoaXMuaGlnaGVyO1xyXG5cclxuICAgICAgICAvLyBsZXQgZGlhbWV0ZXJGb3JOZWVkbGUgPSBpc0FtID8gKHRoaXMub3B0aW9ucy5yYWRpdXMgKiAyKSAtIDIwIDogdGhpcy5vcHRpb25zLnJhZGl1cyAqIDI7XHJcblxyXG4gICAgICAgIHRoaXMubmVlZGxlT3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucywgdGhpcy5uZWVkbGVPcHRpb25zKTtcclxuICAgICAgICBpZiAodGhpcy5lZGdlc09wdGlvbnNBbSAmJiB0aGlzLmVkZ2VzT3B0aW9uc1BtKVxyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZU9wdGlvbnMuY29sb3IgPSB0aGlzLmNvbW1vbi5pc0luUmFuZ2UodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLCAoaXNBbSA/IHRoaXMuZWRnZXNPcHRpb25zQW0uaG9sbG93RWRnZXMgOiB0aGlzLmVkZ2VzT3B0aW9uc1BtLmhvbGxvd0VkZ2VzKSkgPyB0aGlzLm9wdGlvbnMuY29sb3JzLmFjdGl2ZSA6IHRoaXMub3B0aW9ucy5jb2xvcnMuZGVmYXVsdDtcclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLnZhbHVlID4gMTAwIHx8IHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC52YWx1ZSA8IDApXHJcbiAgICAgICAgICAgIHRoaXMubmVlZGxlT3B0aW9ucy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvcnMuaW5hY3RpdmU7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVsZXZhbnRIb3Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAocmVsZXZhbnRIb3Vyc1tpXS5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGN1cnJlbnQgPSAoaSAqICgxMDAgLyAxMikpICsgcmVsZXZhbnRIb3Vyc1tpXS5yZW1haW5kZXI7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC5taW4gPT09IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC5taW4gPSBjdXJyZW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC5tYXggPSBjdXJyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5uZWVkbGUpXHJcbiAgICAgICAgICAgIHRoaXMubmVlZGxlLnVwZGF0ZSh0aGlzLm5lZWRsZU9wdGlvbnMpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5uZWVkbGUgPSBuZXcgTmVlZGxlKHRoaXMubmVlZGxlT3B0aW9ucyk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyB0aGlzLm5lZWRsZSA9IHtcclxuICAgICAgICAgICAgLy8gICAgIG1pbk1heFZhbDoge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIG1pbjogbnVsbCxcclxuICAgICAgICAgICAgLy8gICAgICAgICBtYXg6IG51bGwsXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdmFsdWU6IHRoaXMucGlTZXJ2aWNlLmdldEN1cnJlbnRUaW1lUGVyY2VudGFnZSgpXHJcbiAgICAgICAgICAgIC8vICAgICB9LFxyXG4gICAgICAgICAgICAvLyAgICAgY29sb3I6IG51bGxcclxuICAgICAgICAgICAgLy8gfTtcclxuICAgICAgICBcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgLy8gdGhpcy5uZWVkbGVTdHlsZUlubmVyID0gdGhpcy5jb21tb24uZ2V0TmVlZGxlSW5uZXJTdHlsZSh0aGlzLmRpYW1ldGVyKTtcclxuICAgICAgICAvLyB0aGlzLm5lZWRsZVN0eWxlID0gdGhpcy5waVNlcnZpY2UuZ2V0U3R5bGVCeVBlcmNlbnRhZ2UodGhpcy5kaWFtZXRlciwgdGhpcy5uaWRkbGUubWluTWF4VmFsLnZhbHVlLCBpc0FtKTtcclxuICAgICAgICAvLyB0aGlzLm5lZWRsZS5jb2xvciA9IHRoaXMucGlTZXJ2aWNlLmdldENvbG9yKHRoaXMubmlkZGxlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBpbml0TnVtYmVycyhudW1iZXJzOiBBcnJheTxOdW1iZXJEYXRhPikge1xyXG4gICAgLy8gICAgIG51bWJlcnMucHVzaCh7XHJcbiAgICAvLyAgICAgICAgIG51bWJlcjogJzAwJyxcclxuICAgIC8vICAgICAgICAgaXNBY3RpdmU6IHRoaXMuY29tbW9uLmlzSG91ckluUmFuZ2UodGhpcy5taW5NYXhWYWxBbSwgMCksXHJcbiAgICAvLyAgICAgICAgIHJlbWFpbmRlcjogdGhpcy5jb21tb24uZ2V0UmVtYWluZGVyKHRoaXMubWluTWF4VmFsQW0sIDApXHJcbiAgICAvLyAgICAgfSk7XHJcbiAgICAvLyAgICAgbnVtYmVycy5wdXNoKHtcclxuXHJcbiAgICAvLyAgICAgfSk7XHJcbiAgICAvLyAgICAgLy8gdGhpcy5hbU51bWJlcnMuXHJcbiAgICAvLyB9XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICAvLyB0aGlzLmFtTnVtYmVycyA9IFtdO1xyXG4gICAgICAgIC8vIHRoaXMuaW5pdE51bWJlcnModGhpcy5hbU51bWJlcnMpO1xyXG5cclxuICAgICAgICBsZXQgaW5uZXJFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbCh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdkaXYnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogJ3Bvc2l0aW9uOiByZWxhdGl2ZTsnLFxyXG4gICAgICAgICAgICAgICAgJ2RhdGEtYW1wbSc6ICcnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYW0td3JhcCc6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiAncG9zaXRpb246IGFic29sdXRlJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtcG0td3JhcCc6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiAncG9zaXRpb246IGFic29sdXRlJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtbmVlZGxlLXdyYXAnOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogJ3Bvc2l0aW9uOiBhYnNvbHV0ZSdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IGFtV3JhcCA9IHtcclxuICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICBzdHlsZTogJ3Bvc2l0aW9uOiBhYnNvbHV0ZTtoZWlnaHQ6IDYwcHg7dG9wOiA2NXB4O2xlZnQ6IDEwNXB4O2NvbG9yOiAjQ0JDQkNCO2ZvbnQtc2l6ZTogMTZweDt6LWluZGV4OiAzMCcsXHJcbiAgICAgICAgICAgICAgICAnZGF0YS1hbS1udW1iZXJzJzogJydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY2hpbGRyZW46IFtdXHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubG93ZXIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgYW1XcmFwLmNoaWxkcmVuLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3NwYW4nLFxyXG4gICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgaGVpZ2h0OiAxMDAlO3Bvc2l0aW9uOiBhYnNvbHV0ZTt3aWR0aDogMjBweDtsZWZ0OiAwO3RvcDogMDt0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b20gY2VudGVyO3RleHQtYWxpZ246IGNlbnRlcjt0cmFuc2Zvcm06IHJvdGF0ZSgke2kgKiAzMH1kZWcpO2AsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEtbnVtJzogaVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgdHJhbnNmb3JtOiByb3RhdGUoLSR7aSAqIDMwfWRlZyk7ZGlzcGxheTogYmxvY2s7YFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICcjdGV4dCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogdGhpcy5sb3dlcltpXS5udW1iZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgcG1XcmFwID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgIHN0eWxlOiAncG9zaXRpb246IGFic29sdXRlO2hlaWdodDogMTEwcHg7Y29sb3I6ICNDQkNCQ0I7Zm9udC1zaXplOiAxNnB4OycsXHJcbiAgICAgICAgICAgICAgICAnZGF0YS1wbS1udW1iZXJzJzogJydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY2hpbGRyZW46IFtdXHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaGlnaGVyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHBtV3JhcC5jaGlsZHJlbi5wdXNoKHtcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYGhlaWdodDogMTAwJTtwb3NpdGlvbjogYWJzb2x1dGU7d2lkdGg6IDIwcHg7bGVmdDogMDt0b3A6IDA7dHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGNlbnRlcjt0ZXh0LWFsaWduOiBjZW50ZXI7dHJhbnNmb3JtOiByb3RhdGUoJHtpICogMzB9ZGVnKTtgLFxyXG4gICAgICAgICAgICAgICAgICAgICdkYXRhLW51bSc6IGlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NwYW4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYHRyYW5zZm9ybTogcm90YXRlKC0ke2kgKiAzMH1kZWcpO2Rpc3BsYXk6IGJsb2NrO2BcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnI3RleHQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHRoaXMuaGlnaGVyW2ldLm51bWJlclxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyhmYWxzZSk7XHJcblxyXG4gICAgICAgIGlubmVyRWxlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1hbS13cmFwXScpLmFwcGVuZENoaWxkKHRoaXMuY29tbW9uLmpzb25Ub0h0bWwoYW1XcmFwKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFtLXdyYXBdJykuYXBwZW5kQ2hpbGQodGhpcy5jaXJjbGVBbS5nZXRFbGVtZW50KCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1hbS13cmFwXScpLmFwcGVuZENoaWxkKHRoaXMuZWRnZXNBbS5nZXRMZWZ0RWxlbWVudCgpKTtcclxuICAgICAgICBpbm5lckVsZW0ucXVlcnlTZWxlY3RvcignW2RhdGEtYW0td3JhcF0nKS5hcHBlbmRDaGlsZCh0aGlzLmVkZ2VzQW0uZ2V0UmlnaHRFbGVtZW50KCkpO1xyXG5cclxuICAgICAgICBpbm5lckVsZW0ucXVlcnlTZWxlY3RvcignW2RhdGEtcG0td3JhcF0nKS5hcHBlbmRDaGlsZCh0aGlzLmNvbW1vbi5qc29uVG9IdG1sKHBtV3JhcCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wbS13cmFwXScpLmFwcGVuZENoaWxkKHRoaXMuY2lyY2xlUG0uZ2V0RWxlbWVudCgpKTtcclxuICAgICAgICBpbm5lckVsZW0ucXVlcnlTZWxlY3RvcignW2RhdGEtcG0td3JhcF0nKS5hcHBlbmRDaGlsZCh0aGlzLmVkZ2VzUG0uZ2V0TGVmdEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXBtLXdyYXBdJykuYXBwZW5kQ2hpbGQodGhpcy5lZGdlc1BtLmdldFJpZ2h0RWxlbWVudCgpKTtcclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgaW5uZXJFbGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5lZWRsZS13cmFwXScpLmFwcGVuZENoaWxkKHRoaXMubmVlZGxlLmdldEVsZW1lbnQoKSk7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChpbm5lckVsZW0pO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnModHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TnVtYmVycygpIHtcclxuICAgICAgICBsZXQgcG1OdW1iZXJzID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXBtLW51bWJlcnNdJyk7XHJcbiAgICAgICAgaWYgKCFwbU51bWJlcnMpIHJldHVybjtcclxuICAgICAgICBwbU51bWJlcnMuc3R5bGUubGVmdCA9ICgoKHRoaXMub3B0aW9ucy5yYWRpdXMgKiAyKSAvIDEuNjcpIC0gMzApICsgJ3B4JztcclxuICAgICAgICBwbU51bWJlcnMuc3R5bGUudG9wID0gJy0yMHB4JztcclxuICAgIH1cclxuXHJcbiAgICBzZXRDaXJjbGVzKCkge1xyXG4gICAgICAgIGxldCBzZXRDaXJjbGUgPSAocHJlZml4OiBzdHJpbmcpID0+IHtcclxuICAgICAgICAgICAgdGhpc1snY2lyY2xlT3B0aW9ucycgKyBwcmVmaXhdID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgdGhpc1snY2lyY2xlT3B0aW9ucycgKyBwcmVmaXhdLCB0cnVlKTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgdGhpc1snY2lyY2xlT3B0aW9ucycgKyBwcmVmaXhdLmZyb21EZWdyZWUgPSB0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwubWluO1xyXG4gICAgICAgICAgICB0aGlzWydjaXJjbGVPcHRpb25zJyArIHByZWZpeF0udG9EZWdyZWUgPSB0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwubWF4O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpc1snY2lyY2xlT3B0aW9ucycgKyBwcmVmaXhdLmJhY2tncm91bmRDb2xvciA9IHRoaXMuY29tbW9uLmdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyh0aGlzLmVsZW1lbnQsICdiYWNrZ3JvdW5kQ29sb3InKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzWydjaXJjbGVPcHRpb25zJyArIHByZWZpeF0uYmFja2dyb3VuZENvbG9yKVxyXG4gICAgICAgICAgICAgICAgdGhpc1snY2lyY2xlT3B0aW9ucycgKyBwcmVmaXhdLmJhY2tncm91bmRDb2xvciA9ICcjZmZmJztcclxuXHJcbiAgICAgICAgICAgIGlmIChwcmVmaXggPT0gJ0FtJylcclxuICAgICAgICAgICAgICAgIHRoaXNbJ2NpcmNsZU9wdGlvbnMnICsgcHJlZml4XS5yYWRpdXMgPSB0aGlzLm9wdGlvbnMucmFkaXVzIC0gKHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpc1snY2lyY2xlJyArIHByZWZpeF0pIHtcclxuICAgICAgICAgICAgICAgIHRoaXNbJ2NpcmNsZScgKyBwcmVmaXhdLnVwZGF0ZSh0aGlzWydjaXJjbGVPcHRpb25zJyArIHByZWZpeF0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXNbJ2NpcmNsZScgKyBwcmVmaXhdID0gbmV3IENpcmNsZSh0aGlzWydjaXJjbGVPcHRpb25zJyArIHByZWZpeF0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHNldENpcmNsZSgnQW0nKTtcclxuICAgICAgICBzZXRDaXJjbGUoJ1BtJyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RWRnZXMoKSB7XHJcbiAgICAgICAgbGV0IHNldEVkZ2UgPSAocHJlZml4OiBzdHJpbmcpID0+IHtcclxuICAgICAgICAgICAgdGhpc1snZWRnZXNPcHRpb25zJyArIHByZWZpeF0gPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMsIHRoaXNbJ2VkZ2VzT3B0aW9ucycgKyBwcmVmaXhdLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpc1snZWRnZXNPcHRpb25zJyArIHByZWZpeF0uc3Ryb2tlV2lkdGggPSB0aGlzLm9wdGlvbnMuc3Ryb2tlV2lkdGg7XHJcbiAgICAgICAgICAgIHRoaXNbJ2VkZ2VzT3B0aW9ucycgKyBwcmVmaXhdLmNvbG9yID0gdGhpcy5vcHRpb25zLmNvbG9ycy5hY3RpdmU7XHJcbiAgICAgICAgICAgIHRoaXNbJ2VkZ2VzT3B0aW9ucycgKyBwcmVmaXhdLmhvbGxvd0VkZ2VzID0gdGhpcy5vcHRpb25zWydob2xsb3dFZGdlcycgKyAgKyBwcmVmaXhdO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKHRoaXNbJ2VkZ2VzJyArIHByZWZpeF0pXHJcbiAgICAgICAgICAgICAgICB0aGlzWydlZGdlcycgKyBwcmVmaXhdLnVwZGF0ZSh0aGlzWydlZGdlc09wdGlvbnMnICsgcHJlZml4XSk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXNbJ2VkZ2VzJyArIHByZWZpeF0gPSBuZXcgRWRnZXModGhpc1snZWRnZXNPcHRpb25zJyArIHByZWZpeF0pO1xyXG4gICAgICAgICAgICBsZXQgbGVmdCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1sZWZ0LWVkZ2VdJyk7XHJcbiAgICAgICAgICAgIGxldCByaWdodCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1yaWdodC1lZGdlXScpO1xyXG4gICAgICAgICAgICBpZiAobGVmdCAmJiByaWdodCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnNbJ3Nob3dFZGdlcycgKyBwcmVmaXhdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0LnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgICAgICAgICAgICByaWdodC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNldEVkZ2UoJ0FtJyk7XHJcbiAgICAgICAgc2V0RWRnZSgnUG0nKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IEFtUG1PcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZU9wdGlvbnMoc2V0V3JhcD86IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgICAgICBpZiAoc2V0V3JhcClcclxuICAgICAgICAgICAgdGhpcy5zZXRXcmFwKHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5zZXRDaXJjbGVzKCk7XHJcbiAgICAgICAgdGhpcy5zZXROZWVkbGUoKTtcclxuICAgICAgICB0aGlzLnNldE51bWJlcnMoKTtcclxuICAgICAgICB0aGlzLnNldEVkZ2VzKCk7XHJcbiAgICAgICAgdGhpcy5zZXROZWVkbGUoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRXcmFwKG9wdGlvbnM6IEFtUG1PcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IHdyYXAgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IGRpbSA9IChvcHRpb25zLnJhZGl1cyAqIDIpICsgJ3B4JztcclxuICAgICAgICB3cmFwLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xyXG4gICAgICAgIGxldCB0b3BMZWZ0RGltID0gKG9wdGlvbnMucmFkaXVzIC8gMy41KSArICdweCc7XHJcblxyXG4gICAgICAgIGxldCBhbVdyYXAgPSB3cmFwLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFtLXdyYXBdJyk7XHJcbiAgICAgICAgYW1XcmFwLnN0eWxlLnRvcCA9ICgob3B0aW9ucy5yYWRpdXMgLyAzLjUpICsgKG9wdGlvbnMuc3Ryb2tlV2lkdGggKiAyKSkgKyAncHgnO1xyXG4gICAgICAgIGFtV3JhcC5zdHlsZS5sZWZ0ID0gKChvcHRpb25zLnJhZGl1cyAvIDMuNSkgKyAob3B0aW9ucy5zdHJva2VXaWR0aCAqIDIpKSArICdweCc7XHJcbiAgICAgICAgYW1XcmFwLnN0eWxlLnpJbmRleCA9ICcyMCc7XHJcbiAgICAgICAgLy8gbGV0IGFtQ2lyY2xlID0gYW1XcmFwLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNpcmNsZV0nKVxyXG4gICAgICAgIGxldCBhbU51bWJlcnMgPSBhbVdyYXAucXVlcnlTZWxlY3RvcignW2RhdGEtYW0tbnVtYmVycycpO1xyXG4gICAgICAgIGFtTnVtYmVycy5zdHlsZS50b3AgPSAob3B0aW9ucy5zdHJva2VXaWR0aCAqIDMpICsgJ3B4JztcclxuICAgICAgICBhbU51bWJlcnMuc3R5bGUubGVmdCA9IChvcHRpb25zLnJhZGl1cyAtIG9wdGlvbnMuc3Ryb2tlV2lkdGggKiAzKSArICdweCc7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHBtV3JhcCA9IHdyYXAucXVlcnlTZWxlY3RvcignW2RhdGEtcG0td3JhcF0nKTtcclxuICAgICAgICAvLyBsZXQgcG1DaXJjbGUgPSBwbVdyYXAucXVlcnlTZWxlY3RvcignW2RhdGEtY2lyY2xlXScpXHJcbiAgICAgICAgcG1XcmFwLnN0eWxlLnRvcCA9IHRvcExlZnREaW07XHJcbiAgICAgICAgcG1XcmFwLnN0eWxlLmxlZnQgPSB0b3BMZWZ0RGltO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBcclxuICAgICAgICBsZXQgbldyYXAgPSB3cmFwLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5lZWRsZS13cmFwXScpO1xyXG4gICAgICAgIG5XcmFwLnN0eWxlLnRvcCA9IHRvcExlZnREaW07XHJcbiAgICAgICAgbldyYXAuc3R5bGUubGVmdCA9ICgob3B0aW9ucy5yYWRpdXMgLyAzLjUpICsgb3B0aW9ucy5yYWRpdXMpICsgJ3B4JztcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBnZXREZWZhdWx0T3B0aW9ucygpOiBBbVBtT3B0aW9ucyB7XHJcbiAgICAgICAgbGV0IGFuaW1hdGlvbkR1cmF0aW9uID0gNTAwLCByYWRpdXMgPSA4ODtcclxuICAgICAgICBsZXQgY29sb3JzID0gdGhpcy5jb21tb24uZ2V0RGVmYXVsdENvbG9ycygpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGZyb21Ubzoge1xyXG4gICAgICAgICAgICAgICAgZnJvbTogJzM6NTInLFxyXG4gICAgICAgICAgICAgICAgdG86ICcxNDoyMCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcmFkaXVzOiByYWRpdXMsXHJcbiAgICAgICAgICAgIGNvbG9yczogY29sb3JzLFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogNixcclxuICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxyXG4gICAgICAgICAgICBuZWVkbGVPcHRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogYW5pbWF0aW9uRHVyYXRpb24sXHJcbiAgICAgICAgICAgICAgICBjb2xvcjogY29sb3JzLmFjdGl2ZSxcclxuICAgICAgICAgICAgICAgIHJhZGl1czogcmFkaXVzLFxyXG4gICAgICAgICAgICAgICAgc2NhbGU6IDEuMTI1LFxyXG4gICAgICAgICAgICAgICAgbWluTWF4VmFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAzLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMTQsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDE0XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IENpcmNsZU9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBDb21tb24gfSBmcm9tICcuL2NvbW1vbic7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2lyY2xlIHtcclxuICAgIHByaXZhdGUgZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgb3B0aW9uczogQ2lyY2xlT3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuY29tbW9uID0gbmV3IENvbW1vbigpO1xyXG5cclxuICAgICAgICB0aGlzLmluamVjdENzcygpO1xyXG5cclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbmplY3RDc3MoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGNsYXNzTmFtZSA9ICdfYWxsLWdhdWdlLWpzLWNpcmNsZS1zdHlsZSc7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy4nICsgY2xhc3NOYW1lKSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBsZXQgc3R5bGUgPSBgQGtleWZyYW1lcyBhbGxHYXVnZVJvdGF0aW5nQ2lyY2xlIHtcclxuICAgICAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0byB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWA7XHJcblxyXG4gICAgICAgIGxldCBzaGVldCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgICAgc2hlZXQuaW5uZXJIVE1MID0gc3R5bGU7XHJcbiAgICAgICAgc2hlZXQuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2hlZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUob3B0aW9uczogQ2lyY2xlT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZU9wdGlvbnMoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXRTdmcodGhpcy5vcHRpb25zKTtcclxuICAgICAgICB0aGlzLnNldEVsZW1lbnRzKHRoaXMub3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0U3ZnKG9wdGlvbnM6IENpcmNsZU9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICBsZXQgc3RhcnRBbmdsZSA9IChvcHRpb25zLmZyb21EZWdyZWUgLSA1MCkgKiAzLjYsIGVuZEFuZ2xlID0gKG9wdGlvbnMudG9EZWdyZWUgLSA1MCkgKiAzLjY7XHJcbiAgICAgICAgbGV0IGQgPSB0aGlzLmRlc2NyaWJlQXJjKG9wdGlvbnMucmFkaXVzLCBvcHRpb25zLnJhZGl1cywgb3B0aW9ucy5yYWRpdXMgLSAob3B0aW9ucy5zdHJva2VXaWR0aCAvIDIpLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSk7XHJcblxyXG4gICAgICAgIGxldCBzdmcgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3Rvcignc3ZnJyk7XHJcbiAgICAgICAgbGV0IGRpbSA9IG9wdGlvbnMucmFkaXVzICogMjtcclxuICAgICAgICBzdmcuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgICAgICBzdmcuc3R5bGUud2lkdGggPSBkaW0gKyAncHgnO1xyXG4gICAgICAgIHN2Zy5zdHlsZS5oZWlnaHQgPSBkaW0gKyAncHgnO1xyXG4gICAgICAgIHN2Zy5zdHlsZS5hbmltYXRpb24gPSBgYWxsR2F1Z2VSb3RhdGluZ0NpcmNsZSAke29wdGlvbnMucm90YXRpb25TcGVlZH1tcyBsaW5lYXIgaW5maW5pdGVgO1xyXG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnd2lkdGgnLCBkaW0gKyAncHgnKTtcclxuICAgICAgICBzdmcuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2hlaWdodCcsIGRpbSArICdweCcpO1xyXG4gICAgICAgIGxldCBwYXRoID0gc3ZnLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFyY10nKTtcclxuICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2UnLCBvcHRpb25zLmNvbG9ycy5hY3RpdmUpO1xyXG4gICAgICAgIHBhdGguc2V0QXR0cmlidXRlTlMobnVsbCwgJ3N0cm9rZS13aWR0aCcsIG9wdGlvbnMuc3Ryb2tlV2lkdGgpO1xyXG4gICAgICAgIHBhdGguc2V0QXR0cmlidXRlTlMobnVsbCwgJ2QnLCBkKTtcclxuICAgICAgICBwYXRoLnN0eWxlLnN0cm9rZVdpZHRoID0gb3B0aW9ucy5zdHJva2VXaWR0aCArICdweCc7XHJcbiAgICAgICAgcGF0aC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uO1xyXG5cclxuICAgICAgICBsZXQgY29uY2VhbGVyID0gc3ZnLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNvbmNlYWxlcl0nKTtcclxuICAgICAgICBpZiAob3B0aW9ucy5oaWRlQm90dG9tKSB7XHJcbiAgICAgICAgICAgIHN0YXJ0QW5nbGUgPSAoMzMuMzM0KSAqIDMuNiwgZW5kQW5nbGUgPSAoNjYuNjY3KSAqIDMuNjtcclxuICAgICAgICAgICAgZCA9IHRoaXMuZGVzY3JpYmVBcmMob3B0aW9ucy5yYWRpdXMsIG9wdGlvbnMucmFkaXVzLCBvcHRpb25zLnJhZGl1cyAtIChvcHRpb25zLnN0cm9rZVdpZHRoIC8gMiksIHN0YXJ0QW5nbGUsIGVuZEFuZ2xlKTtcclxuICAgICAgICAgICAgY29uY2VhbGVyLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2Utd2lkdGgnLCBvcHRpb25zLnN0cm9rZVdpZHRoICsgMik7XHJcbiAgICAgICAgICAgIGNvbmNlYWxlci5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnZCcsIGQpO1xyXG4gICAgICAgICAgICBjb25jZWFsZXIuc3R5bGUuc3Ryb2tlV2lkdGggPSAob3B0aW9ucy5zdHJva2VXaWR0aCArIDIpICsgJ3B4JztcclxuICAgICAgICAgICAgY29uY2VhbGVyLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICAgICAgICAgICAgbGV0IGJnQ29sb3IgPSBvcHRpb25zLmJhY2tncm91bmRDb2xvcjtcclxuICAgICAgICAgICAgaWYgKCFiZ0NvbG9yKVxyXG4gICAgICAgICAgICAgICAgYmdDb2xvciA9IHRoaXMuY29tbW9uLmdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyh0aGlzLmVsZW1lbnQsICdiYWNrZ3JvdW5kQ29sb3InKTtcclxuICAgICAgICAgICAgaWYgKCFiZ0NvbG9yKVxyXG4gICAgICAgICAgICAgICAgYmdDb2xvciA9ICcjZmZmZmZmJztcclxuICAgICAgICAgICAgY29uY2VhbGVyLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2UnLCBiZ0NvbG9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICBjb25jZWFsZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIH1cclxuXHJcbiAgICBzZXRFbGVtZW50cyhvcHRpb25zOiBDaXJjbGVPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgLy8gbGV0IGNpcmNsZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdkaXZbZGF0YS1jaXJjbGVdJyk7XHJcbiAgICAgICAgbGV0IGNpcmNsZSA9IHRoaXMuZWxlbWVudC5jaGlsZHJlblswXTtcclxuICAgICAgICBsZXQgZGltID0gdGhpcy5vcHRpb25zLnJhZGl1cyAqIDIgKyAncHgnO1xyXG4gICAgICAgIGNpcmNsZS5zdHlsZS53aWR0aCA9IGRpbTtcclxuICAgICAgICBjaXJjbGUuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIGNpcmNsZS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uO1xyXG5cclxuICAgICAgICBsZXQgYzEgPSBjaXJjbGUucXVlcnlTZWxlY3RvcignW2RhdGEtYzFdJyk7XHJcbiAgICAgICAgYzEuc3R5bGUud2lkdGggPSBkaW07XHJcbiAgICAgICAgYzEuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIGMxLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvcnMuaW5hY3RpdmU7XHJcbiAgICAgICAgYzEuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgYzMgPSBjaXJjbGUucXVlcnlTZWxlY3RvcignW2RhdGEtYzNdJyk7XHJcbiAgICAgICAgZGltID0gKChvcHRpb25zLnJhZGl1cyAqIDIpIC0gKG9wdGlvbnMuc3Ryb2tlV2lkdGggKiAyKSkgKyAncHgnO1xyXG4gICAgICAgIGMzLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIGMzLnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICBjMy5zdHlsZS50b3AgPSBvcHRpb25zLnN0cm9rZVdpZHRoICsgJ3B4JztcclxuICAgICAgICBjMy5zdHlsZS5sZWZ0ID0gb3B0aW9ucy5zdHJva2VXaWR0aCArICdweCc7XHJcbiAgICAgICAgYzMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gb3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3I7XHJcbiAgICAgICAgYzMuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuY29tbW9uLmpzb25Ub0h0bWwoe1xyXG4gICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICdzdHlsZSc6IGBwb3NpdGlvbjogcmVsYXRpdmU7IG1hcmdpbjogYXV0bzsgZGlzcGxheTogYmxvY2s7YCxcclxuICAgICAgICAgICAgICAgICdkYXRhLWNpcmNsZSc6ICd0cnVlJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdkaXYnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYzEnOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgcG9zaXRpb246IGFic29sdXRlO3RvcDogMDsgbGVmdDogMDsgei1pbmRleDogMTsgYm9yZGVyLXJhZGl1czogNTAlO2BcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N2ZycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzdHlsZSc6IGBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDtsZWZ0OiAwOyB6LWluZGV4OiAyOyBib3JkZXItcmFkaXVzOiB1bnNldDtgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwYXRoJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmaWxsJzogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYXJjJzogJydcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGF0aCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZmlsbCc6ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLWNvbmNlYWxlcic6ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtYzMnOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiBgcG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAzOyBib3JkZXItcmFkaXVzOiA1MCU7YFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHBvbGFyVG9DYXJ0ZXNpYW4oY2VudGVyWDogbnVtYmVyLCBjZW50ZXJZOiBudW1iZXIsIHJhZGl1czogbnVtYmVyLCBhbmdsZUluRGVncmVlczogbnVtYmVyKTogYW55IHtcclxuICAgICAgICB2YXIgYW5nbGVJblJhZGlhbnMgPSAoYW5nbGVJbkRlZ3JlZXMgLSA5MCkgKiBNYXRoLlBJIC8gMTgwLjA7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgeDogY2VudGVyWCArIChyYWRpdXMgKiBNYXRoLmNvcyhhbmdsZUluUmFkaWFucykpLFxyXG4gICAgICAgICAgICB5OiBjZW50ZXJZICsgKHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlSW5SYWRpYW5zKSlcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGRlc2NyaWJlQXJjKHg6IG51bWJlciwgeTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgc3RhcnRBbmdsZTogbnVtYmVyLCBlbmRBbmdsZTogbnVtYmVyKTogYW55IHtcclxuICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLnBvbGFyVG9DYXJ0ZXNpYW4oeCwgeSwgcmFkaXVzLCBlbmRBbmdsZSk7XHJcbiAgICAgICAgdmFyIGVuZCA9IHRoaXMucG9sYXJUb0NhcnRlc2lhbih4LCB5LCByYWRpdXMsIHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgIHZhciBsYXJnZUFyY0ZsYWcgPSBlbmRBbmdsZSAtIHN0YXJ0QW5nbGUgPD0gMTgwID8gXCIwXCIgOiBcIjFcIjtcclxuICAgICAgICB2YXIgZCA9IFtcclxuICAgICAgICAgICAgXCJNXCIsIHN0YXJ0LngsIHN0YXJ0LnksXHJcbiAgICAgICAgICAgIFwiQVwiLCByYWRpdXMsIHJhZGl1cywgMCwgbGFyZ2VBcmNGbGFnLCAwLCBlbmQueCwgZW5kLnlcclxuICAgICAgICBdLmpvaW4oXCIgXCIpO1xyXG4gICAgICAgIHJldHVybiBkO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRFbGVtZW50KCk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudDtcclxuICAgIH1cclxufSIsImltcG9ydCB7IEpzb25Ub0h0bWxFbGVtZW50LCBSR0JBLCBJbm5lclRleHQsIENvbG9yUGFsZXR0ZSwgTWluTWF4VmFsLCBGcm9tVG8sIFRpbWUsIFNpZGVTdGF0ZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29tbW9uIHtcclxuICAgIHN0YXRpYyBOYW1lU3BhY2VFbGVtZW50czogQXJyYXk8c3RyaW5nPiA9IFsnc3ZnJywgJ3BhdGgnLCAnZyddO1xyXG4gICAgc3RhdGljIHhtbG5zOiBzdHJpbmcgPSBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XHJcbiAgICAvLyBzdGF0aWMgbmVlZGxlV2lkdGhIZWlnaHRSYXRpbzogbnVtYmVyID0gOS4xMDcxMjc4Mzk1NDc4MjU7XHJcbiAgICBzdGF0aWMgbmVlZGxlV2lkdGhIZWlnaHRSYXRpbzogbnVtYmVyID0gOC42OTMyMjIzOTEyNjtcclxuICAgIGV4dGVuZChzcmM6IGFueSwgZGVzdDogYW55LCBjb3B5PzogYm9vbGVhbik6IGFueSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiBzcmMpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzcmNbaV0gPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGVzdCAmJiBkZXN0W2ldKVxyXG4gICAgICAgICAgICAgICAgICAgIHNyY1tpXSA9IHRoaXMuZXh0ZW5kKHNyY1tpXSwgZGVzdFtpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRlc3QgPT09ICdvYmplY3QnICYmIHR5cGVvZiBkZXN0W2ldICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAgICAgc3JjW2ldID0gZGVzdFtpXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY29weSlcclxuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3JjKSk7XHJcbiAgICAgICAgcmV0dXJuIHNyYztcclxuICAgIH1cclxuXHJcbiAgICBqc29uVG9IdG1sKG9iajogSnNvblRvSHRtbEVsZW1lbnQpOiBhbnkge1xyXG4gICAgICAgIGxldCBlbG0gPSBudWxsLCBpc05zRWxlbSA9IENvbW1vbi5OYW1lU3BhY2VFbGVtZW50cy5maWx0ZXIoeCA9PiB4ID09IG9iai50eXBlKS5sZW5ndGggPiAwO1xyXG4gICAgICAgIGlmIChpc05zRWxlbSlcclxuICAgICAgICAgICAgZWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKENvbW1vbi54bWxucywgb2JqLnR5cGUpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgZWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChvYmoudHlwZSk7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiBvYmouYXR0cnMpIHtcclxuICAgICAgICAgICAgaWYgKGlzTnNFbGVtKVxyXG4gICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZU5TKG51bGwsIGksIG9iai5hdHRyc1tpXSk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIGVsbS5zZXRBdHRyaWJ1dGUoaSwgb2JqLmF0dHJzW2ldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiBvYmouY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgbGV0IG5ld0VsZW0gPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAob2JqLmNoaWxkcmVuW2ldLnR5cGUgPT0gJyN0ZXh0JylcclxuICAgICAgICAgICAgICAgIG5ld0VsZW0gPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShvYmouY2hpbGRyZW5baV0udGV4dCk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIG5ld0VsZW0gPSB0aGlzLmpzb25Ub0h0bWwob2JqLmNoaWxkcmVuW2ldKTtcclxuICAgICAgICAgICAgaWYgKChuZXdFbGVtICYmIG5ld0VsZW0udGFnTmFtZSAmJiBuZXdFbGVtLnRhZ05hbWUudG9Mb3dlckNhc2UoKSAhPT0gJ3VuZGVmaW5lZCcpIHx8IG5ld0VsZW0ubm9kZVR5cGUgPT0gMylcclxuICAgICAgICAgICAgICAgIGVsbS5hcHBlbmRDaGlsZChuZXdFbGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGVsbTtcclxuICAgIH1cclxuXHJcbiAgICBpc0hleChzdHI6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBzdHIuaW5kZXhPZignIycpID4gLTE7XHJcbiAgICB9XHJcblxyXG4gICAgaXNSZ2JhKHN0cjogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0ci5zcGxpdCgnLCcpLmxlbmd0aCA+IDM7XHJcbiAgICB9XHJcblxyXG4gICAgdG9SZ2JPYmoocmdiYTogc3RyaW5nKTogUkdCQSB7XHJcbiAgICAgICAgbGV0IGFyciA9IHJnYmEuc3BsaXQoJywnKS5tYXAoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGl0ZW0sIDEwKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBSZWQ6IGFyclswXSxcclxuICAgICAgICAgICAgR3JlZW46IGFyclsxXSxcclxuICAgICAgICAgICAgQmx1ZTogYXJyWzJdLFxyXG4gICAgICAgICAgICBBbHBoYTogYXJyWzNdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBSZ2JPYmpUb1N0cmluZyhyZ2JhOiBSR0JBKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgYW5zID0gJygnICsgcmdiYS5SZWQgKyAnLCcgKyByZ2JhLkdyZWVuICsgJywnICsgcmdiYS5CbHVlO1xyXG4gICAgICAgIGlmIChyZ2JhLkFscGhhKVxyXG4gICAgICAgICAgICBhbnMgKz0gJywnICsgcmdiYS5BbHBoYVxyXG4gICAgICAgIGFucyArPSAnKSc7XHJcbiAgICAgICAgcmV0dXJuIGFucztcclxuICAgIH1cclxuXHJcbiAgICBoZXhUb1JnYihoZXg6IHN0cmluZyk6IFJHQkEge1xyXG4gICAgICAgIC8vIEV4cGFuZCBzaG9ydGhhbmQgZm9ybSAoZS5nLiBcIjAzRlwiKSB0byBmdWxsIGZvcm0gKGUuZy4gXCIwMDMzRkZcIilcclxuICAgICAgICB2YXIgc2hvcnRoYW5kUmVnZXggPSAvXiM/KFthLWZcXGRdKShbYS1mXFxkXSkoW2EtZlxcZF0pJC9pO1xyXG4gICAgICAgIGhleCA9IGhleC5yZXBsYWNlKHNob3J0aGFuZFJlZ2V4LCBmdW5jdGlvbiAobTogc3RyaW5nLCByOiBzdHJpbmcsIGc6IHN0cmluZywgYjogc3RyaW5nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByICsgciArIGcgKyBnICsgYiArIGI7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciByZXN1bHQgPSAvXiM/KFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pJC9pLmV4ZWMoaGV4KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0ID8ge1xyXG4gICAgICAgICAgICBSZWQ6IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpLFxyXG4gICAgICAgICAgICBHcmVlbjogcGFyc2VJbnQocmVzdWx0WzJdLCAxNiksXHJcbiAgICAgICAgICAgIEJsdWU6IHBhcnNlSW50KHJlc3VsdFszXSwgMTYpXHJcbiAgICAgICAgfSA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0SW5uZXJUZXh0RGVmYXVsdHMoaW5uZXJUZXh0PzogSW5uZXJUZXh0KTogSW5uZXJUZXh0IHtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dClcclxuICAgICAgICAgICAgaW5uZXJUZXh0ID0ge1xyXG4gICAgICAgICAgICAgICAgdGV4dDogJydcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC50ZXh0KVxyXG4gICAgICAgICAgICBpbm5lclRleHQudGV4dCA9ICcnO1xyXG4gICAgICAgIGlmICghaW5uZXJUZXh0LmZvbnRTaXplKVxyXG4gICAgICAgICAgICBpbm5lclRleHQuZm9udFNpemUgPSAxODtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5saW5lSGVpZ2h0KVxyXG4gICAgICAgICAgICBpbm5lclRleHQubGluZUhlaWdodCA9IGlubmVyVGV4dC5mb250U2l6ZTtcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5mb250RmFtaWx5KVxyXG4gICAgICAgICAgICBpbm5lclRleHQuZm9udEZhbWlseSA9ICdBcmlhbCxVdGthbCxzYW5zLXNlcmlmJztcclxuICAgICAgICBpZiAoIWlubmVyVGV4dC5mb250V2VpZ2h0KVxyXG4gICAgICAgICAgICBpbm5lclRleHQuZm9udFdlaWdodCA9ICdub3JtYWwnO1xyXG4gICAgICAgIGlmICghaW5uZXJUZXh0LmxldHRlclNwYWNpbmcpXHJcbiAgICAgICAgICAgIGlubmVyVGV4dC5sZXR0ZXJTcGFjaW5nID0gJzAnO1xyXG4gICAgICAgIHJldHVybiBpbm5lclRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29tcHV0ZWRTdHlsZUJ5UGFyZW50UmVjKGVsZW06IGFueSwgY3NzUHJvcDogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIWVsZW0pIHJldHVybiBudWxsO1xyXG4gICAgICAgIGxldCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW0pIGFzIGFueTtcclxuICAgICAgICBsZXQgdmFsID0gY3NzW2Nzc1Byb3BdO1xyXG4gICAgICAgIGlmICh2YWwgJiYgdmFsICE9ICdyZ2JhKDAsIDAsIDAsIDApJykgcmV0dXJuIHZhbDtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWMoZWxlbS5wYXJlbnRFbGVtZW50LCBjc3NQcm9wKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvZGQgc3Ryb2tlV2lkdGggaXMgbm90IHN1cHBvcnRlZFxyXG4gICAgZml4U3Ryb2tlV2lkdGgoc3c6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgaWYgKHN3ICUgMiA9PSAxKVxyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ2FsbC1nYXVnZTogc3Ryb2tlLXdpZHRoIFwiJyArIHN3ICsgJ1wiIGlzIG5vdCBzdXBwb3J0ZWQgKG9kZCksIGNoYW5nZWQgdG8gXCInICsgKCsrc3cpKSArICdcIic7XHJcbiAgICAgICAgcmV0dXJuIHN3O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIG9kZCByYWRpdXMgaXMgbm90IHN1cHBvcnRlZFxyXG4gICAgZml4UmFkaXVzKHI6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgaWYgKHIgJSAyID09IDEpXHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignYWxsLWdhdWdlOiByYWRpdXMgXCInICsgciArICdcIiBpcyBub3Qgc3VwcG9ydGVkIChvZGQpLCBjaGFuZ2VkIHRvIFwiJyArICgrK3IpKSArICdcIic7XHJcbiAgICAgICAgcmV0dXJuIHI7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGVmYXVsdENvbG9ycygpOiBDb2xvclBhbGV0dGUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGFjdGl2ZTogJyM0Q0NFQUQnLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiAnIzUwNTA1MCcsXHJcbiAgICAgICAgICAgIGluYWN0aXZlOiAnI2VkZWRlZCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGdldE5lZWRsZUlubmVyU3R5bGUocmFkaXVzOiBudW1iZXIpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICdoZWlnaHQnOiAocmFkaXVzICsgMjApICsgJ3B4JyxcclxuICAgICAgICAgICAgJ3dpZHRoJzogKHJhZGl1cyAvIENvbW1vbi5uZWVkbGVXaWR0aEhlaWdodFJhdGlvKSArICdweCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGdldE5lZWRsZVN0eWxlKHJhZGl1czogbnVtYmVyLCBhcmNOZWVkbGVQZXJjZW50YWdlOiBudW1iZXIsIHNjYWxlOiBudW1iZXIpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHNjYWxlICE9PSAnbnVtYmVyJylcclxuICAgICAgICAgICAgc2NhbGUgPSAxLjEyNTtcclxuICAgICAgICBsZXQgZGVnID0gKGFyY05lZWRsZVBlcmNlbnRhZ2UgLSA1MCkgKiAzLjY7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgJ2xlZnQnOiAnY2FsYyg1MCUgLSAnICsgKChyYWRpdXMgLyBDb21tb24ubmVlZGxlV2lkdGhIZWlnaHRSYXRpbykpIC8gMiArICdweCcsXHJcbiAgICAgICAgICAgICd0cmFuc2Zvcm0nOiAncm90YXRlKCcgKyBkZWcgKyAnZGVnKSBzY2FsZSgnICsgc2NhbGUgKyAnKSdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGlzSW5SYW5nZShtaW5NYXhWYWw6IE1pbk1heFZhbCwgc2lkZXM6IFNpZGVTdGF0ZSkge1xyXG4gICAgICAgIHN3aXRjaCAoc2lkZXMpIHtcclxuICAgICAgICAgICAgY2FzZSBTaWRlU3RhdGUuQm90aDoge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChtaW5NYXhWYWwubWluIDwgbWluTWF4VmFsLnZhbHVlICYmIG1pbk1heFZhbC5tYXggPiBtaW5NYXhWYWwudmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgU2lkZVN0YXRlLk5vbmU6IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAobWluTWF4VmFsLm1pbiA8PSBtaW5NYXhWYWwudmFsdWUgJiYgbWluTWF4VmFsLm1heCA+PSBtaW5NYXhWYWwudmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgU2lkZVN0YXRlLkxlZnQ6IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAobWluTWF4VmFsLm1pbiA8IG1pbk1heFZhbC52YWx1ZSAmJiBtaW5NYXhWYWwubWF4ID49IG1pbk1heFZhbC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBTaWRlU3RhdGUuUmlnaHQ6IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAobWluTWF4VmFsLm1pbiA8PSBtaW5NYXhWYWwudmFsdWUgJiYgbWluTWF4VmFsLm1heCA+IG1pbk1heFZhbC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ICAgIFxyXG4gICAgfVxyXG5cclxuICAgIG5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh2YWx1ZTogbnVtYmVyLCBwZXJjZW50YWdlOiBudW1iZXIsIG1pZD86IG51bWJlciwgbWF4PzogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICBpZiAodHlwZW9mIG1pZCA9PT0gJ3VuZGVmaW5lZCcpXHJcbiAgICAgICAgICAgIG1pZCA9IDUwO1xyXG4gICAgICAgIGlmICh0eXBlb2YgbWF4ID09PSAndW5kZWZpbmVkJylcclxuICAgICAgICAgICAgbWF4ID0gbWlkICogMjtcclxuICAgICAgICBsZXQgcmVsID0gbnVsbDtcclxuXHJcbiAgICAgICAgaWYgKHZhbHVlID4gbWlkKSB7XHJcbiAgICAgICAgICAgIHBlcmNlbnRhZ2UgLz0gMjtcclxuICAgICAgICAgICAgcmVsID0gTWF0aC5hYnMobWlkIC0gdmFsdWUpO1xyXG4gICAgICAgICAgICByZWwgPSByZWwgLyBtaWQ7XHJcbiAgICAgICAgICAgIHBlcmNlbnRhZ2UgKj0gcmVsO1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgKiAoMSAtIHBlcmNlbnRhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHZhbHVlID09IDAuMClcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gMC4wMDE7XHJcbiAgICAgICAgICAgIHJlbCA9IE1hdGguYWJzKHZhbHVlIC0gbWlkKTtcclxuICAgICAgICAgICAgcmVsID0gcmVsIC8gbWlkO1xyXG4gICAgICAgICAgICBwZXJjZW50YWdlICo9IHJlbDtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlICsgKG1pZCAqIChwZXJjZW50YWdlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldFJlbWFpbmRlcihyYW5nZTogRnJvbVRvLCBob3VyOiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgY3VycmVudCA9IDEwMCAvIDEyICogaG91cjtcclxuICAgICAgICBpZiAoY3VycmVudCA+PSByYW5nZS5mcm9tICYmIGN1cnJlbnQgPD0gcmFuZ2UudG8pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQgLSByYW5nZS5mcm9tO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuXHJcbiAgICBpc0hvdXJJblJhbmdlKHJhbmdlOiBGcm9tVG8sIGhvdXI6IG51bWJlcik6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBjdXJyZW50ID0gMTAwIC8gMTIgKiBob3VyO1xyXG4gICAgICAgIGlmIChjdXJyZW50ID49IHJhbmdlLmZyb20gJiYgY3VycmVudCA8PSByYW5nZS50bykgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldE1pbnV0ZXNGcm9tSG91cihob3VyOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgYXJyID0gaG91ci5zcGxpdCgnOicpO1xyXG4gICAgICAgIHJldHVybiBwYXJzZUludChhcnJbMF0udHJpbSgpKSAqIDYwICsgcGFyc2VJbnQoYXJyWzFdLnRyaW0oKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TWludXRlc0Zyb21TdGFydChob3VyOiBzdHJpbmcsIHN0YXJ0ID0gMCkge1xyXG4gICAgICAgIGxldCBhcnIgPSBob3VyLnNwbGl0KCc6Jyk7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KChwYXJzZUludChhcnJbMF0udHJpbSgpKSAqIDYwICsgKHBhcnNlSW50KGFyclsxXS50cmltKCkpKSkgLSBzdGFydCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SG91cnNBbmRNaW51dGVzTFQoZGF0ZTogRGF0ZSk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xyXG4gICAgICAgIGhvdXJzID0gKGhvdXJzICsgMjQgLSAyKSAlIDI0O1xyXG4gICAgICAgIGxldCBtaWQgPSAnYW0nO1xyXG4gICAgICAgIGlmIChob3VycyA9PSAwKSB7IC8vQXQgMDAgaG91cnMgd2UgbmVlZCB0byBzaG93IDEyIGFtXHJcbiAgICAgICAgICAgIGhvdXJzID0gMTI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGhvdXJzID4gMTIpIHtcclxuICAgICAgICAgICAgaG91cnMgPSBob3VycyAlIDEyO1xyXG4gICAgICAgICAgICBtaWQgPSAncG0nO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaG91cnMgKyAnOicgKyBkYXRlLmdldE1pbnV0ZXMoKSArICcgJyArIG1pZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTZWNvbmRzRnJvbVRpbWUodGltZXI6IFRpbWUpOiBudW1iZXIge1xyXG4gICAgICAgIGxldCBob3VycyA9IDA7XHJcbiAgICAgICAgaG91cnMgKz0gdGltZXIuaG91cnMgKiAzNjAwO1xyXG4gICAgICAgIGhvdXJzICs9IHRpbWVyLm1pbnV0ZXMgKiA2MDtcclxuICAgICAgICBob3VycyArPSB0aW1lci5zZWNvbmRzO1xyXG4gICAgICAgIHJldHVybiBob3VycztcclxuICAgIH1cclxuXHJcbiAgICBzZXRUaW1lVG9aZXJvKHRpbWVyOiBUaW1lKTogdm9pZCB7XHJcbiAgICAgICAgdGltZXIuaG91cnMgPSAwO1xyXG4gICAgICAgIHRpbWVyLm1pbnV0ZXMgPSAwO1xyXG4gICAgICAgIHRpbWVyLnNlY29uZHMgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGRlY3JlYXNlVGltZSh0aW1lcjogVGltZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmICh0aW1lci5zZWNvbmRzID4gMCkge1xyXG4gICAgICAgICAgICBpZiAoLS10aW1lci5zZWNvbmRzIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGltZXIuc2Vjb25kcyA9IDU5O1xyXG4gICAgICAgICAgICAgICAgaWYgKC0tdGltZXIubWludXRlcyA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aW1lci5taW51dGVzID0gNTk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKC0tdGltZXIuaG91cnMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0VGltZVRvWmVybyh0aW1lcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aW1lci5taW51dGVzID4gMCkge1xyXG4gICAgICAgICAgICB0aW1lci5zZWNvbmRzID0gNTk7XHJcbiAgICAgICAgICAgIGlmICgtLXRpbWVyLm1pbnV0ZXMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lci5taW51dGVzID0gNTk7XHJcbiAgICAgICAgICAgICAgICBpZiAoLS10aW1lci5ob3VycyA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFRpbWVUb1plcm8odGltZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRpbWVyLmhvdXJzID4gMCkge1xyXG4gICAgICAgICAgICB0aW1lci5taW51dGVzID0gNTk7XHJcbiAgICAgICAgICAgIGlmICgtLXRpbWVyLmhvdXJzIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRUaW1lVG9aZXJvKHRpbWVyKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuaXNUaW1lWmVybyh0aW1lcikpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRUaW1lVG9aZXJvKHRpbWVyKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBpc1RpbWVaZXJvKHRpbWVyOiBUaW1lKTogYm9vbGVhbiB7XHJcbiAgICAgICAgaWYgKHRpbWVyLmhvdXJzIDw9IDAgJiYgdGltZXIubWludXRlcyA8PSAwICYmIHRpbWVyLnNlY29uZHMgPD0gMCkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHBhZFdpdGhaaXJvKHRleHQ6IHN0cmluZykge1xyXG4gICAgICAgIGlmIChTdHJpbmcodGV4dCkubGVuZ3RoIDwgMilcclxuICAgICAgICAgICAgdGV4dCA9ICcwJyArIHRleHQ7XHJcbiAgICAgICAgcmV0dXJuIHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U2lkZVN0YXRlQnlTdHJpbmcoc3RhdGU6IHN0cmluZyk6IFNpZGVTdGF0ZSB7XHJcbiAgICAgICAgaWYgKCFzdGF0ZSkgcmV0dXJuIFNpZGVTdGF0ZS5Ob25lO1xyXG4gICAgICAgIHN3aXRjaCAoc3RhdGUudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICBjYXNlICdsZWZ0JzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBTaWRlU3RhdGUuTGVmdDtcclxuICAgICAgICAgICAgY2FzZSAncmlnaHQnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5SaWdodDtcclxuICAgICAgICAgICAgY2FzZSAnYm90aCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU2lkZVN0YXRlLkJvdGg7XHJcbiAgICAgICAgICAgIGNhc2UgJ25vbmUnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5Ob25lO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNpZGVTdGF0ZS5Ob25lXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgRWRnZXNPcHRpb25zLCBTaWRlU3RhdGUgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBDb21tb24gfSBmcm9tICcuL2NvbW1vbic7XHJcblxyXG5leHBvcnQgY2xhc3MgRWRnZXMge1xyXG4gICAgcHJpdmF0ZSBsZWZ0RWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSByaWdodEVsZW1lbnQ6IGFueTtcclxuICAgIHByaXZhdGUgY29tbW9uOiBDb21tb247XHJcblxyXG4gICAgc3RhdGljIEFkZFRvRWRnZTogbnVtYmVyID0gNDtcclxuICAgIHN0YXRpYyBBZGRUb0VkZ2VIZWlnaHQ6IG51bWJlciA9IDQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBvcHRpb25zPzogRWRnZXNPcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcblxyXG4gICAgICAgIGxldCBkZWZhdWx0T3B0aW9ucyA9IHRoaXMuZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXREZWZhdWx0T3B0aW9ucygpOiBFZGdlc09wdGlvbnMge1xyXG4gICAgICAgIGxldCBjb2xvcnMgPSB0aGlzLmNvbW1vbi5nZXREZWZhdWx0Q29sb3JzKCk7XHJcbiAgICAgICAgbGV0IGRlZlJhZGl1cyA9IDg4LCBhbmltYXRpb25EdXJhdGlvbiA9IDUwMDtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjb2xvcjogY29sb3JzLmFjdGl2ZSxcclxuICAgICAgICAgICAgbWluTWF4VmFsOiB7XHJcbiAgICAgICAgICAgICAgICBtaW46IDMwLFxyXG4gICAgICAgICAgICAgICAgbWF4OiA3MCxcclxuICAgICAgICAgICAgICAgIHZhbHVlOiA1NVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICByYWRpdXM6IGRlZlJhZGl1cyxcclxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IDYsXHJcbiAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBhbmltYXRpb25EdXJhdGlvbixcclxuICAgICAgICAgICAgaG9sbG93RWRnZXM6IFNpZGVTdGF0ZS5Ob25lLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmZmZmJ1xyXG4gICAgICAgIH0gYXMgRWRnZXNPcHRpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5sZWZ0RWxlbWVudCA9IHRoaXMuY29tbW9uLmpzb25Ub0h0bWwoXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYGRpc3BsYXk6IGlubGluZS1ibG9jazt3aWR0aDogJHtFZGdlcy5BZGRUb0VkZ2V9cHg7cG9zaXRpb246IGFic29sdXRlO3otaW5kZXg6IDU7Ym94LXNpemluZzogaW5pdGlhbDtib3gtc2l6aW5nOiBib3JkZXItYm94O3RyYW5zaXRpb24tcHJvcGVydHk6IGJhY2tncm91bmQtY29sb3I7YCxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YS1sZWZ0LWVkZ2UnOiAnJ1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5yaWdodEVsZW1lbnQgPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICdzdHlsZSc6IGBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7d2lkdGg6ICR7RWRnZXMuQWRkVG9FZGdlfXB4O3Bvc2l0aW9uOiBhYnNvbHV0ZTt6LWluZGV4OiA1O2JveC1zaXppbmc6IGluaXRpYWw7Ym94LXNpemluZzogYm9yZGVyLWJveDt0cmFuc2l0aW9uLXByb3BlcnR5OiBiYWNrZ3JvdW5kLWNvbG9yO2AsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEtcmlnaHQtZWRnZSc6ICcnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IEVkZ2VzT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZU9wdGlvbnMoKSB7XHJcbiAgICAgICAgdGhpcy5zZXRTcGFucyh0aGlzLm9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFNwYW5zKG9wdGlvbnM6IEVkZ2VzT3B0aW9ucykge1xyXG4gICAgICAgIGxldCBoZWlnaHQgPSAob3B0aW9ucy5zdHJva2VXaWR0aCArIEVkZ2VzLkFkZFRvRWRnZSArIEVkZ2VzLkFkZFRvRWRnZUhlaWdodCkgKyAncHgnO1xyXG4gICAgICAgIGxldCB0b3AgPSAnY2FsYyg1MCUgLSAnICsgKChvcHRpb25zLnN0cm9rZVdpZHRoIC8gMikgKyAoRWRnZXMuQWRkVG9FZGdlIC8gMikgKyAoRWRnZXMuQWRkVG9FZGdlSGVpZ2h0IC8gMikpICsgJ3B4KSc7XHJcbiAgICAgICAgbGV0IGxlZnRTdHlsZSA9ICdjYWxjKDUwJSAtICcgKyAoRWRnZXMuQWRkVG9FZGdlIC8gMikgKyAncHgpJztcclxuXHJcbiAgICAgICAgLy8gbGV0IGJnQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5sZWZ0RWxlbWVudCwgJ2JhY2tncm91bmRDb2xvcicpO1xyXG4gICAgICAgIC8vIGlmICghYmdDb2xvcilcclxuICAgICAgICBsZXQgYmdDb2xvciA9IHRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3I7XHJcblxyXG4gICAgICAgIGxldCBsZWZ0ID0gdGhpcy5sZWZ0RWxlbWVudDtcclxuICAgICAgICBsZWZ0LnN0eWxlLmhlaWdodCA9IGhlaWdodDtcclxuICAgICAgICBsZWZ0LnN0eWxlLnRvcCA9IHRvcDtcclxuICAgICAgICBsZWZ0LnN0eWxlLmxlZnQgPSBsZWZ0U3R5bGU7XHJcbiAgICAgICAgbGVmdC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBvcHRpb25zLmNvbG9yO1xyXG4gICAgICAgIGxlZnQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICAgICAgLy8gbGVmdC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSAnMG1zJztcclxuICAgICAgICBpZiAob3B0aW9ucy5ob2xsb3dFZGdlcyA9PSBTaWRlU3RhdGUuTGVmdCB8fCBvcHRpb25zLmhvbGxvd0VkZ2VzID09IFNpZGVTdGF0ZS5Cb3RoKSB7XHJcbiAgICAgICAgICAgIGxlZnQuc3R5bGUuYm9yZGVyID0gJ3NvbGlkIDFweCAnICsgb3B0aW9ucy5jb2xvcjtcclxuICAgICAgICAgICAgbGVmdC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiZ0NvbG9yO1xyXG4gICAgICAgICAgICAvLyBsZWZ0LnN0eWxlLmhlaWdodCA9IChvcHRpb25zLnN0cm9rZVdpZHRoICsgKEVkZ2VzLkFkZFRvRWRnZSAqIDIgLSAyKSkgKyAncHgnO1xyXG4gICAgICAgICAgICAvLyBsZWZ0LnN0eWxlLnRvcCA9ICdjYWxjKDUwJSAtICcgKyAoKG9wdGlvbnMuc3Ryb2tlV2lkdGggLyAyKSArIEVkZ2VzLkFkZFRvRWRnZSArIDEpICsgJ3B4KSc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgcmlnaHQgPSB0aGlzLnJpZ2h0RWxlbWVudDtcclxuICAgICAgICByaWdodC5zdHlsZS5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgcmlnaHQuc3R5bGUudG9wID0gdG9wO1xyXG4gICAgICAgIHJpZ2h0LnN0eWxlLmxlZnQgPSBsZWZ0U3R5bGU7XHJcbiAgICAgICAgcmlnaHQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gb3B0aW9ucy5jb2xvcjtcclxuICAgICAgICByaWdodC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uICsgJ21zJztcclxuICAgICAgICAvLyByaWdodC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSAnMG1zJztcclxuICAgICAgICBpZiAob3B0aW9ucy5ob2xsb3dFZGdlcyA9PSBTaWRlU3RhdGUuUmlnaHQgfHwgb3B0aW9ucy5ob2xsb3dFZGdlcyA9PSBTaWRlU3RhdGUuQm90aCkge1xyXG4gICAgICAgICAgICByaWdodC5zdHlsZS5ib3JkZXIgPSAnc29saWQgMXB4ICcgKyBvcHRpb25zLmNvbG9yO1xyXG4gICAgICAgICAgICByaWdodC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiZ0NvbG9yO1xyXG4gICAgICAgICAgICAvLyByaWdodC5zdHlsZS5oZWlnaHQgPSAob3B0aW9ucy5zdHJva2VXaWR0aCArIChFZGdlcy5BZGRUb0VkZ2UgKiAyIC0gMikpICsgJ3B4JztcclxuICAgICAgICAgICAgLy8gcmlnaHQuc3R5bGUudG9wID0gJ2NhbGMoNTAlIC0gJyArICgob3B0aW9ucy5zdHJva2VXaWR0aCAvIDIpICsgRWRnZXMuQWRkVG9FZGdlICsgMSkgKyAncHgpJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBzY2FsYXIgPSBvcHRpb25zLnJhZGl1cyAtIChvcHRpb25zLnN0cm9rZVdpZHRoIC8gMiksIHhWZWN0b3JMZWZ0LCB5VmVjdG9yTGVmdCwgeFZlY3RvclJpZ2h0LCB5VmVjdG9yUmlnaHQ7XHJcbiAgICAgICAgbGV0IGRlZ0xlZnQgPSAob3B0aW9ucy5taW5NYXhWYWwubWluIC0gNTApICogMy42O1xyXG4gICAgICAgIGxldCBkZWdSaWdodCA9IChvcHRpb25zLm1pbk1heFZhbC5tYXggLSA1MCkgKiAzLjY7XHJcbiAgICAgICAgeFZlY3RvckxlZnQgPSBNYXRoLnNpbihkZWdMZWZ0ICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuICAgICAgICB5VmVjdG9yTGVmdCA9IC1NYXRoLmNvcyhkZWdMZWZ0ICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuICAgICAgICBsZWZ0LnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgke3hWZWN0b3JMZWZ0fXB4LCAke3lWZWN0b3JMZWZ0fXB4LCAwKSByb3RhdGUoJHtkZWdMZWZ0fWRlZylgO1xyXG4gICAgICAgIHhWZWN0b3JSaWdodCA9IE1hdGguc2luKGRlZ1JpZ2h0ICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuICAgICAgICB5VmVjdG9yUmlnaHQgPSAtTWF0aC5jb3MoZGVnUmlnaHQgKiAoTWF0aC5QSSAvIDE4MCkpICogc2NhbGFyO1xyXG4gICAgICAgIHJpZ2h0LnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgke3hWZWN0b3JSaWdodH1weCwgJHt5VmVjdG9yUmlnaHR9cHgsIDApIHJvdGF0ZSgke2RlZ1JpZ2h0fWRlZylgO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRMZWZ0RWxlbWVudCgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxlZnRFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRSaWdodEVsZW1lbnQoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yaWdodEVsZW1lbnQ7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBJY29uT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBJY29uIHtcclxuICAgIHByaXZhdGUgZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgb3B0aW9uczogSWNvbk9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLmNvbW1vbiA9IG5ldyBDb21tb24oKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnaW1nJyxcclxuICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogJ3Bvc2l0aW9uOiBhYnNvbHV0ZTt6LWluZGV4OiAxNTtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7JyxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YS1pY29uJzogJydcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUob3B0aW9uczogSWNvbk9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVPcHRpb25zKCkge1xyXG4gICAgICAgIHRoaXMuc2V0SW1hZ2UodGhpcy5vcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRJbWFnZShvcHRpb25zOiBJY29uT3B0aW9ucykge1xyXG4gICAgICAgIGxldCBpbWFnZSA9IHRoaXMuZWxlbWVudDtcclxuICAgICAgICBpbWFnZS5zdHlsZS53aWR0aCA9IG9wdGlvbnMuZGltZW5zaW9ucy53aWR0aCArICdweCc7XHJcbiAgICAgICAgaW1hZ2Uuc3R5bGUuaGVpZ2h0ID0gb3B0aW9ucy5kaW1lbnNpb25zLmhlaWdodCArICdweCc7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnRvcCA9PT0gJ3VuZGVmaW5lZCcpXHJcbiAgICAgICAgICAgIG9wdGlvbnMudG9wID0gMDtcclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubGVmdCA9PT0gJ3VuZGVmaW5lZCcpXHJcbiAgICAgICAgICAgIG9wdGlvbnMubGVmdCA9IDA7XHJcbiAgICAgIFxyXG5cdCAgICBsZXQgZGVnID0gKG9wdGlvbnMuZGVncmVlIC0gNTApICogMy42O1xyXG5cdCAgICBsZXQgc2NhbGFyID0gb3B0aW9ucy5yYWRpdXMgKyBvcHRpb25zLnJhZGl1c09mZnNldDtcclxuXHRcclxuICAgICAgICBsZXQgeFZlY3RvciA9IE1hdGguc2luKGRlZyAqIChNYXRoLlBJIC8gMTgwKSkgKiBzY2FsYXI7XHJcbiAgICAgICAgbGV0IHlWZWN0b3IgPSAtTWF0aC5jb3MoZGVnICogKE1hdGguUEkgLyAxODApKSAqIHNjYWxhcjtcclxuXHJcbiAgICAgICAgaW1hZ2Uuc3R5bGUubGVmdCA9ICgob3B0aW9ucy5kaW1lbnNpb25zLndpZHRoIC8gLTIpICsgb3B0aW9ucy5yYWRpdXMgKyB4VmVjdG9yKSArICdweCc7XHJcbiAgICAgICAgaW1hZ2Uuc3R5bGUudG9wID0gKChvcHRpb25zLmRpbWVuc2lvbnMuaGVpZ2h0IC8gLTIpICsgb3B0aW9ucy5yYWRpdXMgKyB5VmVjdG9yKSArICdweCc7XHJcbiAgICAgICBcclxuICAgICAgICBpbWFnZS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSAnMG1zJztcclxuICAgICAgICBpbWFnZS5zdHlsZS5vcGFjaXR5ID0gb3B0aW9ucy5vcGFjaXR5O1xyXG4gICAgICAgIGltYWdlLnNyYyA9IG9wdGlvbnMuc3JjO1xyXG4gICAgICAgIGlmIChvcHRpb25zLnNyYylcclxuICAgICAgICAgICAgaW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgaW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHJcbiAgICAgICAgaW1hZ2Uuc3R5bGUudHJhbnNmb3JtID0gYHJvdGF0ZSgke2RlZ31kZWcpYDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0RWxlbWVudCgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQ7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgaW50ZXJmYWNlIENvbG9yUGFsZXR0ZSB7XHJcbiAgICBkZWZhdWx0OiBzdHJpbmc7XHJcbiAgICBhY3RpdmU6IHN0cmluZztcclxuICAgIGluYWN0aXZlOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2lyY2xlT3B0aW9ucyB7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICBmcm9tRGVncmVlPzogbnVtYmVyO1xyXG4gICAgdG9EZWdyZWU/OiBudW1iZXI7XHJcbiAgICByYWRpdXM/OiBudW1iZXI7XHJcbiAgICBzdHJva2VXaWR0aD86IG51bWJlcjtcclxuICAgIHJvdGF0aW9uU3BlZWQ/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcclxuICAgIGhpZGVCb3R0b206IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3Bpbm5lck9wdGlvbnMge1xyXG4gICAgY29sb3JzPzogQ29sb3JQYWxldHRlO1xyXG4gICAgYWN0aXZlRGVncmVlPzogbnVtYmVyO1xyXG4gICAgcmFkaXVzPzogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICByb3RhdGlvblNwZWVkPzogbnVtYmVyO1xyXG4gICAgdGl0bGU/OiBJbm5lclRleHQ7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGhpZ2hsaWdodD86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5uZXJUZXh0IHtcclxuICAgIHRleHQ6IHN0cmluZztcclxuICAgIGZvbnRTaXplPzogbnVtYmVyO1xyXG4gICAgZm9udEZhbWlseT86IHN0cmluZztcclxuICAgIGxpbmVIZWlnaHQ/OiBudW1iZXI7XHJcbiAgICBmb250V2VpZ2h0Pzogc3RyaW5nO1xyXG4gICAgbGV0dGVyU3BhY2luZz86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBKc29uVG9IdG1sRWxlbWVudCB7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICB0ZXh0Pzogc3RyaW5nO1xyXG4gICAgYXR0cnM/OiBhbnk7XHJcbiAgICBjaGlsZHJlbj86IEFycmF5PEpzb25Ub0h0bWxFbGVtZW50PjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSR0JBIHtcclxuICAgIFJlZDogbnVtYmVyO1xyXG4gICAgR3JlZW46IG51bWJlcjtcclxuICAgIEJsdWU6IG51bWJlcjtcclxuICAgIEFscGhhPzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1pbk1heFZhbCB7XHJcbiAgICBtaW46IG51bWJlcjtcclxuICAgIG1heDogbnVtYmVyO1xyXG4gICAgdmFsdWU/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmVlZGxlT3B0aW9ucyB7XHJcbiAgICBjb2xvcjogc3RyaW5nO1xyXG4gICAgbWluTWF4VmFsOiBNaW5NYXhWYWw7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHNjYWxlOiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUdW5lT3B0aW9ucyB7XHJcbiAgICBuZWVkbGVPcHRpb25zPzogTmVlZGxlT3B0aW9ucztcclxuICAgIGljb25PcHRpb25zPzogSWNvbk9wdGlvbnM7XHJcbiAgICBjb2xvcnM/OiBDb2xvclBhbGV0dGU7XHJcbiAgICBzdHJva2VXaWR0aD86IG51bWJlcjtcclxuICAgIC8vIHRpdGxlPzogSW5uZXJUZXh0O1xyXG4gICAgYW5pbWF0aW9uRHVyYXRpb24/OiBudW1iZXI7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIHNob3dFZGdlczogYm9vbGVhbjtcclxuICAgIGhvbGxvd0VkZ2VzPzogU2lkZVN0YXRlO1xyXG4gICAgc2hvd0ljb246IGJvb2xlYW47XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nO1xyXG4gICAgaG9sbG93RWRnZXNCZ0NvbG9yPzogc3RyaW5nO1xyXG59XHJcblxyXG4vLyBleHBvcnQgaW50ZXJmYWNlIE1pbk1heEVkZ2Uge1xyXG4vLyAgICAgbWluTWF4VmFsOiBNaW5NYXhWYWw7XHJcbi8vICAgICBsZWZ0RWRnZXM/OiBTaW5uZ2xlU2lkZVN0YXRlO1xyXG4vLyAgICAgcmlnaHRFZGdlcz86IFNpbm5nbGVTaWRlU3RhdGU7XHJcbi8vICAgICBiZ0NvbG9yOiBzdHJpbmc7XHJcbi8vIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTXVsdGl0dW5lT3B0aW9ucyB7XHJcbiAgICBuZWVkbGVPcHRpb25zOiBOZWVkbGVPcHRpb25zO1xyXG4gICAgc2VnbWVudHM6IEFycmF5PE1pbk1heFZhbD47XHJcbiAgICBpY29uT3B0aW9ucz86IEljb25PcHRpb25zO1xyXG4gICAgY29sb3JzPzogQ29sb3JQYWxldHRlO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc2hvd0VkZ2VzOiBib29sZWFuO1xyXG4gICAgc2hvd0ljb246IGJvb2xlYW47XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nO1xyXG4gICAgaG9sbG93RWRnZXNCZ0NvbG9yPzogc3RyaW5nO1xyXG4gICAgaG9sbG93RWRnZXM/OiBTaWRlU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmFuZ2VPcHRpb25zIHtcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIG1pbk1heFZhbDogTWluTWF4VmFsO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc2hvd0VkZ2VzOiBib29sZWFuO1xyXG4gICAgaG9sbG93RWRnZXM/OiBTaWRlU3RhdGU7XHJcbiAgICBoaWRlQm90dG9tOiBib29sZWFuO1xyXG4gICAgdGl0bGU/OiBJbm5lclRleHQ7XHJcbiAgICBoaWdobGlnaHQ/OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgZW51bSBTaWRlU3RhdGUge1xyXG4gICAgTm9uZSxcclxuICAgIExlZnQsXHJcbiAgICBSaWdodCxcclxuICAgIEJvdGgsXHJcbn1cclxuXHJcbi8vIGV4cG9ydCBlbnVtIFNpbm5nbGVTaWRlU3RhdGUge1xyXG4vLyAgICAgTm9uZSxcclxuLy8gICAgIEhvbGxvdyxcclxuLy8gICAgIEZ1bGwsXHJcbi8vIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWRnZXNPcHRpb25zIHtcclxuICAgIGNvbG9yOiBzdHJpbmc7XHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmc7XHJcbiAgICBtaW5NYXhWYWw6IE1pbk1heFZhbDtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg6IG51bWJlcjtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgaG9sbG93RWRnZXM/OiBTaWRlU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSWNvbk9wdGlvbnMge1xyXG4gICAgZGVncmVlOiBudW1iZXI7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuXHRyYWRpdXNPZmZzZXQ/OiBudW1iZXI7XHJcbiAgICBhbmltYXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICAgIHNyYzogc3RyaW5nO1xyXG4gICAgZGltZW5zaW9uczoge1xyXG4gICAgICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICAgICAgaGVpZ2h0OiBudW1iZXI7XHJcbiAgICB9LFxyXG4gICAgdG9wPzogbnVtYmVyO1xyXG4gICAgbGVmdD86IG51bWJlcjtcclxuICAgIG9wYWNpdHk6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBOdW1iZXJEYXRhIHtcclxuICAgICAgICBudW1iZXI6IHN0cmluZztcclxuICAgICAgICBpc0FjdGl2ZTogYm9vbGVhbjtcclxuICAgICAgICByZW1haW5kZXI6IG51bWJlcjtcclxuICAgIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQW1QbU9wdGlvbnMge1xyXG4gICAgZnJvbVRvOiBGcm9tVG9TdHJpbmc7XHJcbiAgICBuZWVkbGVPcHRpb25zPzogTmVlZGxlT3B0aW9ucztcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgbWluTWF4VmFsQW0/OiBNaW5NYXhWYWw7XHJcbiAgICBtaW5NYXhWYWxQbT86IE1pbk1heFZhbDtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XHJcbiAgICBob2xsb3dFZGdlc0FtPzogU2lkZVN0YXRlO1xyXG4gICAgaG9sbG93RWRnZXNQbT86IFNpZGVTdGF0ZTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGcm9tVG8ge1xyXG4gICAgICAgIGZyb206IG51bWJlcjtcclxuICAgICAgICB0bzogbnVtYmVyO1xyXG4gICAgfVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGcm9tVG9TdHJpbmcge1xyXG4gICAgZnJvbTogc3RyaW5nO1xyXG4gICAgdG86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUaW1lIHtcclxuICAgIGhvdXJzOiBudW1iZXIsXHJcbiAgICBtaW51dGVzOiBudW1iZXIsXHJcbiAgICBzZWNvbmRzOiBudW1iZXIsXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGltZXJPcHRpb25zIHtcclxuICAgIGNvbG9ycz86IENvbG9yUGFsZXR0ZTtcclxuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xyXG4gICAgdGltZTogVGltZTtcclxuICAgIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gICAgcmFkaXVzOiBudW1iZXI7XHJcbiAgICBzaG93RWRnZXM6IGJvb2xlYW47XHJcbiAgICB0aXRsZT86IElubmVyVGV4dDtcclxuICAgIHBlcmNlbnRhZ2U/OiBudW1iZXI7XHJcbn0iLCJpbXBvcnQgeyBNdWx0aXR1bmVPcHRpb25zLCBDaXJjbGVPcHRpb25zLCBOZWVkbGVPcHRpb25zLCBKc29uVG9IdG1sRWxlbWVudCwgRWRnZXNPcHRpb25zLCBJY29uT3B0aW9ucywgU2lkZVN0YXRlIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuaW1wb3J0IHsgQ29tbW9uIH0gZnJvbSAnLi9jb21tb24nO1xyXG5pbXBvcnQgeyBDaXJjbGUgfSBmcm9tICcuL2NpcmNsZSc7XHJcbmltcG9ydCB7IE5lZWRsZSB9IGZyb20gJy4vbmVlZGxlJztcclxuaW1wb3J0IHsgRWRnZXMgfSBmcm9tICcuL2VkZ2VzJztcclxuaW1wb3J0IHsgSWNvbiB9IGZyb20gJy4vaWNvbic7XHJcblxyXG5leHBvcnQgY2xhc3MgTXVsdGlUdW5lIHtcclxuICAgIHByaXZhdGUgZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBvcHRpb25zOiBNdWx0aXR1bmVPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIHByaXZhdGUgY2lyY2xlc09wdGlvbnM6IEFycmF5PENpcmNsZU9wdGlvbnM+O1xyXG4gICAgcHJpdmF0ZSBjaXJjbGVzOiBBcnJheTxDaXJjbGU+O1xyXG4gICAgcHJpdmF0ZSBuZWVkbGVPcHRpb25zOiBOZWVkbGVPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBuZWVkbGU6IE5lZWRsZTtcclxuICAgIHByaXZhdGUgZWRnZXNPcHRpb25zOiBFZGdlc09wdGlvbnM7XHJcbiAgICBwcml2YXRlIGVkZ2VzOiBFZGdlcztcclxuICAgIHByaXZhdGUgaWNvbk9wdGlvbnM6IEljb25PcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBpY29uOiBJY29uO1xyXG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogYW55LCBvcHRpb25zPzogTXVsdGl0dW5lT3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcbiAgICAgICAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xyXG4gICAgICAgIGxldCBkZWZhdWx0T3B0aW9ucyA9IHRoaXMuZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgLy8gb3ZlcnJpZGUgZGVmYXVsdHMgd2l0aCB1c2VyIG9wdGlvbnNcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICB0aGlzLmZpeE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgZml4T3B0aW9ucygpIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMuc3Ryb2tlV2lkdGggPSB0aGlzLmNvbW1vbi5maXhTdHJva2VXaWR0aCh0aGlzLm9wdGlvbnMuc3Ryb2tlV2lkdGgpO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy5yYWRpdXMgPSB0aGlzLmNvbW1vbi5maXhSYWRpdXModGhpcy5vcHRpb25zLnJhZGl1cyk7XHJcblxyXG4gICAgICAgIC8vIGlmIHdlJ3JlIGhpZGluZyBib3R0b20gd2Ugc2hvdWxkIHRha2UgdGhvZXMgdmFsdWVzIGluIHRvIGNvbnNpZHVyYXRpb25cclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmhpZGVCb3R0b20pIHtcclxuICAgICAgICAgICAgbGV0IHBvcnRpb25Ub0hpZGUgPSAwLjMzMzQ7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC5tYXggPSB0aGlzLmNvbW1vbi5ub3JtYWxpemVCeVBlcmNlbnRhZ2UodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLm1heCwgcG9ydGlvblRvSGlkZSk7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC5taW4gPSB0aGlzLmNvbW1vbi5ub3JtYWxpemVCeVBlcmNlbnRhZ2UodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLm1pbiwgcG9ydGlvblRvSGlkZSk7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC52YWx1ZSA9IHRoaXMuY29tbW9uLm5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwudmFsdWUsIHBvcnRpb25Ub0hpZGUpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmljb25PcHRpb25zICYmIHR5cGVvZiB0aGlzLm9wdGlvbnMuaWNvbk9wdGlvbnMuZGVncmVlID09PSAnbnVtYmVyJylcclxuICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5pY29uT3B0aW9ucy5kZWdyZWUgPSB0aGlzLmNvbW1vbi5ub3JtYWxpemVCeVBlcmNlbnRhZ2UodGhpcy5vcHRpb25zLmljb25PcHRpb25zLmRlZ3JlZSwgcG9ydGlvblRvSGlkZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHtcclxuICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAnZGF0YS1tdWx0aS10dW5lJzogJydcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gYXMgSnNvblRvSHRtbEVsZW1lbnQ7XHJcblxyXG4gICAgICAgIGxldCBpbm5lckVsZW0gPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyhmYWxzZSk7XHJcblxyXG4gICAgICAgIC8vIHRoaXMuZXh0cmFjdEVkZ2VzRnJvbUNpcmNsZXMoKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNpcmNsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IGMgPSAgdGhpcy5jaXJjbGVzW2ldLmdldEVsZW1lbnQoKTtcclxuICAgICAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKGMpO1xyXG4gICAgICAgICAgICBpZiAoaSA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBjLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuICAgICAgICAgICAgICAgIGMuc3R5bGUudG9wPSAnMCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXNbaV0uZ2V0TGVmdEVsZW1lbnQoKSk7XHJcbiAgICAgICAgICAgIC8vIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLmVkZ2VzW2ldLmdldFJpZ2h0RWxlbWVudCgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXMuZ2V0TGVmdEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXMuZ2V0UmlnaHRFbGVtZW50KCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLm5lZWRsZS5nZXRFbGVtZW50KCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLmljb24uZ2V0RWxlbWVudCgpKTtcclxuXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGlubmVyRWxlbSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IE11bHRpdHVuZU9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICB0aGlzLmZpeE9wdGlvbnMoKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnModHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZXh0cmFjdEVkZ2VzRnJvbUNpcmNsZXMoKSB7XHJcbiAgICAvLyB0aGlzLmVkZ2VzID0gW107XHJcbiAgICAvLyB0aGlzLmVkZ2VzT3B0aW9ucyA9IFtdO1xyXG4gICAgLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNpcmNsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgIC8vICAgICB0aGlzLmVkZ2VzT3B0aW9uc1tpXS5ob2xsb3dFZGdlcyA9IFNpZGVTdGF0ZS5Cb3RoO1xyXG4gICAgLy8gICAgIHRoaXMuZWRnZXNPcHRpb25zW2ldID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLCB0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAvLyAgICAgdGhpcy5lZGdlc09wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMsIHRoaXMuZWRnZXNPcHRpb25zKTtcclxuICAgIC8vICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5zdHJva2VXaWR0aCA9IHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aDtcclxuICAgIC8vICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvcnMuYWN0aXZlO1xyXG4gICAgLy8gICAgIHRoaXMuZWRnZXNPcHRpb25zLmhvbGxvd0VkZ2VzID0gdGhpcy5vcHRpb25zLmhvbGxvd0VkZ2VzO1xyXG4gICAgLy8gICAgIHRoaXMuZWRnZXNPcHRpb25zLmJhY2tncm91bmRDb2xvciA9IHRoaXMub3B0aW9ucy5ob2xsb3dFZGdlc0JnQ29sb3I7XHJcblxyXG4gICAgLy8gfVxyXG4gICAgLy8gdGhpcy5jaXJjbGVzLmZvckVhY2goKGMpID0+IHtcclxuXHJcblxyXG5cclxuXHJcbiAgICAvLyAgICAgdGhpcy5lZGdlcyA9IG5ldyBFZGdlcyh0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAvLyAgICAgdGhpcy5lZGdlc09wdGlvbnMucHVzaCh7XHJcblxyXG4gICAgLy8gICAgIH0pO1xyXG4gICAgLy8gICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZChjLmdldEVsZW1lbnQoKSk7XHJcbiAgICAvLyB9KTtcclxuICAgIC8vIH1cclxuXHJcbiAgICB1cGRhdGVPcHRpb25zKHNldFdyYXA/OiBib29sZWFuKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHNldFdyYXApXHJcbiAgICAgICAgICAgIHRoaXMuc2V0V3JhcCh0aGlzLm9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0Q2lyY2xlcygpO1xyXG4gICAgICAgIHRoaXMuc2V0TmVlZGxlKCk7XHJcbiAgICAgICAgdGhpcy5zZXRFZGdlcygpO1xyXG4gICAgICAgIHRoaXMuc2V0SWNvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFdyYXAob3B0aW9uczogTXVsdGl0dW5lT3B0aW9ucykge1xyXG4gICAgICAgIGxldCB3cmFwID0gdGhpcy5lbGVtZW50O1xyXG4gICAgICAgIGxldCBkaW0gPSAob3B0aW9ucy5yYWRpdXMgKiAyKSArICdweCc7XHJcbiAgICAgICAgd3JhcC5zdHlsZS53aWR0aCA9IGRpbTtcclxuICAgICAgICB3cmFwLnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICB3cmFwLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcclxuICAgIH1cclxuXHJcbiAgICBnZXREZWZhdWx0T3B0aW9ucygpOiBNdWx0aXR1bmVPcHRpb25zIHtcclxuICAgICAgICBsZXQgY29sb3JzID0gdGhpcy5jb21tb24uZ2V0RGVmYXVsdENvbG9ycygpO1xyXG4gICAgICAgIGxldCBkZWZSYWRpdXMgPSA4OCwgYW5pbWF0aW9uRHVyYXRpb24gPSA1MDAsIGJnQ29sb3IgPSAnI2ZmZmZmZic7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmVlZGxlT3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgbWluTWF4VmFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAzMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDcwLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA1NVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBjb2xvcnMuYWN0aXZlLFxyXG4gICAgICAgICAgICAgICAgc2NhbGU6IDEuMTI1LFxyXG4gICAgICAgICAgICAgICAgcmFkaXVzOiBkZWZSYWRpdXMsXHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogYW5pbWF0aW9uRHVyYXRpb24sXHJcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2VcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2VnbWVudHM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBtaW5NYXhWYWw6IHtcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAzNy41XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgICAgIC8vICxcclxuICAgICAgICAgICAgICAgICAgICAvLyBsZWZ0RWRnZXM6IFNpbm5nbGVTaWRlU3RhdGUuTm9uZSxcclxuICAgICAgICAgICAgICAgICAgICAvLyByaWdodEVkZ2VzOiBTaW5uZ2xlU2lkZVN0YXRlLkhvbGxvdyxcclxuICAgICAgICAgICAgICAgICAgICAvLyBiZ0NvbG9yOiBiZ0NvbG9yXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIG1pbk1heFZhbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogNjIuNSxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEwMFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gbGVmdEVkZ2VzOiBTaW5uZ2xlU2lkZVN0YXRlLkhvbGxvdyxcclxuICAgICAgICAgICAgICAgICAgICAvLyByaWdodEVkZ2VzOiBTaW5uZ2xlU2lkZVN0YXRlLk5vbmUsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYmdDb2xvcjogYmdDb2xvclxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBpY29uT3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxyXG4gICAgICAgICAgICAgICAgZGVncmVlOiA1MCxcclxuICAgICAgICAgICAgICAgIHJhZGl1czogZGVmUmFkaXVzLFxyXG4gICAgICAgICAgICAgICAgcmFkaXVzT2Zmc2V0OiAwLFxyXG4gICAgICAgICAgICAgICAgc3JjOiAnJyxcclxuICAgICAgICAgICAgICAgIGRpbWVuc2lvbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjUsXHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHRvcDogMCxcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDAsXHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbG9yczogY29sb3JzLFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogNixcclxuICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxyXG4gICAgICAgICAgICByYWRpdXM6IGRlZlJhZGl1cyxcclxuICAgICAgICAgICAgc2hvd0VkZ2VzOiB0cnVlLFxyXG4gICAgICAgICAgICBzaG93SWNvbjogdHJ1ZSxcclxuICAgICAgICAgICAgaG9sbG93RWRnZXM6IFNpZGVTdGF0ZS5Ob25lLFxyXG4gICAgICAgICAgICBoaWRlQm90dG9tOiB0cnVlLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGJnQ29sb3IsXHJcbiAgICAgICAgICAgIGhvbGxvd0VkZ2VzQmdDb2xvcjogYmdDb2xvclxyXG4gICAgICAgIH0gYXMgTXVsdGl0dW5lT3B0aW9ucztcclxuICAgIH1cclxuXHJcbiAgICBzZXRDaXJjbGVzKCkge1xyXG4gICAgICAgIGxldCBleGlzdCA9IHRydWU7XHJcbiAgICAgICAgaWYgKCEodGhpcy5jaXJjbGVzIGluc3RhbmNlb2YgQXJyYXkpKSB7XHJcbiAgICAgICAgICAgIGV4aXN0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuY2lyY2xlcyA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZXNPcHRpb25zID0gW107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5vcHRpb25zLnNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChleGlzdClcclxuICAgICAgICAgICAgICAgIHRoaXMuY2lyY2xlc09wdGlvbnNbaV0gPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCB0aGlzLmNpcmNsZXNPcHRpb25zW2ldKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jaXJjbGVzT3B0aW9uc1tpXSA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMsIHt9KTtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICBpZiAoaSA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNpcmNsZXNPcHRpb25zW2ldLmZyb21EZWdyZWUgPSAwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaXJjbGVzT3B0aW9uc1tpXS50b0RlZ3JlZSA9IHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC5taW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGkgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaXJjbGVzT3B0aW9uc1tpXS5mcm9tRGVncmVlID0gdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLm1heDtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2lyY2xlc09wdGlvbnNbaV0udG9EZWdyZWUgPSAxMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZXNPcHRpb25zW2ldLmJhY2tncm91bmRDb2xvciA9IHRoaXMuY29tbW9uLmdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyh0aGlzLmVsZW1lbnQsICdiYWNrZ3JvdW5kQ29sb3InKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmNpcmNsZXNPcHRpb25zW2ldLmJhY2tncm91bmRDb2xvcilcclxuICAgICAgICAgICAgICAgIHRoaXMuY2lyY2xlc09wdGlvbnNbaV0uYmFja2dyb3VuZENvbG9yID0gJyNmZmYnO1xyXG5cclxuICAgICAgICAgICAgaWYgKGV4aXN0KVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jaXJjbGVzW2ldLnVwZGF0ZSh0aGlzLmNpcmNsZXNPcHRpb25zW2ldKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jaXJjbGVzW2ldID0gbmV3IENpcmNsZSh0aGlzLmNpcmNsZXNPcHRpb25zW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TmVlZGxlKCkge1xyXG4gICAgICAgIHRoaXMubmVlZGxlT3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucywgdGhpcy5uZWVkbGVPcHRpb25zKTtcclxuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLmNvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZU9wdGlvbnMuY29sb3IgPSB0aGlzLmNvbW1vbi5pc0luUmFuZ2UodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLCB0aGlzLm9wdGlvbnMuaG9sbG93RWRnZXMpID8gdGhpcy5vcHRpb25zLmNvbG9ycy5hY3RpdmUgOiB0aGlzLm9wdGlvbnMuY29sb3JzLmRlZmF1bHQ7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC52YWx1ZSA+IDEwMCB8fCB0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwudmFsdWUgPCAwKVxyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZU9wdGlvbnMuY29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3JzLmluYWN0aXZlO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMub3B0aW9ucy5oaWRlQm90dG9tKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwudmFsdWUgPj0gODMuMzQgfHwgdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLnZhbHVlIDw9IDE2LjY3KVxyXG4gICAgICAgICAgICAgICAgdGhpcy5uZWVkbGVPcHRpb25zLmNvbG9yID0gdGhpcy5vcHRpb25zLmNvbG9ycy5pbmFjdGl2ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLm5lZWRsZSkge1xyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZS51cGRhdGUodGhpcy5uZWVkbGVPcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZSA9IG5ldyBOZWVkbGUodGhpcy5uZWVkbGVPcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFZGdlcygpIHtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucywgdGhpcy5lZGdlc09wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuZWRnZXNPcHRpb25zLnN0cm9rZVdpZHRoID0gdGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoO1xyXG4gICAgICAgIHRoaXMuZWRnZXNPcHRpb25zLmNvbG9yID0gdGhpcy5vcHRpb25zLmNvbG9ycy5hY3RpdmU7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMuaG9sbG93RWRnZXMgPSB0aGlzLm9wdGlvbnMuaG9sbG93RWRnZXM7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMuYmFja2dyb3VuZENvbG9yID0gdGhpcy5vcHRpb25zLmhvbGxvd0VkZ2VzQmdDb2xvcjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZWRnZXMpXHJcbiAgICAgICAgICAgIHRoaXMuZWRnZXMudXBkYXRlKHRoaXMuZWRnZXNPcHRpb25zKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHRoaXMuZWRnZXMgPSBuZXcgRWRnZXModGhpcy5lZGdlc09wdGlvbnMpO1xyXG4gICAgICAgIGxldCBsZWZ0ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxlZnQtZWRnZV0nKTtcclxuICAgICAgICBsZXQgcmlnaHQgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtcmlnaHQtZWRnZV0nKTtcclxuICAgICAgICBpZiAobGVmdCAmJiByaWdodCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5zaG93RWRnZXMpIHtcclxuICAgICAgICAgICAgICAgIGxlZnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgIHJpZ2h0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBsZWZ0LnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgICAgICAgIHJpZ2h0LnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZXRJY29uKCkge1xyXG4gICAgICAgIHRoaXMuaWNvbk9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLmljb25PcHRpb25zLCB0aGlzLmljb25PcHRpb25zKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuaWNvbilcclxuICAgICAgICAgICAgdGhpcy5pY29uLnVwZGF0ZSh0aGlzLmljb25PcHRpb25zKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHRoaXMuaWNvbiA9IG5ldyBJY29uKHRoaXMuaWNvbk9wdGlvbnMpO1xyXG4gICAgICAgIGxldCBpbWFnZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1pY29uXScpO1xyXG4gICAgICAgIGlmIChpbWFnZSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5zaG93SWNvbiB8fCAhdGhpcy5pY29uT3B0aW9ucy5zcmMpXHJcbiAgICAgICAgICAgICAgICBpbWFnZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBpbWFnZS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgTmVlZGxlT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBOZWVkbGUge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIGNvbW1vbjogQ29tbW9uO1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBvcHRpb25zOiBOZWVkbGVPcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcblxyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XHJcblxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gdGhpcy5jb21tb24uanNvblRvSHRtbChcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICdzdHlsZSc6ICdwb3NpdGlvbjogYWJzb2x1dGU7ei1pbmRleDogNDA7dHJhbnNmb3JtLW9yaWdpbjogNTAlIDg1JTt0cmFuc2Zvcm06IHNjYWxlKDEuMTI1KTt0cmFuc2l0aW9uLWR1cmF0aW9uOiAuNXM7IHRvcDogLTRweDsnLFxyXG4gICAgICAgICAgICAgICAgICAgICdkYXRhLW5lZWRsZSc6ICcnXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdmcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3ZlcnNpb24nOiAnMS4xJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICd4bWxucyc6ICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAneG1sbnM6eGxpbmsnOiAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAneCc6ICcwcHgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3knOiAnMHB4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICd2aWV3Qm94JzogJzAgMCAxMS41IDEwMy44JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICd4bWw6c3BhY2UnOiAncHJlc2VydmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogYGVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMTEuNSAxMDMuODtwb3NpdGlvbjogcmVsYXRpdmU7IG1hcmdpbjogYXV0bzsgZGlzcGxheTogYmxvY2s7YFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGF0aCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkJzogJ00xMC40LDk1LjZjLTAuNC0wLjktMS0xLjYtMS43LTIuMUw1LjcsMS4zTDIuOCw5My41Yy0xLjksMS4zLTIuNiwzLjgtMS43LDZjMS4xLDIuNSw0LDMuOCw2LjYsMi43QzEwLjIsMTAxLjEsMTEuNCw5OC4yLDEwLjQsOTUuNnonXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IE5lZWRsZU9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVPcHRpb25zKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2V0RGl2KHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5zZXRTdmcodGhpcy5vcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXREaXYob3B0aW9uczogTmVlZGxlT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIGxldCBkaXYgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IGRpdlN0eWxlID0gdGhpcy5jb21tb24uZ2V0TmVlZGxlU3R5bGUob3B0aW9ucy5yYWRpdXMsIG9wdGlvbnMubWluTWF4VmFsLnZhbHVlLCBvcHRpb25zLnNjYWxlKTtcclxuICAgICAgICBkaXYuc3R5bGUubGVmdCA9IGRpdlN0eWxlLmxlZnQ7XHJcbiAgICAgICAgZGl2LnN0eWxlLnRyYW5zZm9ybSA9IGRpdlN0eWxlLnRyYW5zZm9ybTtcclxuICAgICAgICBkaXYuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEVsZW1lbnQoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHNldFN2ZyhvcHRpb25zOiBOZWVkbGVPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHN2ZyA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdzdmcnKTtcclxuICAgICAgICBsZXQgc3ZnU3R5bGUgPSB0aGlzLmNvbW1vbi5nZXROZWVkbGVJbm5lclN0eWxlKG9wdGlvbnMucmFkaXVzKTtcclxuICAgICAgICBzdmcuc3R5bGUud2lkdGggPSBzdmdTdHlsZS53aWR0aDtcclxuICAgICAgICBzdmcuc3R5bGUuaGVpZ2h0ID0gc3ZnU3R5bGUuaGVpZ2h0O1xyXG4gICAgICAgIC8vIHRyeSB7XHJcbiAgICAgICAgLy8gICAgIHN2Zy5zZXRBdHRyaWJ1dGVOUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAneG1sbnMnLCB3aW5kb3cubG9jYXRpb24uaG9zdCk7XHJcbiAgICAgICAgLy8gICAgIHN2Zy5zZXRBdHRyaWJ1dGVOUygnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsICd4bWxuczp4bGluaycsIHdpbmRvdy5sb2NhdGlvbi5ob3N0KTtcclxuICAgICAgICAvLyAgICAgc3ZnLnNldEF0dHJpYnV0ZU5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICd4bWw6c3BhY2UnLCAncHJlc2VydmUnKTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gY2F0Y2ggKGUpIHtcclxuICAgICAgICAvLyAgICAgLy8gY29uc29sZS5sb2coZSk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIGxldCBwYXRoID0gc3ZnLnF1ZXJ5U2VsZWN0b3IoJ3BhdGgnKTtcclxuICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZU5TKG51bGwsICdmaWxsJywgb3B0aW9ucy5jb2xvcik7XHJcbiAgICAgICAgcGF0aC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uICsgJ21zJztcclxuICAgIH1cclxufSIsImltcG9ydCB7IFJhbmdlT3B0aW9ucywgQ2lyY2xlT3B0aW9ucywgSnNvblRvSHRtbEVsZW1lbnQsIEVkZ2VzT3B0aW9ucywgU2lkZVN0YXRlIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuaW1wb3J0IHsgQ29tbW9uIH0gZnJvbSAnLi9jb21tb24nO1xyXG5pbXBvcnQgeyBDaXJjbGUgfSBmcm9tICcuL2NpcmNsZSc7XHJcbmltcG9ydCB7IEVkZ2VzIH0gZnJvbSAnLi9lZGdlcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgUmFuZ2Uge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIG9wdGlvbnM6IFJhbmdlT3B0aW9ucztcclxuICAgIHByaXZhdGUgY29tbW9uOiBDb21tb247XHJcbiAgICBwcml2YXRlIGNpcmNsZU9wdGlvbnM6IENpcmNsZU9wdGlvbnM7XHJcbiAgICBwcml2YXRlIGNpcmNsZTogQ2lyY2xlO1xyXG4gICAgcHJpdmF0ZSBlZGdlc09wdGlvbnM6IEVkZ2VzT3B0aW9ucztcclxuICAgIHByaXZhdGUgZWRnZXM6IEVkZ2VzO1xyXG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogYW55LCBvcHRpb25zPzogUmFuZ2VPcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgICAgICB0aGlzLmNvbW1vbiA9IG5ldyBDb21tb24oKTtcclxuICAgICAgICAvLyBzZXQgZGVmYXVsdCBvcHRpb25zXHJcbiAgICAgICAgbGV0IGRlZmF1bHRPcHRpb25zID0gdGhpcy5nZXREZWZhdWx0T3B0aW9ucygpO1xyXG5cclxuICAgICAgICAvLyBvdmVycmlkZSBkZWZhdWx0cyB3aXRoIHVzZXIgb3B0aW9uc1xyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZChkZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHRoaXMuZml4T3B0aW9ucygpO1xyXG5cclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBmaXhPcHRpb25zKCkge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy50aXRsZSA9IHRoaXMuY29tbW9uLnNldElubmVyVGV4dERlZmF1bHRzKHRoaXMub3B0aW9ucy50aXRsZSk7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoID0gdGhpcy5jb21tb24uZml4U3Ryb2tlV2lkdGgodGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoKTtcclxuICAgICAgICB0aGlzLm9wdGlvbnMucmFkaXVzID0gdGhpcy5jb21tb24uZml4UmFkaXVzKHRoaXMub3B0aW9ucy5yYWRpdXMpO1xyXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuaGlkZUJvdHRvbSkge1xyXG4gICAgICAgICAgICBsZXQgcG9ydGlvblRvSGlkZSA9IDAuMzMzNDtcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLm1pbk1heFZhbC5tYXggPSB0aGlzLmNvbW1vbi5ub3JtYWxpemVCeVBlcmNlbnRhZ2UodGhpcy5vcHRpb25zLm1pbk1heFZhbC5tYXgsIHBvcnRpb25Ub0hpZGUpO1xyXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMubWluTWF4VmFsLm1pbiA9IHRoaXMuY29tbW9uLm5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh0aGlzLm9wdGlvbnMubWluTWF4VmFsLm1pbiwgcG9ydGlvblRvSGlkZSk7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5taW5NYXhWYWwudmFsdWUgPSB0aGlzLmNvbW1vbi5ub3JtYWxpemVCeVBlcmNlbnRhZ2UodGhpcy5vcHRpb25zLm1pbk1heFZhbC52YWx1ZSwgcG9ydGlvblRvSGlkZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgbGV0IGg0ID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnaDQnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMTA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDEwMCU7IHRyYW5zaXRpb24tcHJvcGVydHk6IGNvbG9yOyBtYXJnaW46IDA7dG9wOiA1MCU7bGVmdDogMDt0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBsZXQgaDRFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbChoNCkgYXMgYW55O1xyXG5cclxuICAgICAgICBsZXQgb2JqID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICdkYXRhLXJhbmdlJzogJydcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gYXMgSnNvblRvSHRtbEVsZW1lbnQ7XHJcblxyXG4gICAgICAgIGxldCBpbm5lckVsZW0gPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKG9iaik7XHJcblxyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZChoNEVsZW0pO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoZmFsc2UpO1xyXG5cclxuICAgICAgICBcclxuXHJcblxyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLmNpcmNsZS5nZXRFbGVtZW50KCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLmVkZ2VzLmdldExlZnRFbGVtZW50KCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLmVkZ2VzLmdldFJpZ2h0RWxlbWVudCgpKTtcclxuICAgICAgICBcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGlubmVyRWxlbSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IFJhbmdlT3B0aW9ucyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuZml4T3B0aW9ucygpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVPcHRpb25zKHNldFdyYXA/OiBib29sZWFuKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHNldFdyYXApXHJcbiAgICAgICAgICAgIHRoaXMuc2V0V3JhcCh0aGlzLm9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0VGl0bGUodGhpcy5vcHRpb25zKTtcclxuICAgICAgICB0aGlzLnNldENpcmNsZSgpO1xyXG4gICAgICAgIHRoaXMuc2V0RWRnZXMoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRUaXRsZShvcHRpb25zOiBSYW5nZU9wdGlvbnMpIHtcclxuICAgICAgICBsZXQgaDQgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignaDQnKTtcclxuICAgICAgICBpZiAoIWg0KSByZXR1cm47XHJcbiAgICAgICAgaDQuc3R5bGUuY29sb3IgPSBvcHRpb25zLmhpZ2hsaWdodCA/IG9wdGlvbnMuY29sb3JzLmFjdGl2ZSA6IG9wdGlvbnMuY29sb3JzLmRlZmF1bHQ7XHJcbiAgICAgICAgaDQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICAgICAgaDQuc3R5bGUuZm9udFNpemUgPSBvcHRpb25zLnRpdGxlLmZvbnRTaXplICsgJ21zJztcclxuICAgICAgICBoNC5zdHlsZS5mb250RmFtaWx5ID0gb3B0aW9ucy50aXRsZS5mb250RmFtaWx5O1xyXG4gICAgICAgIGg0LnN0eWxlLmZvbnRXZWlnaHQgPSBvcHRpb25zLnRpdGxlLmZvbnRXZWlnaHQ7XHJcbiAgICAgICAgaDQuc3R5bGUubGV0dGVyU3BhY2luZyA9IG9wdGlvbnMudGl0bGUubGV0dGVyU3BhY2luZztcclxuICAgICAgICBoNC5zdHlsZS5saW5lSGVpZ2h0ID0gb3B0aW9ucy50aXRsZS5saW5lSGVpZ2h0ICsgJ3B4JztcclxuICAgICAgICBoNC50ZXh0Q29udGVudCA9IG9wdGlvbnMudGl0bGUudGV4dDtcclxuICAgICAgICBoNC5zdHlsZS50b3AgPSAnY2FsYyg1MCUgLSAnICsgKG9wdGlvbnMudGl0bGUubGluZUhlaWdodCAvIDIpICsgJ3B4KSc7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0V3JhcChvcHRpb25zOiBSYW5nZU9wdGlvbnMpIHtcclxuICAgICAgICBsZXQgd3JhcCA9IHRoaXMuZWxlbWVudDtcclxuICAgICAgICBsZXQgZGltID0gKG9wdGlvbnMucmFkaXVzICogMikgKyAncHgnO1xyXG4gICAgICAgIHdyYXAuc3R5bGUud2lkdGggPSBkaW07XHJcbiAgICAgICAgd3JhcC5zdHlsZS5oZWlnaHQgPSBkaW07XHJcbiAgICAgICAgd3JhcC5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGVmYXVsdE9wdGlvbnMoKTogUmFuZ2VPcHRpb25zIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBtaW5NYXhWYWw6IHtcclxuICAgICAgICAgICAgICAgIG1pbjogMzAsXHJcbiAgICAgICAgICAgICAgICBtYXg6IDcwLFxyXG4gICAgICAgICAgICAgICAgdmFsdWU6IDU1XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRpdGxlOiB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0OiAnJyxcclxuICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjb2xvcnM6IHRoaXMuY29tbW9uLmdldERlZmF1bHRDb2xvcnMoKSxcclxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IDYsXHJcbiAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiA1MDAsXHJcbiAgICAgICAgICAgIHJhZGl1czogODgsXHJcbiAgICAgICAgICAgIHNob3dFZGdlczogdHJ1ZSxcclxuICAgICAgICAgICAgc2hvd0ljb246IHRydWUsXHJcbiAgICAgICAgICAgIGhvbGxvd0VkZ2VzOiBTaWRlU3RhdGUuTm9uZSxcclxuICAgICAgICAgICAgaGlkZUJvdHRvbTogdHJ1ZSxcclxuICAgICAgICAgICAgaGlnaGxpZ2h0OiBmYWxzZVxyXG4gICAgICAgIH0gYXMgUmFuZ2VPcHRpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENpcmNsZSgpIHtcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCB0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5mcm9tRGVncmVlID0gdGhpcy5vcHRpb25zLm1pbk1heFZhbC5taW47XHJcbiAgICAgICAgdGhpcy5jaXJjbGVPcHRpb25zLnRvRGVncmVlID0gdGhpcy5vcHRpb25zLm1pbk1heFZhbC5tYXg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5jaXJjbGVPcHRpb25zLmJhY2tncm91bmRDb2xvciA9IHRoaXMuY29tbW9uLmdldENvbXB1dGVkU3R5bGVCeVBhcmVudFJlYyh0aGlzLmVsZW1lbnQsICdiYWNrZ3JvdW5kQ29sb3InKTtcclxuICAgICAgICBpZiAoIXRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IpXHJcbiAgICAgICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSAnI2ZmZic7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNpcmNsZSlcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUudXBkYXRlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZSA9IG5ldyBDaXJjbGUodGhpcy5jaXJjbGVPcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFZGdlcygpIHtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMsIHRoaXMuZWRnZXNPcHRpb25zKTtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5zdHJva2VXaWR0aCA9IHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aDtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvcnMuYWN0aXZlO1xyXG4gICAgICAgIHRoaXMuZWRnZXNPcHRpb25zLmhvbGxvd0VkZ2VzID0gdGhpcy5vcHRpb25zLmhvbGxvd0VkZ2VzO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0aGlzLmVkZ2VzKVxyXG4gICAgICAgICAgICB0aGlzLmVkZ2VzLnVwZGF0ZSh0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLmVkZ2VzID0gbmV3IEVkZ2VzKHRoaXMuZWRnZXNPcHRpb25zKTtcclxuICAgICAgICBsZXQgbGVmdCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1sZWZ0LWVkZ2VdJyk7XHJcbiAgICAgICAgbGV0IHJpZ2h0ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXJpZ2h0LWVkZ2VdJyk7XHJcbiAgICAgICAgaWYgKGxlZnQgJiYgcmlnaHQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuc2hvd0VkZ2VzKSB7XHJcbiAgICAgICAgICAgICAgICBsZWZ0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICByaWdodC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGVmdC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgICAgICAgICByaWdodC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBTcGlubmVyT3B0aW9ucywgSnNvblRvSHRtbEVsZW1lbnQsIFJHQkEsIElubmVyVGV4dCwgQ2lyY2xlT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuaW1wb3J0IHsgQ2lyY2xlIH0gZnJvbSAnLi9jaXJjbGUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNwaW5uZXIge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIG9wdGlvbnM6IFNwaW5uZXJPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjaXJjbGVPcHRpb25zOiBDaXJjbGVPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIHByaXZhdGUgY2lyY2xlOiBDaXJjbGU7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBhbnksIG9wdGlvbnM/OiBTcGlubmVyT3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcbiAgICAgICAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xyXG4gICAgICAgIGxldCBkZWZhdWx0T3B0aW9ucyA9IHRoaXMuZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgLy8gb3ZlcnJpZGUgZGVmYXVsdHMgd2l0aCB1c2VyIG9wdGlvbnNcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYWN0aXZlRGVncmVlID09IDEwMClcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmFjdGl2ZURlZ3JlZSA9IDk5Ljk5OTk7XHJcblxyXG4gICAgICAgIHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCA9IHRoaXMuY29tbW9uLmZpeFN0cm9rZVdpZHRoKHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCk7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnJhZGl1cyA9IHRoaXMuY29tbW9uLmZpeFJhZGl1cyh0aGlzLm9wdGlvbnMucmFkaXVzKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGVmYXVsdE9wdGlvbnMoKTogU3Bpbm5lck9wdGlvbnMge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGNvbG9yczogdGhpcy5jb21tb24uZ2V0RGVmYXVsdENvbG9ycygpLFxyXG4gICAgICAgICAgICBhY3RpdmVEZWdyZWU6IDEwLFxyXG4gICAgICAgICAgICByYWRpdXM6IDg4LFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogNixcclxuICAgICAgICAgICAgcm90YXRpb25TcGVlZDogNTAwMCxcclxuICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDUwMCxcclxuICAgICAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgICAgIHRleHQ6ICcnLFxyXG4gICAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodDogZmFsc2VcclxuICAgICAgICB9IGFzIFNwaW5uZXJPcHRpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUob3B0aW9uczogU3Bpbm5lck9wdGlvbnMpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmFjdGl2ZURlZ3JlZSA9PSAxMDApXHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5hY3RpdmVEZWdyZWUgPSA5OS45OTk5O1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy50aXRsZSA9IHRoaXMuY29tbW9uLnNldElubmVyVGV4dERlZmF1bHRzKHRoaXMub3B0aW9ucy50aXRsZSk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlT3B0aW9ucygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNldFRpdGxlKHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5zZXREaXYodGhpcy5vcHRpb25zKTtcclxuICAgICAgICB0aGlzLnNldENpcmNsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRpdGxlKG9wdGlvbnM6IFNwaW5uZXJPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IGg0ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2g0Jyk7XHJcbiAgICAgICAgaDQuc3R5bGUuY29sb3IgPSBvcHRpb25zLmhpZ2hsaWdodCA/IG9wdGlvbnMuY29sb3JzLmFjdGl2ZSA6IG9wdGlvbnMuY29sb3JzLmRlZmF1bHQ7XHJcbiAgICAgICAgLy8gaDQuc3R5bGUudG9wID0gKChvcHRpb25zLnJhZGl1cykgLSAob3B0aW9ucy50aXRsZS5mb250U2l6ZSAvIDIpKSArICdweCc7XHJcbiAgICAgICAgaDQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICAgICAgaDQuc3R5bGUuZm9udFNpemUgPSBvcHRpb25zLnRpdGxlLmZvbnRTaXplICsgJ21zJztcclxuICAgICAgICBoNC5zdHlsZS5mb250RmFtaWx5ID0gb3B0aW9ucy50aXRsZS5mb250RmFtaWx5O1xyXG4gICAgICAgIGg0LnN0eWxlLmZvbnRXZWlnaHQgPSBvcHRpb25zLnRpdGxlLmZvbnRXZWlnaHQ7XHJcbiAgICAgICAgaDQuc3R5bGUubGV0dGVyU3BhY2luZyA9IG9wdGlvbnMudGl0bGUubGV0dGVyU3BhY2luZztcclxuICAgICAgICBoNC5zdHlsZS5saW5lSGVpZ2h0ID0gb3B0aW9ucy50aXRsZS5saW5lSGVpZ2h0ICsgJ3B4JztcclxuICAgICAgICBoNC50ZXh0Q29udGVudCA9IG9wdGlvbnMudGl0bGUudGV4dDtcclxuICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAvLyAgICAgbGV0IGggPSBwYXJzZUludChnZXRDb21wdXRlZFN0eWxlKGg0KS5oZWlnaHQucmVwbGFjZSgncHgnLCAnJykpO1xyXG4gICAgICAgIC8vICAgICBpZiAoIWlzTmFOKGgpKVxyXG4gICAgICAgIC8vICAgICAgICAgaDQuc3R5bGUudG9wID0gKChvcHRpb25zLnJhZGl1cykgLSAoaCAvIDIpKSArICdweCc7XHJcbiAgICAgICAgLy8gfSwgMTApO1xyXG4gICAgfVxyXG5cclxuICAgIHNldERpdihvcHRpb25zOiBTcGlubmVyT3B0aW9ucykge1xyXG4gICAgICAgIGxldCBkaXYgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignZGl2W2RhdGEtc3Bpbm5lcl0nKTtcclxuICAgICAgICBsZXQgZGltID0gb3B0aW9ucy5yYWRpdXMgKiAyICsgJ3B4JztcclxuICAgICAgICBkaXYuc3R5bGUud2lkdGggPSBkaW07XHJcbiAgICAgICAgZGl2LnN0eWxlLmhlaWdodCA9IGRpbTtcclxuICAgICAgICBkaXYuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMub3B0aW9ucy50aXRsZSA9IHRoaXMuY29tbW9uLnNldElubmVyVGV4dERlZmF1bHRzKHRoaXMub3B0aW9ucy50aXRsZSk7XHJcbiAgICAgICAgbGV0IGg0ID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnaDQnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMTA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDEwMCU7IHRyYW5zaXRpb24tcHJvcGVydHk6IGNvbG9yOyBtYXJnaW46IDA7dG9wOiA1MCU7bGVmdDogMDt0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBsZXQgaDRFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbChoNCkgYXMgYW55O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBvYmogPSB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdkaXYnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogYHBvc2l0aW9uOiByZWxhdGl2ZTtgLFxyXG4gICAgICAgICAgICAgICAgJ2RhdGEtc3Bpbm5lcic6ICcnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGFzIEpzb25Ub0h0bWxFbGVtZW50O1xyXG4gICAgICAgIGxldCBpbm5lckVsZW0gPSB0aGlzLmNvbW1vbi5qc29uVG9IdG1sKG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuc2V0Q2lyY2xlKCk7XHJcblxyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZChoNEVsZW0pO1xyXG5cclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQodGhpcy5jaXJjbGUuZ2V0RWxlbWVudCgpKTtcclxuXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGlubmVyRWxlbSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENpcmNsZSgpIHtcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCB0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5mcm9tRGVncmVlID0gLXRoaXMub3B0aW9ucy5hY3RpdmVEZWdyZWUgLyAyO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy50b0RlZ3JlZSA9IHRoaXMub3B0aW9ucy5hY3RpdmVEZWdyZWUgLyAyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5lbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jaXJjbGUpIHtcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUudXBkYXRlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUgPSBuZXcgQ2lyY2xlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBUaW1lck9wdGlvbnMsIEpzb25Ub0h0bWxFbGVtZW50LCBDaXJjbGVPcHRpb25zLCBFZGdlc09wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBDb21tb24gfSBmcm9tICcuL2NvbW1vbic7XHJcbmltcG9ydCB7IENpcmNsZSB9IGZyb20gJy4vY2lyY2xlJztcclxuaW1wb3J0IHsgRWRnZXMgfSBmcm9tICcuL2VkZ2VzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBUaW1lciB7XHJcbiAgICBwcml2YXRlIGVsZW1lbnQ6IGFueTtcclxuICAgIHByaXZhdGUgb3B0aW9uczogVGltZXJPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIHByaXZhdGUgY2lyY2xlT3B0aW9uczogQ2lyY2xlT3B0aW9ucztcclxuICAgIHByaXZhdGUgY2lyY2xlOiBDaXJjbGU7XHJcbiAgICBwcml2YXRlIGVkZ2VzT3B0aW9uczogRWRnZXNPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBlZGdlczogRWRnZXM7XHJcbiAgICBwcml2YXRlIGZ1bGxTZWNvbmRzOiBudW1iZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBhbnksIG9wdGlvbnM/OiBUaW1lck9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuY29tbW9uID0gbmV3IENvbW1vbigpO1xyXG4gICAgICAgIC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcclxuICAgICAgICBsZXQgZGVmYXVsdE9wdGlvbnMgPSB0aGlzLmdldERlZmF1bHRPcHRpb25zKCk7XHJcblxyXG4gICAgICAgIC8vIG92ZXJyaWRlIGRlZmF1bHRzIHdpdGggdXNlciBvcHRpb25zXHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnRpdGxlID0gdGhpcy5jb21tb24uc2V0SW5uZXJUZXh0RGVmYXVsdHModGhpcy5vcHRpb25zLnRpdGxlKTtcclxuXHJcbiAgICAgICAgdGhpcy5maXhPcHRpb25zKCk7XHJcblxyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZpeE9wdGlvbnMoKSB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoID0gdGhpcy5jb21tb24uZml4U3Ryb2tlV2lkdGgodGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoKTtcclxuICAgICAgICB0aGlzLm9wdGlvbnMucmFkaXVzID0gdGhpcy5jb21tb24uZml4UmFkaXVzKHRoaXMub3B0aW9ucy5yYWRpdXMpO1xyXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucGVyY2VudGFnZSA+PSAxMDApXHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5wZXJjZW50YWdlID0gOTkuOTk5O1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgbGV0IGN1cnJlbnRTZWNvbmRzID0gdGhpcy5jb21tb24uZ2V0U2Vjb25kc0Zyb21UaW1lKHRoaXMub3B0aW9ucy50aW1lKTtcclxuICAgICAgICB0aGlzLmZ1bGxTZWNvbmRzID0gY3VycmVudFNlY29uZHMgKiAxMDAgLyB0aGlzLm9wdGlvbnMucGVyY2VudGFnZTtcclxuXHJcbiAgICAgICAgbGV0IGg0ID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnaDQnLFxyXG4gICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgJ3N0eWxlJzogJ3Bvc2l0aW9uOiBhYnNvbHV0ZTt6LWluZGV4OiAxMDt0ZXh0LWFsaWduOiBjZW50ZXI7d2lkdGg6IDEwMCU7dG9wOiA1MCU7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO3RyYW5zaXRpb24tcHJvcGVydHk6IGNvbG9yO2xlZnQ6IDA7IG1hcmdpbjogMDsnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtY2xvY2snOiAnJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NwYW4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YS1udW1iZXInOiAnJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJyN0ZXh0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJzonXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLW51bWJlcic6ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnI3RleHQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnOidcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtbnVtYmVyJzogJydcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtdGV4dCc6ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBsZXQgaDRFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbChoNCkgYXMgYW55O1xyXG5cclxuICAgICAgICBsZXQgb2JqID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICdzdHlsZSc6IGBwb3NpdGlvbjogcmVsYXRpdmU7YCxcclxuICAgICAgICAgICAgICAgICdkYXRhLXNwaW5uZXInOiAnJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuICAgICAgICBsZXQgaW5uZXJFbGVtID0gdGhpcy5jb21tb24uanNvblRvSHRtbChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoZmFsc2UpO1xyXG5cclxuICAgICAgICBpbm5lckVsZW0uYXBwZW5kQ2hpbGQoaDRFbGVtKTtcclxuXHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuY2lyY2xlLmdldEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXMuZ2V0TGVmdEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXMuZ2V0UmlnaHRFbGVtZW50KCkpO1xyXG5cclxuICAgICAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoaW5uZXJFbGVtKTtcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKHRydWUpO1xyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVUaW1lcigpO1xyXG4gICAgICAgIH0sIDEwMDApO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUob3B0aW9uczogVGltZXJPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5maXhPcHRpb25zKCk7XHJcbiAgICAgICAgLy8gdGhpcy5maXhPcHRpb25zKCk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVBlcmNlbnRhZ2UoKSB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnBlcmNlbnRhZ2UgPSB0aGlzLmNvbW1vbi5nZXRTZWNvbmRzRnJvbVRpbWUodGhpcy5vcHRpb25zLnRpbWUpIC8gdGhpcy5mdWxsU2Vjb25kcyAqIDEwMDtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVUaW1lcigpIHtcclxuICAgICAgICB0aGlzLnVwZGF0ZVBlcmNlbnRhZ2UoKTtcclxuICAgICAgICBpZiAodGhpcy5jb21tb24uZGVjcmVhc2VUaW1lKHRoaXMub3B0aW9ucy50aW1lKSkge1xyXG4gICAgICAgICAgICAvLyBUT0RPIHRpbWUgaXMgdXAhXHJcbiAgICAgICAgICAgIC8vIHRoaXMuc3RhdHVzID0gJ1RpbWUgaXMgdXAhJztcclxuICAgICAgICAgICAgLy8gcmV0dXJuIHRoaXMubW9kZSA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVRpbWVyKCk7XHJcbiAgICAgICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnVwZGF0ZU9wdGlvbnModHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlT3B0aW9ucyhzZXRXcmFwPzogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgICAgIGlmIChzZXRXcmFwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0V3JhcCh0aGlzLm9wdGlvbnMpO1xyXG4gICAgICAgICAgICB0aGlzLnNldFRpdGxlKHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2V0Q2lyY2xlKCk7XHJcbiAgICAgICAgdGhpcy5zZXRFZGdlcygpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEVkZ2VzKCkge1xyXG4gICAgICAgIHRoaXMuZWRnZXNPcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgdGhpcy5lZGdlc09wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMuZWRnZXNPcHRpb25zLm1pbk1heFZhbCA9IHtcclxuICAgICAgICAgICAgbWluOiB0aGlzLmNpcmNsZU9wdGlvbnMuZnJvbURlZ3JlZSxcclxuICAgICAgICAgICAgbWF4OiB0aGlzLmNpcmNsZU9wdGlvbnMudG9EZWdyZWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLm9wdGlvbnMucGVyY2VudGFnZVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5zdHJva2VXaWR0aCA9IHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aDtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvcnMuYWN0aXZlO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5lZGdlcylcclxuICAgICAgICAgICAgdGhpcy5lZGdlcy51cGRhdGUodGhpcy5lZGdlc09wdGlvbnMpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5lZGdlcyA9IG5ldyBFZGdlcyh0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAgICAgbGV0IGxlZnQgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbGVmdC1lZGdlXScpO1xyXG4gICAgICAgIGxldCByaWdodCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1yaWdodC1lZGdlXScpO1xyXG4gICAgICAgIGlmIChsZWZ0ICYmIHJpZ2h0KSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLnNob3dFZGdlcykge1xyXG4gICAgICAgICAgICAgICAgbGVmdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxlZnQuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldFdyYXAob3B0aW9uczogVGltZXJPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IHdyYXAgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IGRpbSA9IChvcHRpb25zLnJhZGl1cyAqIDIpICsgJ3B4JztcclxuICAgICAgICB3cmFwLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRpdGxlKG9wdGlvbnM6IFRpbWVyT3B0aW9ucykge1xyXG4gICAgICAgIGxldCBoNCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdoNCcpO1xyXG4gICAgICAgIGg0LnN0eWxlLmNvbG9yID0gb3B0aW9ucy5wZXJjZW50YWdlID09IDAgPyBvcHRpb25zLmNvbG9ycy5hY3RpdmUgOiBvcHRpb25zLmNvbG9ycy5kZWZhdWx0O1xyXG4gICAgICAgIC8vIGg0LnN0eWxlLnRvcCA9ICgob3B0aW9ucy5yYWRpdXMpIC0gKG9wdGlvbnMudGl0bGUuZm9udFNpemUgLyAyKSkgKyAncHgnO1xyXG4gICAgICAgIGg0LnN0eWxlLnRvcCA9ICc1MCUnO1xyXG4gICAgICAgIGg0LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG9wdGlvbnMuYW5pbWF0aW9uRHVyYXRpb24gKyAnbXMnO1xyXG4gICAgICAgIGg0LnN0eWxlLmZvbnRTaXplID0gb3B0aW9ucy50aXRsZS5mb250U2l6ZSArICdtcyc7XHJcbiAgICAgICAgaDQuc3R5bGUuZm9udEZhbWlseSA9IG9wdGlvbnMudGl0bGUuZm9udEZhbWlseTtcclxuICAgICAgICBoNC5zdHlsZS5mb250V2VpZ2h0ID0gb3B0aW9ucy50aXRsZS5mb250V2VpZ2h0O1xyXG4gICAgICAgIGg0LnN0eWxlLmxldHRlclNwYWNpbmcgPSBvcHRpb25zLnRpdGxlLmxldHRlclNwYWNpbmc7XHJcbiAgICAgICAgaDQuc3R5bGUubGluZUhlaWdodCA9IG9wdGlvbnMudGl0bGUubGluZUhlaWdodCArICdweCc7XHJcbiAgICAgICAgbGV0IHNwYW5zID0gaDQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtY2xvY2tdIHNwYW5bZGF0YS1udW1iZXJdJyk7XHJcbiAgICAgICAgc3BhbnMuZm9yRWFjaCgoZWxlbWVudDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuY29sb3IgPSBvcHRpb25zLmNvbG9ycy5kZWZhdWx0O1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChvcHRpb25zLnBlcmNlbnRhZ2UgPiAwKSB7XHJcbiAgICAgICAgICAgIGg0LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNsb2NrXScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgICAgICBzcGFuc1swXS50ZXh0Q29udGVudCA9IHRoaXMuY29tbW9uLnBhZFdpdGhaaXJvKG9wdGlvbnMudGltZS5ob3Vycy50b1N0cmluZygpKTtcclxuICAgICAgICAgICAgc3BhbnNbMV0udGV4dENvbnRlbnQgPSB0aGlzLmNvbW1vbi5wYWRXaXRoWmlybyhvcHRpb25zLnRpbWUubWludXRlcy50b1N0cmluZygpKTtcclxuICAgICAgICAgICAgc3BhbnNbMl0udGV4dENvbnRlbnQgPSB0aGlzLmNvbW1vbi5wYWRXaXRoWmlybyhvcHRpb25zLnRpbWUuc2Vjb25kcy50b1N0cmluZygpKTtcclxuICAgICAgICAgICAgaDQucXVlcnlTZWxlY3RvcignW2RhdGEtdGV4dF0nKS50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaDQucXVlcnlTZWxlY3RvcignW2RhdGEtY2xvY2tdJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgaDQucXVlcnlTZWxlY3RvcignW2RhdGEtdGV4dF0nKS50ZXh0Q29udGVudCA9IG9wdGlvbnMudGl0bGUudGV4dDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgLy8gICAgIGxldCBoID0gcGFyc2VJbnQoZ2V0Q29tcHV0ZWRTdHlsZShoNCkuaGVpZ2h0LnJlcGxhY2UoJ3B4JywgJycpKTtcclxuICAgICAgICAvLyAgICAgaWYgKCFpc05hTihoKSlcclxuICAgICAgICAvLyAgICAgICAgIGg0LnN0eWxlLnRvcCA9ICgob3B0aW9ucy5yYWRpdXMpIC0gKGggLyAyKSkgKyAncHgnO1xyXG4gICAgICAgIC8vIH0sIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXREZWZhdWx0T3B0aW9ucygpOiBUaW1lck9wdGlvbnMge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGNvbG9yczogdGhpcy5jb21tb24uZ2V0RGVmYXVsdENvbG9ycygpLFxyXG4gICAgICAgICAgICByYWRpdXM6IDg4LFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogNixcclxuICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDUwMCxcclxuICAgICAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgICAgIHRleHQ6ICd0aW1lIGlzIHVwIScsXHJcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTgsXHJcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcsXHJcbiAgICAgICAgICAgICAgICBsZXR0ZXJTcGFjaW5nOiAnMXB4J1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0aW1lOiB7XHJcbiAgICAgICAgICAgICAgICBob3VyczogMyxcclxuICAgICAgICAgICAgICAgIG1pbnV0ZXM6IDI0LFxyXG4gICAgICAgICAgICAgICAgc2Vjb25kczogNDJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcGVyY2VudGFnZTogOTkuOTk5LFxyXG4gICAgICAgICAgICBzaG93RWRnZXM6IHRydWVcclxuICAgICAgICB9IGFzIFRpbWVyT3B0aW9ucztcclxuICAgIH1cclxuXHJcbiAgICBzZXRDaXJjbGUoKSB7XHJcbiAgICAgICAgdGhpcy5jaXJjbGVPcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgdGhpcy5jaXJjbGVPcHRpb25zKTtcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuZnJvbURlZ3JlZSA9IDUwO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy50b0RlZ3JlZSA9IHRoaXMub3B0aW9ucy5wZXJjZW50YWdlICsgNTA7XHJcblxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5lbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jaXJjbGUpXHJcbiAgICAgICAgICAgIHRoaXMuY2lyY2xlLnVwZGF0ZSh0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUgPSBuZXcgQ2lyY2xlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBUdW5lT3B0aW9ucywgQ2lyY2xlT3B0aW9ucywgTmVlZGxlT3B0aW9ucywgSnNvblRvSHRtbEVsZW1lbnQsIEVkZ2VzT3B0aW9ucywgSWNvbk9wdGlvbnMsIFNpZGVTdGF0ZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4vY29tbW9uJztcclxuaW1wb3J0IHsgQ2lyY2xlIH0gZnJvbSAnLi9jaXJjbGUnO1xyXG5pbXBvcnQgeyBOZWVkbGUgfSBmcm9tICcuL25lZWRsZSc7XHJcbmltcG9ydCB7IEVkZ2VzIH0gZnJvbSAnLi9lZGdlcyc7XHJcbmltcG9ydCB7IEljb24gfSBmcm9tICcuL2ljb24nO1xyXG5cclxuZXhwb3J0IGNsYXNzIFR1bmUge1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIG9wdGlvbnM6IFR1bmVPcHRpb25zO1xyXG4gICAgcHJpdmF0ZSBjb21tb246IENvbW1vbjtcclxuICAgIHByaXZhdGUgY2lyY2xlT3B0aW9uczogQ2lyY2xlT3B0aW9ucztcclxuICAgIHByaXZhdGUgY2lyY2xlOiBDaXJjbGU7XHJcbiAgICBwcml2YXRlIG5lZWRsZU9wdGlvbnM6IE5lZWRsZU9wdGlvbnM7XHJcbiAgICBwcml2YXRlIG5lZWRsZTogTmVlZGxlO1xyXG4gICAgcHJpdmF0ZSBlZGdlc09wdGlvbnM6IEVkZ2VzT3B0aW9ucztcclxuICAgIHByaXZhdGUgZWRnZXM6IEVkZ2VzO1xyXG4gICAgcHJpdmF0ZSBpY29uT3B0aW9uczogSWNvbk9wdGlvbnM7XHJcbiAgICBwcml2YXRlIGljb246IEljb247XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBhbnksIG9wdGlvbnM/OiBUdW5lT3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5jb21tb24gPSBuZXcgQ29tbW9uKCk7XHJcbiAgICAgICAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xyXG4gICAgICAgIGxldCBkZWZhdWx0T3B0aW9ucyA9IHRoaXMuZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgLy8gb3ZlcnJpZGUgZGVmYXVsdHMgd2l0aCB1c2VyIG9wdGlvbnNcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICB0aGlzLmZpeE9wdGlvbnMoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgZml4T3B0aW9ucygpIHtcclxuICAgICAgICAvLyB0aGlzLm9wdGlvbnMudGl0bGUgPSB0aGlzLmNvbW1vbi5zZXRJbm5lclRleHREZWZhdWx0cyh0aGlzLm9wdGlvbnMudGl0bGUpO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCA9IHRoaXMuY29tbW9uLmZpeFN0cm9rZVdpZHRoKHRoaXMub3B0aW9ucy5zdHJva2VXaWR0aCk7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnJhZGl1cyA9IHRoaXMuY29tbW9uLmZpeFJhZGl1cyh0aGlzLm9wdGlvbnMucmFkaXVzKTtcclxuXHJcbiAgICAgICAgLy8gaWYgd2UncmUgaGlkaW5nIGJvdHRvbSB3ZSBzaG91bGQgdGFrZSB0aG9lcyB2YWx1ZXMgaW4gdG8gY29uc2lkdXJhdGlvblxyXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuaGlkZUJvdHRvbSkge1xyXG4gICAgICAgICAgICBsZXQgcG9ydGlvblRvSGlkZSA9IDAuMzMzNDtcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLm1heCA9IHRoaXMuY29tbW9uLm5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwubWF4LCBwb3J0aW9uVG9IaWRlKTtcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLm1pbiA9IHRoaXMuY29tbW9uLm5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwubWluLCBwb3J0aW9uVG9IaWRlKTtcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLnZhbHVlID0gdGhpcy5jb21tb24ubm9ybWFsaXplQnlQZXJjZW50YWdlKHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC52YWx1ZSwgcG9ydGlvblRvSGlkZSk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuaWNvbk9wdGlvbnMgJiYgdHlwZW9mIHRoaXMub3B0aW9ucy5pY29uT3B0aW9ucy5kZWdyZWUgPT09ICdudW1iZXInKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLmljb25PcHRpb25zLmRlZ3JlZSA9IHRoaXMuY29tbW9uLm5vcm1hbGl6ZUJ5UGVyY2VudGFnZSh0aGlzLm9wdGlvbnMuaWNvbk9wdGlvbnMuZGVncmVlLCBwb3J0aW9uVG9IaWRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICBsZXQgb2JqID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnZGl2JyxcclxuICAgICAgICAgICAgYXR0cnM6IHtcclxuICAgICAgICAgICAgICAgICdkYXRhLXR1bmUnOiAnJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBhcyBKc29uVG9IdG1sRWxlbWVudDtcclxuXHJcbiAgICAgICAgbGV0IGlubmVyRWxlbSA9IHRoaXMuY29tbW9uLmpzb25Ub0h0bWwob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKGZhbHNlKTtcclxuXHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuY2lyY2xlLmdldEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMubmVlZGxlLmdldEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXMuZ2V0TGVmdEVsZW1lbnQoKSk7XHJcbiAgICAgICAgaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRoaXMuZWRnZXMuZ2V0UmlnaHRFbGVtZW50KCkpO1xyXG4gICAgICAgIGlubmVyRWxlbS5hcHBlbmRDaGlsZCh0aGlzLmljb24uZ2V0RWxlbWVudCgpKTtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGlubmVyRWxlbSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKG9wdGlvbnM6IFR1bmVPcHRpb25zKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5maXhPcHRpb25zKCk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVPcHRpb25zKHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZU9wdGlvbnMoc2V0V3JhcD86IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgICAgICBpZiAoc2V0V3JhcClcclxuICAgICAgICAgICAgdGhpcy5zZXRXcmFwKHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5zZXRDaXJjbGUoKTtcclxuICAgICAgICB0aGlzLnNldE5lZWRsZSgpO1xyXG4gICAgICAgIHRoaXMuc2V0RWRnZXMoKTtcclxuICAgICAgICB0aGlzLnNldEljb24oKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRXcmFwKG9wdGlvbnM6IFR1bmVPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IHdyYXAgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IGRpbSA9IChvcHRpb25zLnJhZGl1cyAqIDIpICsgJ3B4JztcclxuICAgICAgICB3cmFwLnN0eWxlLndpZHRoID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUuaGVpZ2h0ID0gZGltO1xyXG4gICAgICAgIHdyYXAuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xyXG4gICAgfVxyXG5cclxuICAgIGdldERlZmF1bHRPcHRpb25zKCk6IFR1bmVPcHRpb25zIHtcclxuICAgICAgICBsZXQgY29sb3JzID0gdGhpcy5jb21tb24uZ2V0RGVmYXVsdENvbG9ycygpO1xyXG4gICAgICAgIGxldCBkZWZSYWRpdXMgPSA4OCwgYW5pbWF0aW9uRHVyYXRpb24gPSA1MDA7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmVlZGxlT3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgbWluTWF4VmFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAzMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDcwLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA1NVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBjb2xvcnMuYWN0aXZlLFxyXG4gICAgICAgICAgICAgICAgc2NhbGU6IDEuMTI1LFxyXG4gICAgICAgICAgICAgICAgcmFkaXVzOiBkZWZSYWRpdXMsXHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogYW5pbWF0aW9uRHVyYXRpb24sXHJcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2VcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaWNvbk9wdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBhbmltYXRpb25EdXJhdGlvbixcclxuICAgICAgICAgICAgICAgIGRlZ3JlZTogNTAsXHJcbiAgICAgICAgICAgICAgICByYWRpdXM6IGRlZlJhZGl1cyxcclxuXHRcdFx0XHRyYWRpdXNPZmZzZXQ6IDAsXHJcbiAgICAgICAgICAgICAgICBzcmM6ICcnLFxyXG4gICAgICAgICAgICAgICAgZGltZW5zaW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNSxcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdG9wOiAwLFxyXG4gICAgICAgICAgICAgICAgbGVmdDogMCxcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDFcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29sb3JzOiBjb2xvcnMsXHJcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiA2LFxyXG4gICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogYW5pbWF0aW9uRHVyYXRpb24sXHJcbiAgICAgICAgICAgIHJhZGl1czogZGVmUmFkaXVzLFxyXG4gICAgICAgICAgICBzaG93RWRnZXM6IHRydWUsXHJcbiAgICAgICAgICAgIHNob3dJY29uOiB0cnVlLFxyXG4gICAgICAgICAgICBob2xsb3dFZGdlczogU2lkZVN0YXRlLk5vbmUsXHJcbiAgICAgICAgICAgIC8vIHRpdGxlOiB0aGlzLmNvbW1vbi5zZXRJbm5lclRleHREZWZhdWx0cygpLFxyXG4gICAgICAgICAgICBoaWRlQm90dG9tOiB0cnVlLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmZmZmJyxcclxuICAgICAgICAgICAgaG9sbG93RWRnZXNCZ0NvbG9yOiAnI2ZmZmZmZidcclxuICAgICAgICB9IGFzIFR1bmVPcHRpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENpcmNsZSgpIHtcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMgPSB0aGlzLmNvbW1vbi5leHRlbmQodGhpcy5vcHRpb25zLCB0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5mcm9tRGVncmVlID0gdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLm1pbjtcclxuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMudG9EZWdyZWUgPSB0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwubWF4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2lyY2xlT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLmNvbW1vbi5nZXRDb21wdXRlZFN0eWxlQnlQYXJlbnRSZWModGhpcy5lbGVtZW50LCAnYmFja2dyb3VuZENvbG9yJyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jaXJjbGUpXHJcbiAgICAgICAgICAgIHRoaXMuY2lyY2xlLnVwZGF0ZSh0aGlzLmNpcmNsZU9wdGlvbnMpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jaXJjbGUgPSBuZXcgQ2lyY2xlKHRoaXMuY2lyY2xlT3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TmVlZGxlKCkge1xyXG4gICAgICAgIHRoaXMubmVlZGxlT3B0aW9ucyA9IHRoaXMuY29tbW9uLmV4dGVuZCh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucywgdGhpcy5uZWVkbGVPcHRpb25zKTtcclxuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLmNvbG9yKVxyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZU9wdGlvbnMuY29sb3IgPSB0aGlzLmNvbW1vbi5pc0luUmFuZ2UodGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLCB0aGlzLm9wdGlvbnMuaG9sbG93RWRnZXMpID8gdGhpcy5vcHRpb25zLmNvbG9ycy5hY3RpdmUgOiB0aGlzLm9wdGlvbnMuY29sb3JzLmRlZmF1bHQ7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLm1pbk1heFZhbC52YWx1ZSA+IDEwMCB8fCB0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwudmFsdWUgPCAwKVxyXG4gICAgICAgICAgICB0aGlzLm5lZWRsZU9wdGlvbnMuY29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3JzLmluYWN0aXZlO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMub3B0aW9ucy5oaWRlQm90dG9tKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMubmVlZGxlT3B0aW9ucy5taW5NYXhWYWwudmFsdWUgPj0gODMuMzQgfHwgdGhpcy5vcHRpb25zLm5lZWRsZU9wdGlvbnMubWluTWF4VmFsLnZhbHVlIDw9IDE2LjY3KVxyXG4gICAgICAgICAgICAgICAgdGhpcy5uZWVkbGVPcHRpb25zLmNvbG9yID0gdGhpcy5vcHRpb25zLmNvbG9ycy5pbmFjdGl2ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHRoaXMubmVlZGxlKSB7XHJcbiAgICAgICAgICAgIHRoaXMubmVlZGxlLnVwZGF0ZSh0aGlzLm5lZWRsZU9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHRoaXMubmVlZGxlID0gbmV3IE5lZWRsZSh0aGlzLm5lZWRsZU9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEVkZ2VzKCkge1xyXG4gICAgICAgIHRoaXMuZWRnZXNPcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucy5uZWVkbGVPcHRpb25zLCB0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMuc3Ryb2tlV2lkdGggPSB0aGlzLm9wdGlvbnMuc3Ryb2tlV2lkdGg7XHJcbiAgICAgICAgdGhpcy5lZGdlc09wdGlvbnMuY29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3JzLmFjdGl2ZTtcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5ob2xsb3dFZGdlcyA9IHRoaXMub3B0aW9ucy5ob2xsb3dFZGdlcztcclxuICAgICAgICB0aGlzLmVkZ2VzT3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLm9wdGlvbnMuaG9sbG93RWRnZXNCZ0NvbG9yO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0aGlzLmVkZ2VzKVxyXG4gICAgICAgICAgICB0aGlzLmVkZ2VzLnVwZGF0ZSh0aGlzLmVkZ2VzT3B0aW9ucyk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLmVkZ2VzID0gbmV3IEVkZ2VzKHRoaXMuZWRnZXNPcHRpb25zKTtcclxuICAgICAgICBsZXQgbGVmdCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1sZWZ0LWVkZ2VdJyk7XHJcbiAgICAgICAgbGV0IHJpZ2h0ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXJpZ2h0LWVkZ2VdJyk7XHJcbiAgICAgICAgaWYgKGxlZnQgJiYgcmlnaHQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuc2hvd0VkZ2VzKSB7XHJcbiAgICAgICAgICAgICAgICBsZWZ0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICByaWdodC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGVmdC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgICAgICAgICByaWdodC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0SWNvbigpIHtcclxuICAgICAgICB0aGlzLmljb25PcHRpb25zID0gdGhpcy5jb21tb24uZXh0ZW5kKHRoaXMub3B0aW9ucy5pY29uT3B0aW9ucywgdGhpcy5pY29uT3B0aW9ucyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHRoaXMuaWNvbilcclxuICAgICAgICAgICAgdGhpcy5pY29uLnVwZGF0ZSh0aGlzLmljb25PcHRpb25zKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHRoaXMuaWNvbiA9IG5ldyBJY29uKHRoaXMuaWNvbk9wdGlvbnMpO1xyXG4gICAgICAgIGxldCBpbWFnZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1pY29uXScpO1xyXG4gICAgICAgIGlmIChpbWFnZSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5zaG93SWNvbiB8fCAhdGhpcy5pY29uT3B0aW9ucy5zcmMpIFxyXG4gICAgICAgICAgICAgICAgaW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgaW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ=="}